

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 11 11:41:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F1330
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F1330 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00086A                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for main@F2343
    75  00086A  2D                 	db	45
    76  00086B  2D                 	db	45
    77  00086C  2D                 	db	45
    78  00086D  2D                 	db	45
    79  00086E  2D                 	db	45
    80  00086F  2D                 	db	45
    81  000870  2D                 	db	45
    82  000871  2D                 	db	45
    83  000872  2D                 	db	45
    84  000873  00                 	db	0
    85                           
    86                           ;initializer for _UART_buffer
    87  000874  31                 	db	49
    88  000875  32                 	db	50
    89  000876  33                 	db	51
    90  000877  34                 	db	52
    91  000878  35                 	db	53
    92  000879  36                 	db	54
    93  00087A  37                 	db	55
    94  00087B  38                 	db	56
    95  00087C  39                 	db	57
    96  00087D  30                 	db	48
    97  00087E  31                 	db	49
    98  00087F  32                 	db	50
    99  000880  33                 	db	51
   100  000881  34                 	db	52
   101  000882  35                 	db	53
   102  000883  36                 	db	54
   103  0000                     _PORTAbits	set	3968
   104  0000                     _PORTBbits	set	3969
   105  0000                     _OSCTUNEbits	set	3995
   106  0000                     _OSCCONbits	set	4051
   107  0000                     _TRISBbits	set	3987
   108  0000                     _TRISAbits	set	3986
   109  0000                     _ADRESL	set	4035
   110  0000                     _ADRESH	set	4036
   111  0000                     _ADCON2bits	set	4032
   112  0000                     _ADCON1bits	set	4033
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _RCREG	set	4014
   115  0000                     _TXREG	set	4013
   116  0000                     _SPBRG	set	4015
   117  0000                     _BAUDCONbits	set	4024
   118  0000                     _TXSTAbits	set	4012
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _INTCONbits	set	4082
   121  0000                     _PIE1bits	set	3997
   122  0000                     _LATB3	set	31827
   123  0000                     _LATA0	set	31816
   124  0000                     _LATB1	set	31825
   125  0000                     _LATB0	set	31824
   126  0000                     _TRMT	set	32097
   127                           
   128                           	psect	smallconst
   129  000100                     __psmallconst:
   130                           	opt stack 0
   131  000100  00                 	db	0
   132  000101                     STR_9:
   133  000101  4D                 	db	77	;'M'
   134  000102  4F                 	db	79	;'O'
   135  000103  54                 	db	84	;'T'
   136  000104  49                 	db	73	;'I'
   137  000105  4F                 	db	79	;'O'
   138  000106  4E                 	db	78	;'N'
   139  000107  20                 	db	32
   140  000108  31                 	db	49	;'1'
   141  000109  20                 	db	32
   142  00010A  4E                 	db	78	;'N'
   143  00010B  4F                 	db	79	;'O'
   144  00010C  54                 	db	84	;'T'
   145  00010D  20                 	db	32
   146  00010E  44                 	db	68	;'D'
   147  00010F  45                 	db	69	;'E'
   148  000110  54                 	db	84	;'T'
   149  000111  45                 	db	69	;'E'
   150  000112  43                 	db	67	;'C'
   151  000113  54                 	db	84	;'T'
   152  000114  45                 	db	69	;'E'
   153  000115  44                 	db	68	;'D'
   154  000116  0D                 	db	13
   155  000117  0A                 	db	10
   156  000118  00                 	db	0
   157  000119                     STR_11:
   158  000119  4D                 	db	77	;'M'
   159  00011A  4F                 	db	79	;'O'
   160  00011B  54                 	db	84	;'T'
   161  00011C  49                 	db	73	;'I'
   162  00011D  4F                 	db	79	;'O'
   163  00011E  4E                 	db	78	;'N'
   164  00011F  20                 	db	32
   165  000120  32                 	db	50	;'2'
   166  000121  20                 	db	32
   167  000122  4E                 	db	78	;'N'
   168  000123  4F                 	db	79	;'O'
   169  000124  54                 	db	84	;'T'
   170  000125  20                 	db	32
   171  000126  44                 	db	68	;'D'
   172  000127  45                 	db	69	;'E'
   173  000128  54                 	db	84	;'T'
   174  000129  45                 	db	69	;'E'
   175  00012A  43                 	db	67	;'C'
   176  00012B  54                 	db	84	;'T'
   177  00012C  45                 	db	69	;'E'
   178  00012D  44                 	db	68	;'D'
   179  00012E  0D                 	db	13
   180  00012F  0A                 	db	10
   181  000130  00                 	db	0
   182  000131                     STR_8:
   183  000131  4D                 	db	77	;'M'
   184  000132  4F                 	db	79	;'O'
   185  000133  54                 	db	84	;'T'
   186  000134  49                 	db	73	;'I'
   187  000135  4F                 	db	79	;'O'
   188  000136  4E                 	db	78	;'N'
   189  000137  20                 	db	32
   190  000138  31                 	db	49	;'1'
   191  000139  20                 	db	32
   192  00013A  44                 	db	68	;'D'
   193  00013B  45                 	db	69	;'E'
   194  00013C  54                 	db	84	;'T'
   195  00013D  45                 	db	69	;'E'
   196  00013E  43                 	db	67	;'C'
   197  00013F  54                 	db	84	;'T'
   198  000140  45                 	db	69	;'E'
   199  000141  44                 	db	68	;'D'
   200  000142  0D                 	db	13
   201  000143  0A                 	db	10
   202  000144  00                 	db	0
   203  000145                     STR_10:
   204  000145  4D                 	db	77	;'M'
   205  000146  4F                 	db	79	;'O'
   206  000147  54                 	db	84	;'T'
   207  000148  49                 	db	73	;'I'
   208  000149  4F                 	db	79	;'O'
   209  00014A  4E                 	db	78	;'N'
   210  00014B  20                 	db	32
   211  00014C  32                 	db	50	;'2'
   212  00014D  20                 	db	32
   213  00014E  44                 	db	68	;'D'
   214  00014F  45                 	db	69	;'E'
   215  000150  54                 	db	84	;'T'
   216  000151  45                 	db	69	;'E'
   217  000152  43                 	db	67	;'C'
   218  000153  54                 	db	84	;'T'
   219  000154  45                 	db	69	;'E'
   220  000155  44                 	db	68	;'D'
   221  000156  0D                 	db	13
   222  000157  0A                 	db	10
   223  000158  00                 	db	0
   224  000159                     STR_15:
   225  000159  41                 	db	65	;'A'
   226  00015A  43                 	db	67	;'C'
   227  00015B  5F                 	db	95	;'_'
   228  00015C  50                 	db	80	;'P'
   229  00015D  4F                 	db	79	;'O'
   230  00015E  57                 	db	87	;'W'
   231  00015F  45                 	db	69	;'E'
   232  000160  52                 	db	82	;'R'
   233  000161  20                 	db	32
   234  000162  4F                 	db	79	;'O'
   235  000163  46                 	db	70	;'F'
   236  000164  46                 	db	70	;'F'
   237  000165  0D                 	db	13
   238  000166  0A                 	db	10
   239  000167  00                 	db	0
   240  000168                     STR_14:
   241  000168  41                 	db	65	;'A'
   242  000169  43                 	db	67	;'C'
   243  00016A  5F                 	db	95	;'_'
   244  00016B  50                 	db	80	;'P'
   245  00016C  4F                 	db	79	;'O'
   246  00016D  57                 	db	87	;'W'
   247  00016E  45                 	db	69	;'E'
   248  00016F  52                 	db	82	;'R'
   249  000170  20                 	db	32
   250  000171  4F                 	db	79	;'O'
   251  000172  4E                 	db	78	;'N'
   252  000173  0D                 	db	13
   253  000174  0A                 	db	10
   254  000175  00                 	db	0
   255  000176                     STR_1:
   256  000176  48                 	db	72	;'H'
   257  000177  65                 	db	101	;'e'
   258  000178  6C                 	db	108	;'l'
   259  000179  6C                 	db	108	;'l'
   260  00017A  6F                 	db	111	;'o'
   261  00017B  20                 	db	32
   262  00017C  57                 	db	87	;'W'
   263  00017D  6F                 	db	111	;'o'
   264  00017E  72                 	db	114	;'r'
   265  00017F  6C                 	db	108	;'l'
   266  000180  64                 	db	100	;'d'
   267  000181  00                 	db	0
   268  000182                     STR_16:
   269  000182  2D                 	db	45
   270  000183  2D                 	db	45
   271  000184  2D                 	db	45
   272  000185  2D                 	db	45
   273  000186  2D                 	db	45
   274  000187  2D                 	db	45
   275  000188  2D                 	db	45
   276  000189  2D                 	db	45
   277  00018A  0D                 	db	13
   278  00018B  0A                 	db	10
   279  00018C  00                 	db	0
   280  00018D                     STR_3:
   281  00018D  41                 	db	65	;'A'
   282  00018E  44                 	db	68	;'D'
   283  00018F  43                 	db	67	;'C'
   284  000190  20                 	db	32
   285  000191  56                 	db	86	;'V'
   286  000192  41                 	db	65	;'A'
   287  000193  4C                 	db	76	;'L'
   288  000194  55                 	db	85	;'U'
   289  000195  45                 	db	69	;'E'
   290  000196  3A                 	db	58	;':'
   291  000197  00                 	db	0
   292  000198                     STR_7:
   293  000198  53                 	db	83	;'S'
   294  000199  54                 	db	84	;'T'
   295  00019A  41                 	db	65	;'A'
   296  00019B  54                 	db	84	;'T'
   297  00019C  55                 	db	85	;'U'
   298  00019D  53                 	db	83	;'S'
   299  00019E  3A                 	db	58	;':'
   300  00019F  0D                 	db	13
   301  0001A0  0A                 	db	10
   302  0001A1  00                 	db	0
   303  0001A2                     STR_13:
   304  0001A2  4C                 	db	76	;'L'
   305  0001A3  45                 	db	69	;'E'
   306  0001A4  44                 	db	68	;'D'
   307  0001A5  20                 	db	32
   308  0001A6  4F                 	db	79	;'O'
   309  0001A7  46                 	db	70	;'F'
   310  0001A8  46                 	db	70	;'F'
   311  0001A9  0D                 	db	13
   312  0001AA  0A                 	db	10
   313  0001AB  00                 	db	0
   314  0001AC                     STR_12:
   315  0001AC  4C                 	db	76	;'L'
   316  0001AD  45                 	db	69	;'E'
   317  0001AE  44                 	db	68	;'D'
   318  0001AF  20                 	db	32
   319  0001B0  4F                 	db	79	;'O'
   320  0001B1  4E                 	db	78	;'N'
   321  0001B2  0D                 	db	13
   322  0001B3  0A                 	db	10
   323  0001B4  00                 	db	0
   324  0001B5                     STR_6:
   325  0001B5  4C                 	db	76	;'L'
   326  0001B6  45                 	db	69	;'E'
   327  0001B7  44                 	db	68	;'D'
   328  0001B8  4F                 	db	79	;'O'
   329  0001B9  46                 	db	70	;'F'
   330  0001BA  46                 	db	70	;'F'
   331  0001BB  00                 	db	0
   332  0001BC                     STR_5:
   333  0001BC  4C                 	db	76	;'L'
   334  0001BD  45                 	db	69	;'E'
   335  0001BE  44                 	db	68	;'D'
   336  0001BF  4F                 	db	79	;'O'
   337  0001C0  4E                 	db	78	;'N'
   338  0001C1  00                 	db	0
   339  0001C2                     STR_2:
   340  0001C2  42                 	db	66	;'B'
   341  0001C3  41                 	db	65	;'A'
   342  0001C4  54                 	db	84	;'T'
   343  0001C5  00                 	db	0
   344  0000                     
   345                           ; #config settings
   346  0001C6  00                 	db	0	; dummy byte at the end
   347  0000                     
   348                           	psect	cinit
   349  00075C                     __pcinit:
   350                           	opt stack 0
   351  00075C                     start_initialization:
   352                           	opt stack 0
   353  00075C                     __initialization:
   354                           	opt stack 0
   355                           
   356                           ; Initialize objects allocated to COMRAM (26 bytes)
   357                           ; load TBLPTR registers with __pidataCOMRAM
   358  00075C  0E6A               	movlw	low __pidataCOMRAM
   359  00075E  6EF6               	movwf	tblptrl,c
   360  000760  0E08               	movlw	high __pidataCOMRAM
   361  000762  6EF7               	movwf	tblptrh,c
   362  000764  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   363  000766  6EF8               	movwf	tblptru,c
   364  000768  EE00  F03B         	lfsr	0,__pdataCOMRAM
   365  00076C  EE10 F01A          	lfsr	1,26
   366  000770                     copy_data0:
   367  000770  0009               	tblrd		*+
   368  000772  CFF5 FFEE          	movff	tablat,postinc0
   369  000776  50E5               	movf	postdec1,w,c
   370  000778  50E1               	movf	fsr1l,w,c
   371  00077A  E1FA               	bnz	copy_data0
   372                           
   373                           ; Clear objects allocated to COMRAM (2 bytes)
   374  00077C  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   375  00077E  6A55               	clrf	__pbssCOMRAM& (0+255),c
   376  000780                     end_of_initialization:
   377                           	opt stack 0
   378  000780                     __end_of__initialization:
   379                           	opt stack 0
   380  000780  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   381  000782  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   382  000784  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383  000786  6EF8               	movwf	tblptru,c
   384  000788  0100               	movlb	0
   385  00078A  EFE4  F000         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	bssCOMRAM
   395  000055                     __pbssCOMRAM:
   396                           	opt stack 0
   397  000055                     _old_status:
   398                           	opt stack 0
   399  000055                     	ds	1
   400  000056                     _status:
   401                           	opt stack 0
   402  000056                     	ds	1
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	dataCOMRAM
   412  00003B                     __pdataCOMRAM:
   413                           	opt stack 0
   414  00003B                     main@F2343:
   415                           	opt stack 0
   416  00003B                     	ds	10
   417  000045                     _UART_buffer:
   418                           	opt stack 0
   419  000045                     	ds	16
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	cstackCOMRAM
   429  000001                     __pcstackCOMRAM:
   430                           	opt stack 0
   431  000001                     ??_UART_add_buffer:
   432  000001                     
   433                           ; 1 bytes @ 0x0
   434  000001                     	ds	20
   435  000015                     UART_add_buffer@i:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x14
   439  000015                     	ds	2
   440  000017                     ?_strlen:
   441                           	opt stack 0
   442  000017                     ?_strchr:
   443                           	opt stack 0
   444  000017                     ?___lwdiv:
   445                           	opt stack 0
   446  000017                     ?___lwmod:
   447                           	opt stack 0
   448  000017                     UART_Write_byte@data:
   449                           	opt stack 0
   450  000017                     delay_us@repeat_1:
   451                           	opt stack 0
   452  000017                     delay_ms@repeat_2:
   453                           	opt stack 0
   454  000017                     ___lwdiv@dividend:
   455                           	opt stack 0
   456  000017                     ___lwmod@dividend:
   457                           	opt stack 0
   458  000017                     memset@p1:
   459                           	opt stack 0
   460  000017                     strchr@ptr:
   461                           	opt stack 0
   462  000017                     strlen@s:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x16
   466  000017                     	ds	1
   467  000018                     UART_Write_Text@text:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x17
   471  000018                     	ds	1
   472  000019                     ??_strlen:
   473  000019                     ??_delay_ms:
   474  000019                     ___lwdiv@divisor:
   475                           	opt stack 0
   476  000019                     ___lwmod@divisor:
   477                           	opt stack 0
   478  000019                     memset@c:
   479                           	opt stack 0
   480  000019                     strchr@chr:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x18
   484  000019                     	ds	1
   485  00001A                     ??_UART_Write_Text:
   486  00001A                     ?_ADC_Get:
   487                           	opt stack 0
   488  00001A                     delay_s@repeat_3:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x19
   492  00001A                     	ds	1
   493  00001B                     ___lwmod@counter:
   494                           	opt stack 0
   495  00001B                     ___lwdiv@quotient:
   496                           	opt stack 0
   497  00001B                     memset@n:
   498                           	opt stack 0
   499  00001B                     strlen@cp:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x1A
   503  00001B                     	ds	1
   504  00001C                     ??_ADC_Get:
   505  00001C                     UART_Write_Text@i:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x1B
   509  00001C                     	ds	1
   510  00001D                     ?_strncmp:
   511                           	opt stack 0
   512  00001D                     ___lwdiv@counter:
   513                           	opt stack 0
   514  00001D                     memset@p:
   515                           	opt stack 0
   516  00001D                     strncmp@s1:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x1C
   520  00001D                     	ds	1
   521  00001E                     ADC_Get@advalue:
   522                           	opt stack 0
   523  00001E                     utoa@buf:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x1D
   527  00001E                     	ds	1
   528  00001F                     strncmp@s2:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1E
   532  00001F                     	ds	1
   533  000020                     utoa@val:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1F
   537  000020                     	ds	1
   538  000021                     strncmp@len:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x20
   542  000021                     	ds	1
   543  000022                     utoa@base:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x21
   547  000022                     	ds	1
   548  000023                     ??_strncmp:
   549                           
   550                           ; 1 bytes @ 0x22
   551  000023                     	ds	1
   552  000024                     utoa@v:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x23
   556  000024                     	ds	2
   557  000026                     ?_strstr:
   558                           	opt stack 0
   559  000026                     utoa@c:
   560                           	opt stack 0
   561  000026                     strstr@s1:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x25
   565  000026                     	ds	1
   566  000027                     itoa@buf:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x26
   570  000027                     	ds	1
   571  000028                     strstr@s2:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x27
   575  000028                     	ds	1
   576  000029                     itoa@val:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x28
   580  000029                     	ds	1
   581  00002A                     
   582                           ; 1 bytes @ 0x29
   583  00002A                     	ds	1
   584  00002B                     itoa@base:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x2A
   588  00002B                     	ds	2
   589  00002D                     itoa@cp:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2C
   593  00002D                     	ds	2
   594  00002F                     main@buffer:
   595                           	opt stack 0
   596                           
   597                           ; 10 bytes @ 0x2E
   598  00002F                     	ds	10
   599  000039                     main@adcValue:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x38
   603  000039                     	ds	2
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 21 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  buffer         10   46[COMRAM] unsigned char [10]
   622 ;;  adcValue        2   56[COMRAM] unsigned int 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0
   632 ;;      Params:         0       0
   633 ;;      Locals:        12       0
   634 ;;      Temps:          0       0
   635 ;;      Totals:        12       0
   636 ;;Total ram usage:       12 bytes
   637 ;; Hardware stack levels required when called:    4
   638 ;; This function calls:
   639 ;;		_ADC_Get
   640 ;;		_ADC_Init
   641 ;;		_UART_Init
   642 ;;		_UART_Write_Text
   643 ;;		_UART_clean_buffer
   644 ;;		_delay_ms
   645 ;;		_delay_s
   646 ;;		_delay_us
   647 ;;		_itoa
   648 ;;		_strstr
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text0
   655  0001C8                     __ptext0:
   656                           	opt stack 0
   657  0001C8                     _main:
   658                           	opt stack 27
   659                           
   660                           ;main.c: 24: TRISAbits.RA0 = 0b0;
   661                           
   662                           ;incstack = 0
   663  0001C8  9092               	bcf	3986,0,c	;volatile
   664                           
   665                           ;main.c: 25: TRISAbits.RA1 = 0b1;
   666  0001CA  8292               	bsf	3986,1,c	;volatile
   667                           
   668                           ;main.c: 26: TRISAbits.RA4 = 0b1;
   669  0001CC  8892               	bsf	3986,4,c	;volatile
   670                           
   671                           ;main.c: 27: TRISAbits.RA2 = 0b0;
   672  0001CE  9492               	bcf	3986,2,c	;volatile
   673                           
   674                           ;main.c: 28: TRISAbits.RA3 = 0b1;
   675  0001D0  8692               	bsf	3986,3,c	;volatile
   676                           
   677                           ;main.c: 29: TRISBbits.RB0 = 0b0;
   678  0001D2  9093               	bcf	3987,0,c	;volatile
   679                           
   680                           ;main.c: 30: TRISBbits.RB1 = 0b0;
   681  0001D4  9293               	bcf	3987,1,c	;volatile
   682                           
   683                           ;main.c: 32: TRISBbits.RB3 = 0b0;
   684  0001D6  9693               	bcf	3987,3,c	;volatile
   685                           
   686                           ;main.c: 33: TRISBbits.RB2 = 0b1;
   687  0001D8  8493               	bsf	3987,2,c	;volatile
   688                           
   689                           ;main.c: 34: TRISAbits.RA7 = 0b1;
   690  0001DA  8E92               	bsf	3986,7,c	;volatile
   691                           
   692                           ;main.c: 35: TRISAbits.RA6 = 0b1;
   693  0001DC  8C92               	bsf	3986,6,c	;volatile
   694                           
   695                           ;main.c: 36: TRISBbits.RB5 = 0b0;
   696  0001DE  9A93               	bcf	3987,5,c	;volatile
   697                           
   698                           ;main.c: 37: TRISBbits.RB4 = 0b0;
   699  0001E0  9893               	bcf	3987,4,c	;volatile
   700                           
   701                           ;main.c: 40: OSCCONbits.IRCF0 = 0b1;
   702  0001E2  88D3               	bsf	4051,4,c	;volatile
   703                           
   704                           ;main.c: 41: OSCCONbits.IRCF1 = 0b1;
   705  0001E4  8AD3               	bsf	4051,5,c	;volatile
   706                           
   707                           ;main.c: 42: OSCCONbits.IRCF2 = 0b1;
   708  0001E6  8CD3               	bsf	4051,6,c	;volatile
   709                           
   710                           ;main.c: 45: OSCTUNEbits.PLLEN = 0b0;
   711  0001E8  9C9B               	bcf	3995,6,c	;volatile
   712                           
   713                           ;main.c: 47: UART_Init();
   714  0001EA  EC26  F004         	call	_UART_Init	;wreg free
   715                           
   716                           ;main.c: 48: UART_clean_buffer();
   717  0001EE  EC17  F004         	call	_UART_clean_buffer	;wreg free
   718                           
   719                           ;main.c: 50: ADC_Init();
   720  0001F2  EC42  F004         	call	_ADC_Init	;wreg free
   721                           
   722                           ;main.c: 52: status = 0;
   723  0001F6  0E00               	movlw	0
   724  0001F8  6E56               	movwf	_status,c
   725                           
   726                           ;main.c: 53: old_status = 0;
   727  0001FA  0E00               	movlw	0
   728  0001FC  6E55               	movwf	_old_status,c
   729                           
   730                           ;main.c: 59: LATB0 = 0b0;
   731  0001FE  908A               	bcf	3978,0,c	;volatile
   732                           
   733                           ;main.c: 60: LATB1 = 0b0;
   734  000200  928A               	bcf	3978,1,c	;volatile
   735                           
   736                           ;main.c: 62: LATA0 = 0;
   737  000202  9089               	bcf	3977,0,c	;volatile
   738                           
   739                           ;main.c: 63: LATB3 = 0;
   740  000204  968A               	bcf	3978,3,c	;volatile
   741                           
   742                           ;main.c: 64: delay_ms(1);
   743  000206  0E00               	movlw	0
   744  000208  6E18               	movwf	delay_ms@repeat_2+1,c
   745  00020A  0E01               	movlw	1
   746  00020C  6E17               	movwf	delay_ms@repeat_2,c
   747  00020E  ECF6  F003         	call	_delay_ms	;wreg free
   748                           
   749                           ;main.c: 65: delay_s(1);
   750  000212  0E00               	movlw	0
   751  000214  6E1B               	movwf	delay_s@repeat_3+1,c
   752  000216  0E01               	movlw	1
   753  000218  6E1A               	movwf	delay_s@repeat_3,c
   754  00021A  EC07  F004         	call	_delay_s	;wreg free
   755                           
   756                           ;main.c: 66: delay_us(1);
   757  00021E  0E00               	movlw	0
   758  000220  6E18               	movwf	delay_us@repeat_1+1,c
   759  000222  0E01               	movlw	1
   760  000224  6E17               	movwf	delay_us@repeat_1,c
   761  000226  EC4E  F004         	call	_delay_us	;wreg free
   762                           
   763                           ;main.c: 67: LATA0 = 1;
   764  00022A  8089               	bsf	3977,0,c	;volatile
   765                           
   766                           ;main.c: 68: LATB3 = 1;
   767  00022C  868A               	bsf	3978,3,c	;volatile
   768                           
   769                           ;main.c: 69: delay_ms(1);
   770  00022E  0E00               	movlw	0
   771  000230  6E18               	movwf	delay_ms@repeat_2+1,c
   772  000232  0E01               	movlw	1
   773  000234  6E17               	movwf	delay_ms@repeat_2,c
   774  000236  ECF6  F003         	call	_delay_ms	;wreg free
   775                           
   776                           ;main.c: 70: LATA0 = 0;
   777  00023A  9089               	bcf	3977,0,c	;volatile
   778                           
   779                           ;main.c: 71: LATB3 = 0;
   780  00023C  968A               	bcf	3978,3,c	;volatile
   781                           
   782                           ;main.c: 72: delay_ms(1);
   783  00023E  0E00               	movlw	0
   784  000240  6E18               	movwf	delay_ms@repeat_2+1,c
   785  000242  0E01               	movlw	1
   786  000244  6E17               	movwf	delay_ms@repeat_2,c
   787  000246  ECF6  F003         	call	_delay_ms	;wreg free
   788                           
   789                           ;main.c: 74: UART_Write_Text((unsigned char *)"Hello World");
   790  00024A  0E76               	movlw	low STR_1
   791  00024C  6E18               	movwf	UART_Write_Text@text,c
   792  00024E  0E01               	movlw	high STR_1
   793  000250  6E19               	movwf	UART_Write_Text@text+1,c
   794  000252  ECD0  F002         	call	_UART_Write_Text	;wreg free
   795  000256                     
   796                           ;main.c: 78: if (strstr(UART_buffer, "BAT") != (0)) {
   797  000256  0E45               	movlw	low _UART_buffer
   798  000258  6E26               	movwf	strstr@s1,c
   799  00025A  0E00               	movlw	high _UART_buffer
   800  00025C  6E27               	movwf	strstr@s1+1,c
   801  00025E  0EC2               	movlw	low STR_2
   802  000260  6E28               	movwf	strstr@s2,c
   803  000262  0E01               	movlw	high STR_2
   804  000264  6E29               	movwf	strstr@s2+1,c
   805  000266  EC4D  F002         	call	_strstr	;wreg free
   806  00026A  5026               	movf	?_strstr,w,c
   807  00026C  1027               	iorwf	?_strstr+1,w,c
   808  00026E  B4D8               	btfsc	status,2,c
   809  000270  D031               	goto	l120
   810                           
   811                           ;main.c: 79: UART_clean_buffer();
   812  000272  EC17  F004         	call	_UART_clean_buffer	;wreg free
   813                           
   814                           ;main.c: 80: UART_Write_Text((unsigned char *)"ADC VALUE:");
   815  000276  0E8D               	movlw	low STR_3
   816  000278  6E18               	movwf	UART_Write_Text@text,c
   817  00027A  0E01               	movlw	high STR_3
   818  00027C  6E19               	movwf	UART_Write_Text@text+1,c
   819  00027E  ECD0  F002         	call	_UART_Write_Text	;wreg free
   820                           
   821                           ;main.c: 81: unsigned char buffer[10] = "---------\0";
   822  000282  EE20  F03B         	lfsr	2,main@F2343
   823  000286  EE10  F02F         	lfsr	1,main@buffer
   824  00028A  0E09               	movlw	9
   825  00028C                     u711:
   826  00028C  CFDB FFE3          	movff	plusw2,plusw1
   827  000290  06E8               	decf	wreg,f,c
   828  000292  E2FC               	bc	u711
   829                           
   830                           ;main.c: 82: unsigned int adcValue;
   831                           ;main.c: 84: adcValue = ADC_Get();
   832  000294  ECC7  F003         	call	_ADC_Get	;wreg free
   833  000298  C01A  F039         	movff	?_ADC_Get,main@adcValue
   834  00029C  C01B  F03A         	movff	?_ADC_Get+1,main@adcValue+1
   835                           
   836                           ;main.c: 85: itoa(buffer, adcValue, 10);
   837  0002A0  0E2F               	movlw	low main@buffer
   838  0002A2  6E27               	movwf	itoa@buf,c
   839  0002A4  0E00               	movlw	high main@buffer
   840  0002A6  6E28               	movwf	itoa@buf+1,c
   841  0002A8  C039  F029         	movff	main@adcValue,itoa@val
   842  0002AC  C03A  F02A         	movff	main@adcValue+1,itoa@val+1
   843  0002B0  0E00               	movlw	0
   844  0002B2  6E2C               	movwf	itoa@base+1,c
   845  0002B4  0E0A               	movlw	10
   846  0002B6  6E2B               	movwf	itoa@base,c
   847  0002B8  EC32  F003         	call	_itoa	;wreg free
   848                           
   849                           ;main.c: 86: UART_Write_Text(buffer);
   850  0002BC  0E2F               	movlw	low main@buffer
   851  0002BE  6E18               	movwf	UART_Write_Text@text,c
   852  0002C0  0E00               	movlw	high main@buffer
   853  0002C2  6E19               	movwf	UART_Write_Text@text+1,c
   854  0002C4  ECD0  F002         	call	_UART_Write_Text	;wreg free
   855                           
   856                           ;main.c: 87: UART_Write_Text((unsigned char *)"\r\n");
   857  0002C8  0E8A               	movlw	low (STR_16+8)
   858  0002CA  6E18               	movwf	UART_Write_Text@text,c
   859  0002CC  0E01               	movlw	high (STR_16+8)
   860  0002CE  6E19               	movwf	UART_Write_Text@text+1,c
   861  0002D0  ECD0  F002         	call	_UART_Write_Text	;wreg free
   862  0002D4                     l120:
   863                           
   864                           ;main.c: 88: }
   865                           ;main.c: 90: if (PORTBbits.RB2) {
   866  0002D4  A481               	btfss	3969,2,c	;volatile
   867  0002D6  D004               	goto	l123
   868                           
   869                           ;main.c: 91: LATB3 = 1;
   870  0002D8  868A               	bsf	3978,3,c	;volatile
   871                           
   872                           ;main.c: 92: status = (unsigned char)(status | (unsigned char)0b00000001);
   873  0002DA  5056               	movf	_status,w,c
   874  0002DC  0901               	iorlw	1
   875  0002DE  D003               	goto	L2
   876  0002E0                     l123:
   877                           
   878                           ;main.c: 94: LATB3 = 0;
   879  0002E0  968A               	bcf	3978,3,c	;volatile
   880                           
   881                           ;main.c: 95: status = (unsigned char)(status & (unsigned char)0b00001110);
   882  0002E2  5056               	movf	_status,w,c
   883  0002E4  0B0E               	andlw	14
   884  0002E6                     L2:
   885  0002E6  6E56               	movwf	_status,c
   886                           
   887                           ;main.c: 96: }
   888                           ;main.c: 98: if (PORTAbits.RA7) {
   889  0002E8  AE80               	btfss	3968,7,c	;volatile
   890  0002EA  D003               	goto	l125
   891                           
   892                           ;main.c: 99: status = (unsigned char)(status | (unsigned char)0b00000010);
   893  0002EC  5056               	movf	_status,w,c
   894  0002EE  0902               	iorlw	2
   895  0002F0  D002               	goto	L3
   896  0002F2                     l125:
   897                           
   898                           ;main.c: 101: status = (unsigned char)(status & (unsigned char)0b00001101);
   899  0002F2  5056               	movf	_status,w,c
   900  0002F4  0B0D               	andlw	13
   901  0002F6                     L3:
   902  0002F6  6E56               	movwf	_status,c
   903                           
   904                           ;main.c: 102: }
   905                           ;main.c: 104: if (strstr(UART_buffer, "LEDON") != (0)) {
   906  0002F8  0E45               	movlw	low _UART_buffer
   907  0002FA  6E26               	movwf	strstr@s1,c
   908  0002FC  0E00               	movlw	high _UART_buffer
   909  0002FE  6E27               	movwf	strstr@s1+1,c
   910  000300  0EBC               	movlw	low STR_5
   911  000302  6E28               	movwf	strstr@s2,c
   912  000304  0E01               	movlw	high STR_5
   913  000306  6E29               	movwf	strstr@s2+1,c
   914  000308  EC4D  F002         	call	_strstr	;wreg free
   915  00030C  5026               	movf	?_strstr,w,c
   916  00030E  1027               	iorwf	?_strstr+1,w,c
   917  000310  B4D8               	btfsc	status,2,c
   918  000312  D006               	goto	l127
   919                           
   920                           ;main.c: 105: UART_clean_buffer();
   921  000314  EC17  F004         	call	_UART_clean_buffer	;wreg free
   922                           
   923                           ;main.c: 106: LATA0 = 1;
   924  000318  8089               	bsf	3977,0,c	;volatile
   925                           
   926                           ;main.c: 107: status = (unsigned char)(status | (unsigned char)0b00000100);
   927  00031A  5056               	movf	_status,w,c
   928  00031C  0904               	iorlw	4
   929  00031E  6E56               	movwf	_status,c
   930  000320                     l127:
   931                           
   932                           ;main.c: 108: }
   933                           ;main.c: 109: if (strstr(UART_buffer, "LEDOFF") != (0)) {
   934  000320  0E45               	movlw	low _UART_buffer
   935  000322  6E26               	movwf	strstr@s1,c
   936  000324  0E00               	movlw	high _UART_buffer
   937  000326  6E27               	movwf	strstr@s1+1,c
   938  000328  0EB5               	movlw	low STR_6
   939  00032A  6E28               	movwf	strstr@s2,c
   940  00032C  0E01               	movlw	high STR_6
   941  00032E  6E29               	movwf	strstr@s2+1,c
   942  000330  EC4D  F002         	call	_strstr	;wreg free
   943  000334  5026               	movf	?_strstr,w,c
   944  000336  1027               	iorwf	?_strstr+1,w,c
   945  000338  B4D8               	btfsc	status,2,c
   946  00033A  D006               	goto	l128
   947                           
   948                           ;main.c: 110: UART_clean_buffer();
   949  00033C  EC17  F004         	call	_UART_clean_buffer	;wreg free
   950                           
   951                           ;main.c: 111: LATA0 = 0;
   952  000340  9089               	bcf	3977,0,c	;volatile
   953                           
   954                           ;main.c: 112: status = (unsigned char)(status & (unsigned char)0b00001011);
   955  000342  5056               	movf	_status,w,c
   956  000344  0B0B               	andlw	11
   957  000346  6E56               	movwf	_status,c
   958  000348                     l128:
   959                           
   960                           ;main.c: 113: }
   961                           ;main.c: 115: if (PORTAbits.RA1) {
   962  000348  A280               	btfss	3968,1,c	;volatile
   963  00034A  D003               	goto	l129
   964                           
   965                           ;main.c: 116: status = (unsigned char)(status | (unsigned char)0b00001000);
   966  00034C  5056               	movf	_status,w,c
   967  00034E  0908               	iorlw	8
   968  000350  D002               	goto	L1
   969  000352                     l129:
   970                           
   971                           ;main.c: 118: status = (unsigned char)(status & (unsigned char)0b00000111);
   972  000352  5056               	movf	_status,w,c
   973  000354  0B07               	andlw	7
   974  000356                     L1:
   975  000356  6E56               	movwf	_status,c
   976                           
   977                           ;main.c: 119: }
   978                           ;main.c: 121: if (old_status != status) {
   979  000358  5056               	movf	_status,w,c
   980  00035A  1855               	xorwf	_old_status,w,c
   981  00035C  B4D8               	btfsc	status,2,c
   982  00035E  D77B               	goto	l119
   983                           
   984                           ;main.c: 122: UART_Write_Text((unsigned char *)"STATUS:\r\n");
   985  000360  0E98               	movlw	low STR_7
   986  000362  6E18               	movwf	UART_Write_Text@text,c
   987  000364  0E01               	movlw	high STR_7
   988  000366  6E19               	movwf	UART_Write_Text@text+1,c
   989  000368  ECD0  F002         	call	_UART_Write_Text	;wreg free
   990                           
   991                           ;main.c: 125: if ((status & 0b00000001) == 0b00000001) {
   992  00036C  A056               	btfss	_status,0,c
   993  00036E  D007               	goto	l132
   994                           
   995                           ;main.c: 126: UART_Write_Text((unsigned char *)"MOTION 1 DETECTED\r\n");
   996  000370  0E31               	movlw	low STR_8
   997  000372  6E18               	movwf	UART_Write_Text@text,c
   998  000374  0E01               	movlw	high STR_8
   999  000376  6E19               	movwf	UART_Write_Text@text+1,c
  1000  000378  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1001                           
  1002                           ;main.c: 127: } else {
  1003  00037C  D006               	goto	l133
  1004  00037E                     l132:
  1005                           
  1006                           ;main.c: 128: UART_Write_Text((unsigned char *)"MOTION 1 NOT DETECTED\r\n");
  1007  00037E  0E01               	movlw	low STR_9
  1008  000380  6E18               	movwf	UART_Write_Text@text,c
  1009  000382  0E01               	movlw	high STR_9
  1010  000384  6E19               	movwf	UART_Write_Text@text+1,c
  1011  000386  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1012  00038A                     l133:
  1013                           
  1014                           ;main.c: 129: }
  1015                           ;main.c: 131: if ((status & 0b00000010) == 0b00000010) {
  1016  00038A  A256               	btfss	_status,1,c
  1017  00038C  D007               	goto	l134
  1018                           
  1019                           ;main.c: 132: UART_Write_Text((unsigned char *)"MOTION 2 DETECTED\r\n");
  1020  00038E  0E45               	movlw	low STR_10
  1021  000390  6E18               	movwf	UART_Write_Text@text,c
  1022  000392  0E01               	movlw	high STR_10
  1023  000394  6E19               	movwf	UART_Write_Text@text+1,c
  1024  000396  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1025                           
  1026                           ;main.c: 133: } else {
  1027  00039A  D006               	goto	l135
  1028  00039C                     l134:
  1029                           
  1030                           ;main.c: 134: UART_Write_Text((unsigned char *)"MOTION 2 NOT DETECTED\r\n");
  1031  00039C  0E19               	movlw	low STR_11
  1032  00039E  6E18               	movwf	UART_Write_Text@text,c
  1033  0003A0  0E01               	movlw	high STR_11
  1034  0003A2  6E19               	movwf	UART_Write_Text@text+1,c
  1035  0003A4  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1036  0003A8                     l135:
  1037                           
  1038                           ;main.c: 135: }
  1039                           ;main.c: 137: if ((status & 0b00000100) == 0b00000100) {
  1040  0003A8  A456               	btfss	_status,2,c
  1041  0003AA  D007               	goto	l136
  1042                           
  1043                           ;main.c: 138: UART_Write_Text((unsigned char *)"LED ON\r\n");
  1044  0003AC  0EAC               	movlw	low STR_12
  1045  0003AE  6E18               	movwf	UART_Write_Text@text,c
  1046  0003B0  0E01               	movlw	high STR_12
  1047  0003B2  6E19               	movwf	UART_Write_Text@text+1,c
  1048  0003B4  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1049                           
  1050                           ;main.c: 139: } else {
  1051  0003B8  D006               	goto	l137
  1052  0003BA                     l136:
  1053                           
  1054                           ;main.c: 140: UART_Write_Text((unsigned char *)"LED OFF\r\n");
  1055  0003BA  0EA2               	movlw	low STR_13
  1056  0003BC  6E18               	movwf	UART_Write_Text@text,c
  1057  0003BE  0E01               	movlw	high STR_13
  1058  0003C0  6E19               	movwf	UART_Write_Text@text+1,c
  1059  0003C2  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1060  0003C6                     l137:
  1061                           
  1062                           ;main.c: 141: }
  1063                           ;main.c: 143: if ((status & 0b00001000) == 0b00001000) {
  1064  0003C6  A656               	btfss	_status,3,c
  1065  0003C8  D007               	goto	l138
  1066                           
  1067                           ;main.c: 144: UART_Write_Text((unsigned char *)"AC_POWER ON\r\n");
  1068  0003CA  0E68               	movlw	low STR_14
  1069  0003CC  6E18               	movwf	UART_Write_Text@text,c
  1070  0003CE  0E01               	movlw	high STR_14
  1071  0003D0  6E19               	movwf	UART_Write_Text@text+1,c
  1072  0003D2  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1073                           
  1074                           ;main.c: 145: } else {
  1075  0003D6  D006               	goto	l139
  1076  0003D8                     l138:
  1077                           
  1078                           ;main.c: 146: UART_Write_Text((unsigned char *)"AC_POWER OFF\r\n");
  1079  0003D8  0E59               	movlw	low STR_15
  1080  0003DA  6E18               	movwf	UART_Write_Text@text,c
  1081  0003DC  0E01               	movlw	high STR_15
  1082  0003DE  6E19               	movwf	UART_Write_Text@text+1,c
  1083  0003E0  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1084  0003E4                     l139:
  1085                           
  1086                           ;main.c: 147: }
  1087                           ;main.c: 149: UART_Write_Text((unsigned char *)"--------\r\n");
  1088  0003E4  0E82               	movlw	low STR_16
  1089  0003E6  6E18               	movwf	UART_Write_Text@text,c
  1090  0003E8  0E01               	movlw	high STR_16
  1091  0003EA  6E19               	movwf	UART_Write_Text@text+1,c
  1092  0003EC  ECD0  F002         	call	_UART_Write_Text	;wreg free
  1093                           
  1094                           ;main.c: 150: old_status = status;
  1095  0003F0  C056  F055         	movff	_status,_old_status
  1096  0003F4  D730               	goto	l119
  1097  0003F6                     __end_of_main:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           plusw1	equ	0xFE3
  1107                           fsr1l	equ	0xFE1
  1108                           plusw2	equ	0xFDB
  1109                           status	equ	0xFD8
  1110                           
  1111 ;; *************** function _strstr *****************
  1112 ;; Defined at:
  1113 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  s1              2   37[COMRAM] PTR const unsigned char 
  1116 ;;		 -> NULL(0), UART_buffer(16), 
  1117 ;;  s2              2   39[COMRAM] PTR const unsigned char 
  1118 ;;		 -> STR_6(7), STR_5(6), STR_2(4), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2   37[COMRAM] PTR unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0
  1130 ;;      Params:         4       0
  1131 ;;      Locals:         0       0
  1132 ;;      Temps:          0       0
  1133 ;;      Totals:         4       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    2
  1137 ;; This function calls:
  1138 ;;		_strchr
  1139 ;;		_strlen
  1140 ;;		_strncmp
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text1
  1147  00049A                     __ptext1:
  1148                           	opt stack 0
  1149  00049A                     _strstr:
  1150                           	opt stack 28
  1151                           
  1152                           ;incstack = 0
  1153  00049A  D031               	goto	l716
  1154  00049C  C026  F01D         	movff	strstr@s1,strncmp@s1
  1155  0004A0  C027  F01E         	movff	strstr@s1+1,strncmp@s1+1
  1156  0004A4  C028  F01F         	movff	strstr@s2,strncmp@s2
  1157  0004A8  C029  F020         	movff	strstr@s2+1,strncmp@s2+1
  1158  0004AC  C028  F017         	movff	strstr@s2,strlen@s
  1159  0004B0  C029  F018         	movff	strstr@s2+1,strlen@s+1
  1160  0004B4  EC74  F003         	call	_strlen	;wreg free
  1161  0004B8  C017  F021         	movff	?_strlen,strncmp@len
  1162  0004BC  C018  F022         	movff	?_strlen+1,strncmp@len+1
  1163  0004C0  EC8F  F002         	call	_strncmp	;wreg free
  1164  0004C4  501D               	movf	?_strncmp,w,c
  1165  0004C6  101E               	iorwf	?_strncmp+1,w,c
  1166  0004C8  A4D8               	btfss	status,2,c
  1167  0004CA  D005               	goto	l718
  1168  0004CC  C026  F026         	movff	strstr@s1,?_strstr
  1169  0004D0  C027  F027         	movff	strstr@s1+1,?_strstr+1
  1170  0004D4  0012               	return	
  1171  0004D6                     l718:
  1172  0004D6  0E01               	movlw	1
  1173  0004D8  2426               	addwf	strstr@s1,w,c
  1174  0004DA  6E17               	movwf	strchr@ptr,c
  1175  0004DC  0E00               	movlw	0
  1176  0004DE  2027               	addwfc	strstr@s1+1,w,c
  1177  0004E0  6E18               	movwf	strchr@ptr+1,c
  1178  0004E2  C028  FFF6         	movff	strstr@s2,tblptrl
  1179  0004E6  C029  FFF7         	movff	strstr@s2+1,tblptrh
  1180  0004EA                     	if	0	;tblptru may be non-zero
  1181  0004EA                     	endif
  1182  0004EA                     	if	0	;tblptru may be non-zero
  1183  0004EA                     	endif
  1184  0004EA  0008               	tblrd		*
  1185  0004EC  50F5               	movf	tablat,w,c
  1186  0004EE  6E19               	movwf	strchr@chr,c
  1187  0004F0  6A1A               	clrf	strchr@chr+1,c
  1188  0004F2  EC93  F003         	call	_strchr	;wreg free
  1189  0004F6  C017  F026         	movff	?_strchr,strstr@s1
  1190  0004FA  C018  F027         	movff	?_strchr+1,strstr@s1+1
  1191  0004FE                     l716:
  1192  0004FE  5026               	movf	strstr@s1,w,c
  1193  000500  1027               	iorwf	strstr@s1+1,w,c
  1194  000502  B4D8               	btfsc	status,2,c
  1195  000504  D007               	goto	u680
  1196  000506  C026  FFD9         	movff	strstr@s1,fsr2l
  1197  00050A  C027  FFDA         	movff	strstr@s1+1,fsr2h
  1198  00050E  50DF               	movf	indf2,w,c
  1199  000510  A4D8               	btfss	status,2,c
  1200  000512  D7C4               	goto	l717
  1201  000514                     u680:
  1202  000514  0E00               	movlw	0
  1203  000516  6E26               	movwf	?_strstr,c
  1204  000518  0E00               	movlw	0
  1205  00051A  6E27               	movwf	?_strstr+1,c
  1206  00051C  0012               	return	
  1207  00051E                     __end_of_strstr:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           postdec1	equ	0xFE5
  1216                           plusw1	equ	0xFE3
  1217                           fsr1l	equ	0xFE1
  1218                           indf2	equ	0xFDF
  1219                           plusw2	equ	0xFDB
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _strncmp *****************
  1225 ;; Defined at:
  1226 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  s1              2   28[COMRAM] PTR const unsigned char 
  1229 ;;		 -> NULL(0), UART_buffer(16), 
  1230 ;;  s2              2   30[COMRAM] PTR const unsigned char 
  1231 ;;		 -> STR_6(7), STR_5(6), STR_2(4), 
  1232 ;;  len             2   32[COMRAM] unsigned int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2   28[COMRAM] int 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0
  1244 ;;      Params:         6       0
  1245 ;;      Locals:         0       0
  1246 ;;      Temps:          3       0
  1247 ;;      Totals:         9       0
  1248 ;;Total ram usage:        9 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_strstr
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text2
  1259  00051E                     __ptext2:
  1260                           	opt stack 0
  1261  00051E                     _strncmp:
  1262                           	opt stack 28
  1263                           
  1264                           ;incstack = 0
  1265  00051E  D033               	goto	l756
  1266  000520                     l1242:
  1267  000520  C01D  FFD9         	movff	strncmp@s1,fsr2l
  1268  000524  C01E  FFDA         	movff	strncmp@s1+1,fsr2h
  1269  000528  50DF               	movf	indf2,w,c
  1270  00052A  B4D8               	btfsc	status,2,c
  1271  00052C  D00F               	goto	u560
  1272  00052E  C01D  FFD9         	movff	strncmp@s1,fsr2l
  1273  000532  C01E  FFDA         	movff	strncmp@s1+1,fsr2h
  1274  000536  50DF               	movf	indf2,w,c
  1275  000538  6E23               	movwf	??_strncmp& (0+255),c
  1276  00053A  C01F  FFF6         	movff	strncmp@s2,tblptrl
  1277  00053E  C020  FFF7         	movff	strncmp@s2+1,tblptrh
  1278  000542                     	if	0	;tblptru may be non-zero
  1279  000542                     	endif
  1280  000542                     	if	0	;tblptru may be non-zero
  1281  000542                     	endif
  1282  000542  0008               	tblrd		*
  1283  000544  50F5               	movf	tablat,w,c
  1284  000546  1823               	xorwf	??_strncmp,w,c
  1285  000548  B4D8               	btfsc	status,2,c
  1286  00054A  D019               	goto	l758
  1287  00054C                     u560:
  1288  00054C  C01F  FFF6         	movff	strncmp@s2,tblptrl
  1289  000550  C020  FFF7         	movff	strncmp@s2+1,tblptrh
  1290  000554                     	if	0	;tblptru may be non-zero
  1291  000554                     	endif
  1292  000554                     	if	0	;tblptru may be non-zero
  1293  000554                     	endif
  1294  000554  0008               	tblrd		*
  1295  000556  50F5               	movf	tablat,w,c
  1296  000558  6E23               	movwf	??_strncmp& (0+255),c
  1297  00055A  6A24               	clrf	(??_strncmp+1)& (0+255),c
  1298  00055C  1E23               	comf	??_strncmp,f,c
  1299  00055E  1E24               	comf	??_strncmp+1,f,c
  1300  000560  4A23               	infsnz	??_strncmp,f,c
  1301  000562  2A24               	incf	??_strncmp+1,f,c
  1302  000564  C01D  FFD9         	movff	strncmp@s1,fsr2l
  1303  000568  C01E  FFDA         	movff	strncmp@s1+1,fsr2h
  1304  00056C  50DF               	movf	indf2,w,c
  1305  00056E  6E25               	movwf	(??_strncmp+2)& (0+255),c
  1306  000570  5025               	movf	??_strncmp+2,w,c
  1307  000572  2423               	addwf	??_strncmp,w,c
  1308  000574  6E1D               	movwf	?_strncmp,c
  1309  000576  0E00               	movlw	0
  1310  000578  2024               	addwfc	??_strncmp+1,w,c
  1311  00057A  6E1E               	movwf	?_strncmp+1,c
  1312  00057C  0012               	return	
  1313  00057E                     l758:
  1314  00057E  4A1D               	infsnz	strncmp@s1,f,c
  1315  000580  2A1E               	incf	strncmp@s1+1,f,c
  1316  000582  4A1F               	infsnz	strncmp@s2,f,c
  1317  000584  2A20               	incf	strncmp@s2+1,f,c
  1318  000586                     l756:
  1319  000586  0621               	decf	strncmp@len,f,c
  1320  000588  A0D8               	btfss	status,0,c
  1321  00058A  0622               	decf	strncmp@len+1,f,c
  1322  00058C  2821               	incf	strncmp@len,w,c
  1323  00058E  E1C8               	bnz	l1242
  1324  000590  2822               	incf	strncmp@len+1,w,c
  1325  000592  A4D8               	btfss	status,2,c
  1326  000594  D7C5               	goto	l757
  1327  000596  0E00               	movlw	0
  1328  000598  6E1E               	movwf	?_strncmp+1,c
  1329  00059A  0E00               	movlw	0
  1330  00059C  6E1D               	movwf	?_strncmp,c
  1331  00059E  0012               	return	
  1332  0005A0                     __end_of_strncmp:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           postdec1	equ	0xFE5
  1341                           plusw1	equ	0xFE3
  1342                           fsr1l	equ	0xFE1
  1343                           indf2	equ	0xFDF
  1344                           plusw2	equ	0xFDB
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _strlen *****************
  1350 ;; Defined at:
  1351 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  s               2   22[COMRAM] PTR const unsigned char 
  1354 ;;		 -> STR_6(7), STR_5(6), STR_2(4), 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  1357 ;;		 -> STR_6(7), STR_5(6), STR_2(4), 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  2   22[COMRAM] unsigned int 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0
  1367 ;;      Params:         2       0
  1368 ;;      Locals:         2       0
  1369 ;;      Temps:          2       0
  1370 ;;      Totals:         6       0
  1371 ;;Total ram usage:        6 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_strstr
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text3
  1382  0006E8                     __ptext3:
  1383                           	opt stack 0
  1384  0006E8                     _strlen:
  1385                           	opt stack 28
  1386                           
  1387                           ;incstack = 0
  1388  0006E8  C017  F01B         	movff	strlen@s,strlen@cp
  1389  0006EC  C018  F01C         	movff	strlen@s+1,strlen@cp+1
  1390  0006F0  D002               	goto	l750
  1391  0006F2  4A1B               	infsnz	strlen@cp,f,c
  1392  0006F4  2A1C               	incf	strlen@cp+1,f,c
  1393  0006F6                     l750:
  1394  0006F6  C01B  FFF6         	movff	strlen@cp,tblptrl
  1395  0006FA  C01C  FFF7         	movff	strlen@cp+1,tblptrh
  1396  0006FE                     	if	0	;tblptru may be non-zero
  1397  0006FE                     	endif
  1398  0006FE                     	if	0	;tblptru may be non-zero
  1399  0006FE                     	endif
  1400  0006FE  0008               	tblrd		*
  1401  000700  50F5               	movf	tablat,w,c
  1402  000702  0900               	iorlw	0
  1403  000704  A4D8               	btfss	status,2,c
  1404  000706  D7F5               	goto	l751
  1405  000708  C017  F019         	movff	strlen@s,??_strlen
  1406  00070C  C018  F01A         	movff	strlen@s+1,??_strlen+1
  1407  000710  1E19               	comf	??_strlen,f,c
  1408  000712  1E1A               	comf	??_strlen+1,f,c
  1409  000714  4A19               	infsnz	??_strlen,f,c
  1410  000716  2A1A               	incf	??_strlen+1,f,c
  1411  000718  501B               	movf	strlen@cp,w,c
  1412  00071A  2419               	addwf	??_strlen,w,c
  1413  00071C  6E17               	movwf	?_strlen,c
  1414  00071E  501C               	movf	strlen@cp+1,w,c
  1415  000720  201A               	addwfc	??_strlen+1,w,c
  1416  000722  6E18               	movwf	?_strlen+1,c
  1417  000724  0012               	return	
  1418  000726                     __end_of_strlen:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           plusw1	equ	0xFE3
  1428                           fsr1l	equ	0xFE1
  1429                           indf2	equ	0xFDF
  1430                           plusw2	equ	0xFDB
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _strchr *****************
  1436 ;; Defined at:
  1437 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  ptr             2   22[COMRAM] PTR const unsigned char 
  1440 ;;		 -> NULL(0), UART_buffer(16), 
  1441 ;;  chr             2   24[COMRAM] int 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   22[COMRAM] PTR unsigned char 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0
  1453 ;;      Params:         4       0
  1454 ;;      Locals:         0       0
  1455 ;;      Temps:          1       0
  1456 ;;      Totals:         5       0
  1457 ;;Total ram usage:        5 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_strstr
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468  000726                     __ptext4:
  1469                           	opt stack 0
  1470  000726                     _strchr:
  1471                           	opt stack 28
  1472                           
  1473                           ;incstack = 0
  1474  000726  C017  FFD9         	movff	strchr@ptr,fsr2l
  1475  00072A  C018  FFDA         	movff	strchr@ptr+1,fsr2h
  1476  00072E  5019               	movf	strchr@chr,w,c
  1477  000730  18DE               	xorwf	postinc2,w,c
  1478  000732  A4D8               	btfss	status,2,c
  1479  000734  D005               	goto	l745
  1480  000736  C017  F017         	movff	strchr@ptr,?_strchr
  1481  00073A  C018  F018         	movff	strchr@ptr+1,?_strchr+1
  1482  00073E  0012               	return	
  1483  000740                     l745:
  1484  000740  C017  FFD9         	movff	strchr@ptr,fsr2l
  1485  000744  C018  FFDA         	movff	strchr@ptr+1,fsr2h
  1486  000748  4A17               	infsnz	strchr@ptr,f,c
  1487  00074A  2A18               	incf	strchr@ptr+1,f,c
  1488  00074C  50DF               	movf	indf2,w,c
  1489  00074E  A4D8               	btfss	status,2,c
  1490  000750  D7EA               	goto	_strchr
  1491  000752  0E00               	movlw	0
  1492  000754  6E17               	movwf	?_strchr,c
  1493  000756  0E00               	movlw	0
  1494  000758  6E18               	movwf	?_strchr+1,c
  1495  00075A  0012               	return	
  1496  00075C                     __end_of_strchr:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           plusw1	equ	0xFE3
  1506                           fsr1l	equ	0xFE1
  1507                           indf2	equ	0xFDF
  1508                           postinc2	equ	0xFDE
  1509                           plusw2	equ	0xFDB
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _itoa *****************
  1515 ;; Defined at:
  1516 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  buf             2   38[COMRAM] PTR unsigned char 
  1519 ;;		 -> main@buffer(10), 
  1520 ;;  val             2   40[COMRAM] int 
  1521 ;;  base            2   42[COMRAM] int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  cp              2   44[COMRAM] PTR unsigned char 
  1524 ;;		 -> main@buffer(10), 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2   38[COMRAM] PTR unsigned char 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0
  1534 ;;      Params:         6       0
  1535 ;;      Locals:         2       0
  1536 ;;      Temps:          0       0
  1537 ;;      Totals:         8       0
  1538 ;;Total ram usage:        8 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    3
  1541 ;; This function calls:
  1542 ;;		_utoa
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text5
  1549  000664                     __ptext5:
  1550                           	opt stack 0
  1551  000664                     _itoa:
  1552                           	opt stack 27
  1553                           
  1554                           ;incstack = 0
  1555  000664  C027  F02D         	movff	itoa@buf,itoa@cp
  1556  000668  C028  F02E         	movff	itoa@buf+1,itoa@cp+1
  1557  00066C  AE2A               	btfss	itoa@val+1,7,c
  1558  00066E  D00C               	goto	l473
  1559  000670  C027  FFD9         	movff	itoa@buf,fsr2l
  1560  000674  C028  FFDA         	movff	itoa@buf+1,fsr2h
  1561  000678  0E2D               	movlw	45
  1562  00067A  6EDF               	movwf	indf2,c
  1563  00067C  4A27               	infsnz	itoa@buf,f,c
  1564  00067E  2A28               	incf	itoa@buf+1,f,c
  1565  000680  6C29               	negf	itoa@val,c
  1566  000682  1E2A               	comf	itoa@val+1,f,c
  1567  000684  B0D8               	btfsc	status,0,c
  1568  000686  2A2A               	incf	itoa@val+1,f,c
  1569  000688                     l473:
  1570  000688  C027  F01E         	movff	itoa@buf,utoa@buf
  1571  00068C  C028  F01F         	movff	itoa@buf+1,utoa@buf+1
  1572  000690  C029  F020         	movff	itoa@val,utoa@val
  1573  000694  C02A  F021         	movff	itoa@val+1,utoa@val+1
  1574  000698  C02B  F022         	movff	itoa@base,utoa@base
  1575  00069C  C02C  F023         	movff	itoa@base+1,utoa@base+1
  1576  0006A0  ECFB  F001         	call	_utoa	;wreg free
  1577  0006A4  0012               	return	
  1578  0006A6                     __end_of_itoa:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           postdec1	equ	0xFE5
  1587                           plusw1	equ	0xFE3
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           postinc2	equ	0xFDE
  1591                           plusw2	equ	0xFDB
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _utoa *****************
  1597 ;; Defined at:
  1598 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  buf             2   29[COMRAM] PTR unsigned char 
  1601 ;;		 -> main@buffer(10), 
  1602 ;;  val             2   31[COMRAM] unsigned int 
  1603 ;;  base            2   33[COMRAM] int 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  v               2   35[COMRAM] unsigned int 
  1606 ;;  c               1   37[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2   29[COMRAM] PTR unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0
  1616 ;;      Params:         6       0
  1617 ;;      Locals:         3       0
  1618 ;;      Temps:          0       0
  1619 ;;      Totals:         9       0
  1620 ;;Total ram usage:        9 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    2
  1623 ;; This function calls:
  1624 ;;		___lwdiv
  1625 ;;		___lwmod
  1626 ;; This function is called by:
  1627 ;;		_itoa
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text6
  1632  0003F6                     __ptext6:
  1633                           	opt stack 0
  1634  0003F6                     _utoa:
  1635                           	opt stack 27
  1636                           
  1637                           ;incstack = 0
  1638  0003F6  C020  F024         	movff	utoa@val,utoa@v
  1639  0003FA  C021  F025         	movff	utoa@val+1,utoa@v+1
  1640  0003FE  C024  F017         	movff	utoa@v,___lwdiv@dividend
  1641  000402  C025  F018         	movff	utoa@v+1,___lwdiv@dividend+1
  1642  000406  C022  F019         	movff	utoa@base,___lwdiv@divisor
  1643  00040A  C023  F01A         	movff	utoa@base+1,___lwdiv@divisor+1
  1644  00040E  EC09  F003         	call	___lwdiv	;wreg free
  1645  000412  C017  F024         	movff	?___lwdiv,utoa@v
  1646  000416  C018  F025         	movff	?___lwdiv+1,utoa@v+1
  1647  00041A  4A1E               	infsnz	utoa@buf,f,c
  1648  00041C  2A1F               	incf	utoa@buf+1,f,c
  1649  00041E  5024               	movf	utoa@v,w,c
  1650  000420  1025               	iorwf	utoa@v+1,w,c
  1651  000422  A4D8               	btfss	status,2,c
  1652  000424  D7EC               	goto	l477
  1653  000426  C01E  FFD9         	movff	utoa@buf,fsr2l
  1654  00042A  C01F  FFDA         	movff	utoa@buf+1,fsr2h
  1655  00042E  0E00               	movlw	0
  1656  000430  6EDF               	movwf	indf2,c
  1657  000432  061E               	decf	utoa@buf,f,c
  1658  000434  A0D8               	btfss	status,0,c
  1659  000436  061F               	decf	utoa@buf+1,f,c
  1660  000438  C020  F017         	movff	utoa@val,___lwmod@dividend
  1661  00043C  C021  F018         	movff	utoa@val+1,___lwmod@dividend+1
  1662  000440  C022  F019         	movff	utoa@base,___lwmod@divisor
  1663  000444  C023  F01A         	movff	utoa@base+1,___lwmod@divisor+1
  1664  000448  EC53  F003         	call	___lwmod	;wreg free
  1665  00044C  5017               	movf	?___lwmod,w,c
  1666  00044E  6E26               	movwf	utoa@c,c
  1667  000450  C020  F017         	movff	utoa@val,___lwdiv@dividend
  1668  000454  C021  F018         	movff	utoa@val+1,___lwdiv@dividend+1
  1669  000458  C022  F019         	movff	utoa@base,___lwdiv@divisor
  1670  00045C  C023  F01A         	movff	utoa@base+1,___lwdiv@divisor+1
  1671  000460  EC09  F003         	call	___lwdiv	;wreg free
  1672  000464  C017  F020         	movff	?___lwdiv,utoa@val
  1673  000468  C018  F021         	movff	?___lwdiv+1,utoa@val+1
  1674  00046C  0E09               	movlw	9
  1675  00046E  6426               	cpfsgt	utoa@c,c
  1676  000470  D002               	goto	l480
  1677  000472  0E07               	movlw	7
  1678  000474  2626               	addwf	utoa@c,f,c
  1679  000476                     l480:
  1680  000476  0E30               	movlw	48
  1681  000478  2626               	addwf	utoa@c,f,c
  1682  00047A  C01E  FFD9         	movff	utoa@buf,fsr2l
  1683  00047E  C01F  FFDA         	movff	utoa@buf+1,fsr2h
  1684  000482  C026  FFDF         	movff	utoa@c,indf2
  1685  000486  061E               	decf	utoa@buf,f,c
  1686  000488  A0D8               	btfss	status,0,c
  1687  00048A  061F               	decf	utoa@buf+1,f,c
  1688  00048C  5020               	movf	utoa@val,w,c
  1689  00048E  1021               	iorwf	utoa@val+1,w,c
  1690  000490  A4D8               	btfss	status,2,c
  1691  000492  D7D2               	goto	l479
  1692                           
  1693                           ;	Return value of _utoa is never used
  1694  000494  4A1E               	infsnz	utoa@buf,f,c
  1695  000496  2A1F               	incf	utoa@buf+1,f,c
  1696  000498  0012               	return	
  1697  00049A                     __end_of_utoa:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           postdec1	equ	0xFE5
  1706                           plusw1	equ	0xFE3
  1707                           fsr1l	equ	0xFE1
  1708                           indf2	equ	0xFDF
  1709                           postinc2	equ	0xFDE
  1710                           plusw2	equ	0xFDB
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function ___lwmod *****************
  1716 ;; Defined at:
  1717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  dividend        2   22[COMRAM] unsigned int 
  1720 ;;  divisor         2   24[COMRAM] unsigned int 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  counter         1   26[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2   22[COMRAM] unsigned int 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0
  1732 ;;      Params:         4       0
  1733 ;;      Locals:         1       0
  1734 ;;      Temps:          0       0
  1735 ;;      Totals:         5       0
  1736 ;;Total ram usage:        5 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_utoa
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text7
  1747  0006A6                     __ptext7:
  1748                           	opt stack 0
  1749  0006A6                     ___lwmod:
  1750                           	opt stack 27
  1751                           
  1752                           ;incstack = 0
  1753  0006A6  5019               	movf	___lwmod@divisor,w,c
  1754  0006A8  101A               	iorwf	___lwmod@divisor+1,w,c
  1755  0006AA  B4D8               	btfsc	status,2,c
  1756  0006AC  D018               	goto	l575
  1757  0006AE  0E01               	movlw	1
  1758  0006B0  6E1B               	movwf	___lwmod@counter,c
  1759  0006B2  D004               	goto	l570
  1760  0006B4  90D8               	bcf	status,0,c
  1761  0006B6  3619               	rlcf	___lwmod@divisor,f,c
  1762  0006B8  361A               	rlcf	___lwmod@divisor+1,f,c
  1763  0006BA  2A1B               	incf	___lwmod@counter,f,c
  1764  0006BC                     l570:
  1765  0006BC  AE1A               	btfss	___lwmod@divisor+1,7,c
  1766  0006BE  D7FA               	goto	l571
  1767  0006C0                     u470:
  1768  0006C0  5019               	movf	___lwmod@divisor,w,c
  1769  0006C2  5C17               	subwf	___lwmod@dividend,w,c
  1770  0006C4  501A               	movf	___lwmod@divisor+1,w,c
  1771  0006C6  5818               	subwfb	___lwmod@dividend+1,w,c
  1772  0006C8  A0D8               	btfss	status,0,c
  1773  0006CA  D004               	goto	l574
  1774  0006CC  5019               	movf	___lwmod@divisor,w,c
  1775  0006CE  5E17               	subwf	___lwmod@dividend,f,c
  1776  0006D0  501A               	movf	___lwmod@divisor+1,w,c
  1777  0006D2  5A18               	subwfb	___lwmod@dividend+1,f,c
  1778  0006D4                     l574:
  1779  0006D4  90D8               	bcf	status,0,c
  1780  0006D6  321A               	rrcf	___lwmod@divisor+1,f,c
  1781  0006D8  3219               	rrcf	___lwmod@divisor,f,c
  1782  0006DA  2E1B               	decfsz	___lwmod@counter,f,c
  1783  0006DC  D7F1               	goto	u470
  1784  0006DE                     l575:
  1785  0006DE  C017  F017         	movff	___lwmod@dividend,?___lwmod
  1786  0006E2  C018  F018         	movff	___lwmod@dividend+1,?___lwmod+1
  1787  0006E6  0012               	return		;funcret
  1788  0006E8                     __end_of___lwmod:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           plusw1	equ	0xFE3
  1798                           fsr1l	equ	0xFE1
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           plusw2	equ	0xFDB
  1802                           fsr2h	equ	0xFDA
  1803                           fsr2l	equ	0xFD9
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function ___lwdiv *****************
  1807 ;; Defined at:
  1808 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  dividend        2   22[COMRAM] unsigned int 
  1811 ;;  divisor         2   24[COMRAM] unsigned int 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  quotient        2   26[COMRAM] unsigned int 
  1814 ;;  counter         1   28[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2   22[COMRAM] unsigned int 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0
  1824 ;;      Params:         4       0
  1825 ;;      Locals:         3       0
  1826 ;;      Temps:          0       0
  1827 ;;      Totals:         7       0
  1828 ;;Total ram usage:        7 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_utoa
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text8
  1839  000612                     __ptext8:
  1840                           	opt stack 0
  1841  000612                     ___lwdiv:
  1842                           	opt stack 27
  1843                           
  1844                           ;incstack = 0
  1845  000612  0E00               	movlw	0
  1846  000614  6E1C               	movwf	___lwdiv@quotient+1,c
  1847  000616  0E00               	movlw	0
  1848  000618  6E1B               	movwf	___lwdiv@quotient,c
  1849  00061A  5019               	movf	___lwdiv@divisor,w,c
  1850  00061C  101A               	iorwf	___lwdiv@divisor+1,w,c
  1851  00061E  B4D8               	btfsc	status,2,c
  1852  000620  D01C               	goto	l565
  1853  000622  0E01               	movlw	1
  1854  000624  6E1D               	movwf	___lwdiv@counter,c
  1855  000626  D004               	goto	l560
  1856  000628  90D8               	bcf	status,0,c
  1857  00062A  3619               	rlcf	___lwdiv@divisor,f,c
  1858  00062C  361A               	rlcf	___lwdiv@divisor+1,f,c
  1859  00062E  2A1D               	incf	___lwdiv@counter,f,c
  1860  000630                     l560:
  1861  000630  AE1A               	btfss	___lwdiv@divisor+1,7,c
  1862  000632  D7FA               	goto	l561
  1863  000634                     u440:
  1864  000634  90D8               	bcf	status,0,c
  1865  000636  361B               	rlcf	___lwdiv@quotient,f,c
  1866  000638  361C               	rlcf	___lwdiv@quotient+1,f,c
  1867  00063A  5019               	movf	___lwdiv@divisor,w,c
  1868  00063C  5C17               	subwf	___lwdiv@dividend,w,c
  1869  00063E  501A               	movf	___lwdiv@divisor+1,w,c
  1870  000640  5818               	subwfb	___lwdiv@dividend+1,w,c
  1871  000642  A0D8               	btfss	status,0,c
  1872  000644  D005               	goto	l564
  1873  000646  5019               	movf	___lwdiv@divisor,w,c
  1874  000648  5E17               	subwf	___lwdiv@dividend,f,c
  1875  00064A  501A               	movf	___lwdiv@divisor+1,w,c
  1876  00064C  5A18               	subwfb	___lwdiv@dividend+1,f,c
  1877  00064E  801B               	bsf	___lwdiv@quotient,0,c
  1878  000650                     l564:
  1879  000650  90D8               	bcf	status,0,c
  1880  000652  321A               	rrcf	___lwdiv@divisor+1,f,c
  1881  000654  3219               	rrcf	___lwdiv@divisor,f,c
  1882  000656  2E1D               	decfsz	___lwdiv@counter,f,c
  1883  000658  D7ED               	goto	u440
  1884  00065A                     l565:
  1885  00065A  C01B  F017         	movff	___lwdiv@quotient,?___lwdiv
  1886  00065E  C01C  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1887  000662  0012               	return		;funcret
  1888  000664                     __end_of___lwdiv:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           postdec1	equ	0xFE5
  1897                           plusw1	equ	0xFE3
  1898                           fsr1l	equ	0xFE1
  1899                           indf2	equ	0xFDF
  1900                           postinc2	equ	0xFDE
  1901                           plusw2	equ	0xFDB
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _delay_us *****************
  1907 ;; Defined at:
  1908 ;;		line 10 in file "delay.h"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  repeat_1        2   22[COMRAM] int 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0
  1922 ;;      Params:         2       0
  1923 ;;      Locals:         0       0
  1924 ;;      Temps:          0       0
  1925 ;;      Totals:         2       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text9
  1937  00089C                     __ptext9:
  1938                           	opt stack 0
  1939  00089C                     _delay_us:
  1940                           	opt stack 29
  1941                           
  1942                           ;delay.h: 11: while(repeat_1--){
  1943                           
  1944                           ;incstack = 0
  1945  00089C  D001               	goto	l86
  1946  00089E                     l87:
  1947                           
  1948                           ;delay.h: 12: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1949  00089E  D000               	nop2		;2 cycle nop
  1950  0008A0                     l86:
  1951  0008A0  0617               	decf	delay_us@repeat_1,f,c
  1952  0008A2  A0D8               	btfss	status,0,c
  1953  0008A4  0618               	decf	delay_us@repeat_1+1,f,c
  1954  0008A6  2817               	incf	delay_us@repeat_1,w,c
  1955  0008A8  E1FA               	bnz	l87
  1956  0008AA  2818               	incf	delay_us@repeat_1+1,w,c
  1957  0008AC  B4D8               	btfsc	status,2,c
  1958  0008AE  0012               	return	
  1959  0008B0  D7F6               	goto	l87
  1960  0008B2                     __end_of_delay_us:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           plusw1	equ	0xFE3
  1970                           fsr1l	equ	0xFE1
  1971                           indf2	equ	0xFDF
  1972                           postinc2	equ	0xFDE
  1973                           plusw2	equ	0xFDB
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _delay_s *****************
  1979 ;; Defined at:
  1980 ;;		line 22 in file "delay.h"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  repeat_3        2   25[COMRAM] int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0
  1994 ;;      Params:         2       0
  1995 ;;      Locals:         0       0
  1996 ;;      Temps:          0       0
  1997 ;;      Totals:         2       0
  1998 ;;Total ram usage:        2 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    2
  2001 ;; This function calls:
  2002 ;;		_delay_ms
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text10
  2009  00080E                     __ptext10:
  2010                           	opt stack 0
  2011  00080E                     _delay_s:
  2012                           	opt stack 28
  2013                           
  2014                           ;delay.h: 23: while(repeat_3--){
  2015                           
  2016                           ;incstack = 0
  2017  00080E  D006               	goto	l98
  2018  000810                     l1286:
  2019                           
  2020                           ;delay.h: 24: delay_ms(1000);
  2021  000810  0E03               	movlw	3
  2022  000812  6E18               	movwf	delay_ms@repeat_2+1,c
  2023  000814  0EE8               	movlw	232
  2024  000816  6E17               	movwf	delay_ms@repeat_2,c
  2025  000818  ECF6  F003         	call	_delay_ms	;wreg free
  2026  00081C                     l98:
  2027  00081C  061A               	decf	delay_s@repeat_3,f,c
  2028  00081E  A0D8               	btfss	status,0,c
  2029  000820  061B               	decf	delay_s@repeat_3+1,f,c
  2030  000822  281A               	incf	delay_s@repeat_3,w,c
  2031  000824  E1F5               	bnz	l1286
  2032  000826  281B               	incf	delay_s@repeat_3+1,w,c
  2033  000828  B4D8               	btfsc	status,2,c
  2034  00082A  0012               	return	
  2035  00082C  D7F1               	goto	l99
  2036  00082E                     __end_of_delay_s:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           plusw1	equ	0xFE3
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           plusw2	equ	0xFDB
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _UART_clean_buffer *****************
  2055 ;; Defined at:
  2056 ;;		line 48 in file "uart.h"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0
  2070 ;;      Params:         0       0
  2071 ;;      Locals:         0       0
  2072 ;;      Temps:          0       0
  2073 ;;      Totals:         0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    2
  2077 ;; This function calls:
  2078 ;;		_memset
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text11
  2085  00082E                     __ptext11:
  2086                           	opt stack 0
  2087  00082E                     _UART_clean_buffer:
  2088                           	opt stack 28
  2089                           
  2090                           ;uart.h: 53: memset(UART_buffer,0,sizeof(UART_buffer));
  2091                           
  2092                           ;incstack = 0
  2093  00082E  0E45               	movlw	low _UART_buffer
  2094  000830  6E17               	movwf	memset@p1,c
  2095  000832  0E00               	movlw	high _UART_buffer
  2096  000834  6E18               	movwf	memset@p1+1,c
  2097  000836  0E00               	movlw	0
  2098  000838  6E1A               	movwf	memset@c+1,c
  2099  00083A  0E00               	movlw	0
  2100  00083C  6E19               	movwf	memset@c,c
  2101  00083E  0E00               	movlw	0
  2102  000840  6E1C               	movwf	memset@n+1,c
  2103  000842  0E10               	movlw	16
  2104  000844  6E1B               	movwf	memset@n,c
  2105  000846  ECE0  F003         	call	_memset	;wreg free
  2106  00084A  0012               	return		;funcret
  2107  00084C                     __end_of_UART_clean_buffer:
  2108                           	opt stack 0
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           plusw1	equ	0xFE3
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           postinc2	equ	0xFDE
  2120                           plusw2	equ	0xFDB
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _memset *****************
  2126 ;; Defined at:
  2127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  p1              2   22[COMRAM] PTR void 
  2130 ;;		 -> UART_buffer(16), 
  2131 ;;  c               2   24[COMRAM] int 
  2132 ;;  n               2   26[COMRAM] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  p               2   28[COMRAM] PTR unsigned char 
  2135 ;;		 -> UART_buffer(16), 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   22[COMRAM] PTR void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0
  2145 ;;      Params:         6       0
  2146 ;;      Locals:         2       0
  2147 ;;      Temps:          0       0
  2148 ;;      Totals:         8       0
  2149 ;;Total ram usage:        8 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_UART_clean_buffer
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text12
  2160  0007C0                     __ptext12:
  2161                           	opt stack 0
  2162  0007C0                     _memset:
  2163                           	opt stack 28
  2164                           
  2165                           ;incstack = 0
  2166  0007C0  C017  F01D         	movff	memset@p1,memset@p
  2167  0007C4  C018  F01E         	movff	memset@p1+1,memset@p+1
  2168  0007C8  D008               	goto	l584
  2169  0007CA                     l1188:
  2170  0007CA  C01D  FFD9         	movff	memset@p,fsr2l
  2171  0007CE  C01E  FFDA         	movff	memset@p+1,fsr2h
  2172  0007D2  C019  FFDF         	movff	memset@c,indf2
  2173  0007D6  4A1D               	infsnz	memset@p,f,c
  2174  0007D8  2A1E               	incf	memset@p+1,f,c
  2175  0007DA                     l584:
  2176  0007DA  061B               	decf	memset@n,f,c
  2177  0007DC  A0D8               	btfss	status,0,c
  2178  0007DE  061C               	decf	memset@n+1,f,c
  2179  0007E0  281B               	incf	memset@n,w,c
  2180  0007E2  E1F3               	bnz	l1188
  2181  0007E4  281C               	incf	memset@n+1,w,c
  2182  0007E6  B4D8               	btfsc	status,2,c
  2183  0007E8  0012               	return	
  2184  0007EA  D7EF               	goto	l585
  2185  0007EC                     __end_of_memset:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           plusw1	equ	0xFE3
  2195                           fsr1l	equ	0xFE1
  2196                           indf2	equ	0xFDF
  2197                           postinc2	equ	0xFDE
  2198                           plusw2	equ	0xFDB
  2199                           fsr2h	equ	0xFDA
  2200                           fsr2l	equ	0xFD9
  2201                           status	equ	0xFD8
  2202                           
  2203 ;; *************** function _UART_Write_Text *****************
  2204 ;; Defined at:
  2205 ;;		line 41 in file "uart.h"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  text            2   23[COMRAM] PTR unsigned char 
  2208 ;;		 -> STR_16(11), STR_15(15), STR_14(14), STR_13(10), 
  2209 ;;		 -> STR_12(9), STR_11(24), STR_10(20), STR_9(24), 
  2210 ;;		 -> STR_8(20), STR_7(10), STR_4(3), main@buffer(10), 
  2211 ;;		 -> STR_3(11), STR_1(12), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  i               2   27[COMRAM] int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0
  2223 ;;      Params:         2       0
  2224 ;;      Locals:         2       0
  2225 ;;      Temps:          2       0
  2226 ;;      Totals:         6       0
  2227 ;;Total ram usage:        6 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    2
  2230 ;; This function calls:
  2231 ;;		_UART_Write_byte
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text13
  2238  0005A0                     __ptext13:
  2239                           	opt stack 0
  2240  0005A0                     _UART_Write_Text:
  2241                           	opt stack 28
  2242                           
  2243                           ;uart.h: 42: int i;
  2244                           ;uart.h: 44: for (i = 0; text[i] != '\0'; i++)
  2245                           
  2246                           ;incstack = 0
  2247  0005A0  0E00               	movlw	0
  2248  0005A2  6E1D               	movwf	UART_Write_Text@i+1,c
  2249  0005A4  0E00               	movlw	0
  2250  0005A6  6E1C               	movwf	UART_Write_Text@i,c
  2251  0005A8  D01A               	goto	l70
  2252  0005AA                     
  2253                           ;uart.h: 45: UART_Write_byte(text[i]);
  2254  0005AA  501C               	movf	UART_Write_Text@i,w,c
  2255  0005AC  2418               	addwf	UART_Write_Text@text,w,c
  2256  0005AE  6E1A               	movwf	??_UART_Write_Text& (0+255),c
  2257  0005B0  501D               	movf	UART_Write_Text@i+1,w,c
  2258  0005B2  2019               	addwfc	UART_Write_Text@text+1,w,c
  2259  0005B4  6E1B               	movwf	(??_UART_Write_Text+1)& (0+255),c
  2260  0005B6  C01A  FFF6         	movff	??_UART_Write_Text,tblptrl
  2261  0005BA  C01B  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  2262  0005BE  6AF8               	clrf	tblptru,c
  2263  0005C0  0E00               	movlw	(high __ramtop+-1)
  2264  0005C2  64F7               	cpfsgt	tblptrh,c
  2265  0005C4  D003               	bra	u607
  2266  0005C6  0008               	tblrd		*
  2267  0005C8  50F5               	movf	tablat,w,c
  2268  0005CA  D005               	bra	u600
  2269  0005CC                     u607:
  2270  0005CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  2271  0005D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  2272  0005D4  50E7               	movf	indf1,w,c
  2273  0005D6                     u600:
  2274  0005D6  EC59  F004         	call	_UART_Write_byte
  2275  0005DA  4A1C               	infsnz	UART_Write_Text@i,f,c
  2276  0005DC  2A1D               	incf	UART_Write_Text@i+1,f,c
  2277  0005DE                     l70:
  2278  0005DE  501C               	movf	UART_Write_Text@i,w,c
  2279  0005E0  2418               	addwf	UART_Write_Text@text,w,c
  2280  0005E2  6E1A               	movwf	??_UART_Write_Text& (0+255),c
  2281  0005E4  501D               	movf	UART_Write_Text@i+1,w,c
  2282  0005E6  2019               	addwfc	UART_Write_Text@text+1,w,c
  2283  0005E8  6E1B               	movwf	(??_UART_Write_Text+1)& (0+255),c
  2284  0005EA  C01A  FFF6         	movff	??_UART_Write_Text,tblptrl
  2285  0005EE  C01B  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  2286  0005F2  6AF8               	clrf	tblptru,c
  2287  0005F4  0E00               	movlw	(high __ramtop+-1)
  2288  0005F6  64F7               	cpfsgt	tblptrh,c
  2289  0005F8  D003               	bra	u617
  2290  0005FA  0008               	tblrd		*
  2291  0005FC  50F5               	movf	tablat,w,c
  2292  0005FE  D005               	bra	u610
  2293  000600                     u617:
  2294  000600  CFF6 FFE1          	movff	tblptrl,fsr1l
  2295  000604  CFF7 FFE2          	movff	tblptrh,fsr1h
  2296  000608  50E7               	movf	indf1,w,c
  2297  00060A                     u610:
  2298  00060A  0900               	iorlw	0
  2299  00060C  B4D8               	btfsc	status,2,c
  2300  00060E  0012               	return	
  2301  000610  D7CC               	goto	l71
  2302  000612                     __end_of_UART_Write_Text:
  2303                           	opt stack 0
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           postdec1	equ	0xFE5
  2312                           plusw1	equ	0xFE3
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           plusw2	equ	0xFDB
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _UART_Write_byte *****************
  2323 ;; Defined at:
  2324 ;;		line 36 in file "uart.h"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  data            1    wreg     unsigned char 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  data            1   22[COMRAM] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0
  2338 ;;      Params:         0       0
  2339 ;;      Locals:         1       0
  2340 ;;      Temps:          0       0
  2341 ;;      Totals:         1       0
  2342 ;;Total ram usage:        1 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_UART_Write_Text
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text14
  2353  0008B2                     __ptext14:
  2354                           	opt stack 0
  2355  0008B2                     _UART_Write_byte:
  2356                           	opt stack 28
  2357                           
  2358                           ;incstack = 0
  2359                           ;UART_Write_byte@data stored from wreg
  2360  0008B2  6E17               	movwf	UART_Write_byte@data,c
  2361  0008B4                     
  2362                           ;uart.h: 37: while (!TRMT);
  2363  0008B4  A2AC               	btfss	4012,1,c	;volatile
  2364  0008B6  D7FE               	goto	l858
  2365                           
  2366                           ;uart.h: 38: TXREG = data;
  2367  0008B8  C017  FFAD         	movff	UART_Write_byte@data,4013	;volatile
  2368  0008BC  0012               	return		;funcret
  2369  0008BE                     __end_of_UART_Write_byte:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           indf1	equ	0xFE7
  2378                           postdec1	equ	0xFE5
  2379                           plusw1	equ	0xFE3
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           indf2	equ	0xFDF
  2383                           postinc2	equ	0xFDE
  2384                           plusw2	equ	0xFDB
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _UART_Init *****************
  2390 ;; Defined at:
  2391 ;;		line 15 in file "uart.h"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0
  2405 ;;      Params:         0       0
  2406 ;;      Locals:         0       0
  2407 ;;      Temps:          0       0
  2408 ;;      Totals:         0       0
  2409 ;;Total ram usage:        0 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text15
  2420  00084C                     __ptext15:
  2421                           	opt stack 0
  2422  00084C                     _UART_Init:
  2423                           	opt stack 29
  2424                           
  2425                           ;uart.h: 17: PIE1bits.RCIE = 0b1;
  2426                           
  2427                           ;incstack = 0
  2428  00084C  8A9D               	bsf	3997,5,c	;volatile
  2429                           
  2430                           ;uart.h: 18: INTCONbits.PEIE = 0b1;
  2431  00084E  8CF2               	bsf	intcon,6,c	;volatile
  2432                           
  2433                           ;uart.h: 19: INTCONbits.GIE = 0b1;
  2434  000850  8EF2               	bsf	intcon,7,c	;volatile
  2435                           
  2436                           ;uart.h: 22: RCSTAbits.SPEN = 0b1;
  2437  000852  8EAB               	bsf	4011,7,c	;volatile
  2438                           
  2439                           ;uart.h: 23: RCSTAbits.RX9 = 0b0;
  2440  000854  9CAB               	bcf	4011,6,c	;volatile
  2441                           
  2442                           ;uart.h: 24: RCSTAbits.CREN = 0b1;
  2443  000856  88AB               	bsf	4011,4,c	;volatile
  2444                           
  2445                           ;uart.h: 26: TXSTAbits.TX9 = 0b0;
  2446  000858  9CAC               	bcf	4012,6,c	;volatile
  2447                           
  2448                           ;uart.h: 27: TXSTAbits.SYNC = 0b0;
  2449  00085A  98AC               	bcf	4012,4,c	;volatile
  2450                           
  2451                           ;uart.h: 28: TXSTAbits.BRGH = 0b0;
  2452  00085C  94AC               	bcf	4012,2,c	;volatile
  2453                           
  2454                           ;uart.h: 29: TXSTAbits.TXEN = 0b1;
  2455  00085E  8AAC               	bsf	4012,5,c	;volatile
  2456                           
  2457                           ;uart.h: 31: BAUDCONbits.BRG16 = 0b0;
  2458  000860  96B8               	bcf	4024,3,c	;volatile
  2459                           
  2460                           ;uart.h: 32: BAUDCONbits.ABDEN = 0b0;
  2461  000862  90B8               	bcf	4024,0,c	;volatile
  2462                           
  2463                           ;uart.h: 33: SPBRG = 12;
  2464  000864  0E0C               	movlw	12
  2465  000866  6EAF               	movwf	4015,c	;volatile
  2466  000868  0012               	return		;funcret
  2467  00086A                     __end_of_UART_Init:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           indf1	equ	0xFE7
  2477                           postdec1	equ	0xFE5
  2478                           plusw1	equ	0xFE3
  2479                           fsr1h	equ	0xFE2
  2480                           fsr1l	equ	0xFE1
  2481                           indf2	equ	0xFDF
  2482                           postinc2	equ	0xFDE
  2483                           plusw2	equ	0xFDB
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _ADC_Init *****************
  2489 ;; Defined at:
  2490 ;;		line 12 in file "adc.h"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		None
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0
  2504 ;;      Params:         0       0
  2505 ;;      Locals:         0       0
  2506 ;;      Temps:          0       0
  2507 ;;      Totals:         0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text16
  2519  000884                     __ptext16:
  2520                           	opt stack 0
  2521  000884                     _ADC_Init:
  2522                           	opt stack 29
  2523                           
  2524                           ;adc.h: 15: ADCON0bits.CHS0 = 0b1;
  2525                           
  2526                           ;incstack = 0
  2527  000884  84C2               	bsf	4034,2,c	;volatile
  2528                           
  2529                           ;adc.h: 16: ADCON0bits.CHS1 = 0b1;
  2530  000886  86C2               	bsf	4034,3,c	;volatile
  2531                           
  2532                           ;adc.h: 22: ADCON1bits.VCFG0 = 0b0;
  2533  000888  98C1               	bcf	4033,4,c	;volatile
  2534                           
  2535                           ;adc.h: 25: ADCON1bits.PCFG3 = 0b0;
  2536  00088A  96C1               	bcf	4033,3,c	;volatile
  2537                           
  2538                           ;adc.h: 28: ADCON2bits.ADFM = 0b1;
  2539  00088C  8EC0               	bsf	4032,7,c	;volatile
  2540                           
  2541                           ;adc.h: 31: ADCON2bits.ACQT2 = 0b1;
  2542  00088E  8AC0               	bsf	4032,5,c	;volatile
  2543                           
  2544                           ;adc.h: 32: ADCON2bits.ACQT1 = 0b0;
  2545  000890  98C0               	bcf	4032,4,c	;volatile
  2546                           
  2547                           ;adc.h: 33: ADCON2bits.ACQT1 = 0b0;
  2548  000892  98C0               	bcf	4032,4,c	;volatile
  2549                           
  2550                           ;adc.h: 36: ADCON2bits.ADCS2 = 0b0;
  2551  000894  94C0               	bcf	4032,2,c	;volatile
  2552                           
  2553                           ;adc.h: 37: ADCON2bits.ADCS1 = 0b0;
  2554  000896  92C0               	bcf	4032,1,c	;volatile
  2555                           
  2556                           ;adc.h: 38: ADCON2bits.ADCS0 = 0b0;
  2557  000898  90C0               	bcf	4032,0,c	;volatile
  2558  00089A  0012               	return		;funcret
  2559  00089C                     __end_of_ADC_Init:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           indf1	equ	0xFE7
  2569                           postdec1	equ	0xFE5
  2570                           plusw1	equ	0xFE3
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           indf2	equ	0xFDF
  2574                           postinc2	equ	0xFDE
  2575                           plusw2	equ	0xFDB
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _ADC_Get *****************
  2581 ;; Defined at:
  2582 ;;		line 41 in file "adc.h"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  advalue         2   29[COMRAM] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2   25[COMRAM] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0
  2596 ;;      Params:         2       0
  2597 ;;      Locals:         2       0
  2598 ;;      Temps:          2       0
  2599 ;;      Totals:         6       0
  2600 ;;Total ram usage:        6 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    2
  2603 ;; This function calls:
  2604 ;;		_delay_ms
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text17
  2611  00078E                     __ptext17:
  2612                           	opt stack 0
  2613  00078E                     _ADC_Get:
  2614                           	opt stack 28
  2615                           
  2616                           ;adc.h: 42: ADCON0bits.ADON = 0b1;
  2617                           
  2618                           ;incstack = 0
  2619  00078E  80C2               	bsf	4034,0,c	;volatile
  2620                           
  2621                           ;adc.h: 43: delay_ms(1);
  2622  000790  0E00               	movlw	0
  2623  000792  6E18               	movwf	delay_ms@repeat_2+1,c
  2624  000794  0E01               	movlw	1
  2625  000796  6E17               	movwf	delay_ms@repeat_2,c
  2626  000798  ECF6  F003         	call	_delay_ms	;wreg free
  2627                           
  2628                           ;adc.h: 44: ADCON0bits.GO_DONE = 1;
  2629  00079C  82C2               	bsf	4034,1,c	;volatile
  2630  00079E  B2C2               	btfsc	4034,1,c	;volatile
  2631  0007A0  D7FE               	goto	l108
  2632                           
  2633                           ;adc.h: 46: unsigned int advalue = (unsigned int)(((unsigned char)ADRESH << 8) + (unsign
      +                          ed char)ADRESL);
  2634  0007A2  50C4               	movf	4036,w,c	;volatile
  2635  0007A4  6E1D               	movwf	(??_ADC_Get+1)& (0+255),c
  2636  0007A6  6A1C               	clrf	??_ADC_Get& (0+255),c
  2637  0007A8  50C3               	movf	4035,w,c	;volatile
  2638  0007AA  241C               	addwf	??_ADC_Get,w,c
  2639  0007AC  6E1E               	movwf	ADC_Get@advalue,c
  2640  0007AE  0E00               	movlw	0
  2641  0007B0  201D               	addwfc	??_ADC_Get+1,w,c
  2642  0007B2  6E1F               	movwf	ADC_Get@advalue+1,c
  2643                           
  2644                           ;adc.h: 47: ADCON0bits.ADON = 0b0;
  2645  0007B4  90C2               	bcf	4034,0,c	;volatile
  2646                           
  2647                           ;adc.h: 48: return advalue;
  2648  0007B6  C01E  F01A         	movff	ADC_Get@advalue,?_ADC_Get
  2649  0007BA  C01F  F01B         	movff	ADC_Get@advalue+1,?_ADC_Get+1
  2650  0007BE  0012               	return	
  2651  0007C0                     __end_of_ADC_Get:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           intcon	equ	0xFF2
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           indf1	equ	0xFE7
  2661                           postdec1	equ	0xFE5
  2662                           plusw1	equ	0xFE3
  2663                           fsr1h	equ	0xFE2
  2664                           fsr1l	equ	0xFE1
  2665                           indf2	equ	0xFDF
  2666                           postinc2	equ	0xFDE
  2667                           plusw2	equ	0xFDB
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672 ;; *************** function _delay_ms *****************
  2673 ;; Defined at:
  2674 ;;		line 16 in file "delay.h"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  repeat_2        2   22[COMRAM] int 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0
  2688 ;;      Params:         2       0
  2689 ;;      Locals:         0       0
  2690 ;;      Temps:          1       0
  2691 ;;      Totals:         3       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_delay_s
  2699 ;;		_ADC_Get
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text18
  2705  0007EC                     __ptext18:
  2706                           	opt stack 0
  2707  0007EC                     _delay_ms:
  2708                           	opt stack 28
  2709                           
  2710                           ;delay.h: 17: while(repeat_2--){
  2711                           
  2712                           ;incstack = 0
  2713  0007EC  D007               	goto	l92
  2714  0007EE                     l1196:
  2715                           
  2716                           ;delay.h: 18: _delay((unsigned long)((1)*(8000000/4000.0)));
  2717  0007EE  0E03               	movlw	3
  2718  0007F0  6E19               	movwf	??_delay_ms& (0+255),c
  2719  0007F2  0E98               	movlw	152
  2720  0007F4                     u827:
  2721  0007F4  2EE8               	decfsz	wreg,f,c
  2722  0007F6  D7FE               	bra	u827
  2723  0007F8  2E19               	decfsz	??_delay_ms& (0+255),f,c
  2724  0007FA  D7FC               	bra	u827
  2725  0007FC                     l92:
  2726  0007FC  0617               	decf	delay_ms@repeat_2,f,c
  2727  0007FE  A0D8               	btfss	status,0,c
  2728  000800  0618               	decf	delay_ms@repeat_2+1,f,c
  2729  000802  2817               	incf	delay_ms@repeat_2,w,c
  2730  000804  E1F4               	bnz	l1196
  2731  000806  2818               	incf	delay_ms@repeat_2+1,w,c
  2732  000808  B4D8               	btfsc	status,2,c
  2733  00080A  0012               	return	
  2734  00080C  D7F0               	goto	l93
  2735  00080E                     __end_of_delay_ms:
  2736                           	opt stack 0
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           intcon	equ	0xFF2
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           indf1	equ	0xFE7
  2745                           postdec1	equ	0xFE5
  2746                           plusw1	equ	0xFE3
  2747                           fsr1h	equ	0xFE2
  2748                           fsr1l	equ	0xFE1
  2749                           indf2	equ	0xFDF
  2750                           postinc2	equ	0xFDE
  2751                           plusw2	equ	0xFDB
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _UART_add_buffer *****************
  2757 ;; Defined at:
  2758 ;;		line 56 in file "uart.h"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  i               2   20[COMRAM] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0
  2772 ;;      Params:         0       0
  2773 ;;      Locals:         2       0
  2774 ;;      Temps:         20       0
  2775 ;;      Totals:        22       0
  2776 ;;Total ram usage:       22 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		Interrupt level 2
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	intcode
  2786  000008                     __pintcode:
  2787                           	opt stack 0
  2788  000008                     _UART_add_buffer:
  2789                           	opt stack 27
  2790                           
  2791                           ;incstack = 0
  2792  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2793  00000A  CFFA F003          	movff	pclath,??_UART_add_buffer+2
  2794  00000E  CFFB F004          	movff	pclatu,??_UART_add_buffer+3
  2795  000012  CFE9 F005          	movff	fsr0l,??_UART_add_buffer+4
  2796  000016  CFEA F006          	movff	fsr0h,??_UART_add_buffer+5
  2797  00001A  CFE1 F007          	movff	fsr1l,??_UART_add_buffer+6
  2798  00001E  CFE2 F008          	movff	fsr1h,??_UART_add_buffer+7
  2799  000022  CFD9 F009          	movff	fsr2l,??_UART_add_buffer+8
  2800  000026  CFDA F00A          	movff	fsr2h,??_UART_add_buffer+9
  2801  00002A  CFF3 F00B          	movff	prodl,??_UART_add_buffer+10
  2802  00002E  CFF4 F00C          	movff	prodh,??_UART_add_buffer+11
  2803  000032  CFF6 F00D          	movff	tblptrl,??_UART_add_buffer+12
  2804  000036  CFF7 F00E          	movff	tblptrh,??_UART_add_buffer+13
  2805  00003A  CFF8 F00F          	movff	tblptru,??_UART_add_buffer+14
  2806  00003E  CFF5 F010          	movff	tablat,??_UART_add_buffer+15
  2807  000042  C057  F011         	movff	btemp,??_UART_add_buffer+16
  2808  000046  C058  F012         	movff	btemp+1,??_UART_add_buffer+17
  2809  00004A  C059  F013         	movff	btemp+2,??_UART_add_buffer+18
  2810  00004E  C05A  F014         	movff	btemp+3,??_UART_add_buffer+19
  2811                           
  2812                           ;uart.h: 59: for (int i = 0; i < 16 - 1; i++) {
  2813  000052  0E00               	movlw	0
  2814  000054  6E16               	movwf	UART_add_buffer@i+1,c
  2815  000056  0E00               	movlw	0
  2816  000058  6E15               	movwf	UART_add_buffer@i,c
  2817  00005A  BE16               	btfsc	UART_add_buffer@i+1,7,c
  2818  00005C  D003               	goto	i2l81
  2819  00005E  5016               	movf	UART_add_buffer@i+1,w,c
  2820  000060  E11F               	bnz	i2l82
  2821  000062  D01A               	goto	L4
  2822  000064                     i2l81:
  2823                           
  2824                           ;uart.h: 60: UART_buffer[i] = UART_buffer[i + 1];
  2825  000064  0E01               	movlw	1
  2826  000066  2415               	addwf	UART_add_buffer@i,w,c
  2827  000068  6E01               	movwf	??_UART_add_buffer& (0+255),c
  2828  00006A  0E00               	movlw	0
  2829  00006C  2016               	addwfc	UART_add_buffer@i+1,w,c
  2830  00006E  6E02               	movwf	(??_UART_add_buffer+1)& (0+255),c
  2831  000070  0E45               	movlw	low _UART_buffer
  2832  000072  2401               	addwf	??_UART_add_buffer,w,c
  2833  000074  6ED9               	movwf	fsr2l,c
  2834  000076  0E00               	movlw	high _UART_buffer
  2835  000078  2002               	addwfc	??_UART_add_buffer+1,w,c
  2836  00007A  6EDA               	movwf	fsr2h,c
  2837  00007C  0E45               	movlw	low _UART_buffer
  2838  00007E  2415               	addwf	UART_add_buffer@i,w,c
  2839  000080  6EE1               	movwf	fsr1l,c
  2840  000082  0E00               	movlw	high _UART_buffer
  2841  000084  2016               	addwfc	UART_add_buffer@i+1,w,c
  2842  000086  6EE2               	movwf	fsr1h,c
  2843  000088  CFDF FFE7          	movff	indf2,indf1
  2844  00008C  4A15               	infsnz	UART_add_buffer@i,f,c
  2845  00008E  2A16               	incf	UART_add_buffer@i+1,f,c
  2846  000090  BE16               	btfsc	UART_add_buffer@i+1,7,c
  2847  000092  D7E8               	goto	i2l81
  2848  000094  5016               	movf	UART_add_buffer@i+1,w,c
  2849  000096  E104               	bnz	i2u30_40
  2850  000098                     L4:
  2851  000098  0E0F               	movlw	15
  2852  00009A  5C15               	subwf	UART_add_buffer@i,w,c
  2853  00009C  A0D8               	btfss	status,0,c
  2854  00009E  D7E2               	goto	i2l81
  2855  0000A0                     i2u30_40:
  2856  0000A0                     i2l82:
  2857                           
  2858                           ;uart.h: 61: }
  2859                           ;uart.h: 62: UART_buffer[16 - 1] = RCREG;
  2860  0000A0  CFAE F054          	movff	4014,_UART_buffer+15	;volatile
  2861  0000A4  C014  F05A         	movff	??_UART_add_buffer+19,btemp+3
  2862  0000A8  C013  F059         	movff	??_UART_add_buffer+18,btemp+2
  2863  0000AC  C012  F058         	movff	??_UART_add_buffer+17,btemp+1
  2864  0000B0  C011  F057         	movff	??_UART_add_buffer+16,btemp
  2865  0000B4  C010  FFF5         	movff	??_UART_add_buffer+15,tablat
  2866  0000B8  C00F  FFF8         	movff	??_UART_add_buffer+14,tblptru
  2867  0000BC  C00E  FFF7         	movff	??_UART_add_buffer+13,tblptrh
  2868  0000C0  C00D  FFF6         	movff	??_UART_add_buffer+12,tblptrl
  2869  0000C4  C00C  FFF4         	movff	??_UART_add_buffer+11,prodh
  2870  0000C8  C00B  FFF3         	movff	??_UART_add_buffer+10,prodl
  2871  0000CC  C00A  FFDA         	movff	??_UART_add_buffer+9,fsr2h
  2872  0000D0  C009  FFD9         	movff	??_UART_add_buffer+8,fsr2l
  2873  0000D4  C008  FFE2         	movff	??_UART_add_buffer+7,fsr1h
  2874  0000D8  C007  FFE1         	movff	??_UART_add_buffer+6,fsr1l
  2875  0000DC  C006  FFEA         	movff	??_UART_add_buffer+5,fsr0h
  2876  0000E0  C005  FFE9         	movff	??_UART_add_buffer+4,fsr0l
  2877  0000E4  C004  FFFB         	movff	??_UART_add_buffer+3,pclatu
  2878  0000E8  C003  FFFA         	movff	??_UART_add_buffer+2,pclath
  2879  0000EC  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2880  0000EE  0011               	retfie		f
  2881  0000F0                     __end_of_UART_add_buffer:
  2882                           	opt stack 0
  2883                           pclatu	equ	0xFFB
  2884                           pclath	equ	0xFFA
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           intcon	equ	0xFF2
  2892                           postinc0	equ	0xFEE
  2893                           fsr0h	equ	0xFEA
  2894                           fsr0l	equ	0xFE9
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           postdec1	equ	0xFE5
  2898                           plusw1	equ	0xFE3
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           plusw2	equ	0xFDB
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           pclatu	equ	0xFFB
  2908                           pclath	equ	0xFFA
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           prodh	equ	0xFF4
  2914                           prodl	equ	0xFF3
  2915                           intcon	equ	0xFF2
  2916                           postinc0	equ	0xFEE
  2917                           fsr0h	equ	0xFEA
  2918                           fsr0l	equ	0xFE9
  2919                           wreg	equ	0xFE8
  2920                           indf1	equ	0xFE7
  2921                           postdec1	equ	0xFE5
  2922                           plusw1	equ	0xFE3
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           plusw2	equ	0xFDB
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932                           	psect	rparam
  2933  0000                     pclatu	equ	0xFFB
  2934                           pclath	equ	0xFFA
  2935                           tblptru	equ	0xFF8
  2936                           tblptrh	equ	0xFF7
  2937                           tblptrl	equ	0xFF6
  2938                           tablat	equ	0xFF5
  2939                           prodh	equ	0xFF4
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           postinc0	equ	0xFEE
  2943                           fsr0h	equ	0xFEA
  2944                           fsr0l	equ	0xFE9
  2945                           wreg	equ	0xFE8
  2946                           indf1	equ	0xFE7
  2947                           postdec1	equ	0xFE5
  2948                           plusw1	equ	0xFE3
  2949                           fsr1h	equ	0xFE2
  2950                           fsr1l	equ	0xFE1
  2951                           indf2	equ	0xFDF
  2952                           postinc2	equ	0xFDE
  2953                           plusw2	equ	0xFDB
  2954                           fsr2h	equ	0xFDA
  2955                           fsr2l	equ	0xFD9
  2956                           status	equ	0xFD8
  2957                           
  2958                           	psect	temp
  2959  000057                     btemp:
  2960                           	opt stack 0
  2961  000057                     	ds	1
  2962  0000                     int$flags	set	btemp
  2963  0000                     wtemp6	set	btemp+1
  2964                           pclatu	equ	0xFFB
  2965                           pclath	equ	0xFFA
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           prodh	equ	0xFF4
  2971                           prodl	equ	0xFF3
  2972                           intcon	equ	0xFF2
  2973                           postinc0	equ	0xFEE
  2974                           fsr0h	equ	0xFEA
  2975                           fsr0l	equ	0xFE9
  2976                           wreg	equ	0xFE8
  2977                           indf1	equ	0xFE7
  2978                           postdec1	equ	0xFE5
  2979                           plusw1	equ	0xFE3
  2980                           fsr1h	equ	0xFE2
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           plusw2	equ	0xFDB
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8


Data Sizes:
    Strings     197
    Constant    0
    Data        26
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     58      86
    BANK0           128      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_2(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_2(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_2(CODE[4]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_2(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 24
		 -> STR_16(CODE[11]), STR_15(CODE[15]), STR_14(CODE[14]), STR_13(CODE[10]), 
		 -> STR_12(CODE[9]), STR_11(CODE[24]), STR_10(CODE[20]), STR_9(CODE[24]), 
		 -> STR_8(CODE[20]), STR_7(CODE[10]), STR_4(CODE[3]), main@buffer(COMRAM[10]), 
		 -> STR_3(CODE[11]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _strstr->_strncmp
    _strncmp->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _delay_s->_delay_ms
    _UART_clean_buffer->_memset
    _UART_Write_Text->_UART_Write_byte
    _ADC_Get->_delay_ms

Critical Paths under _UART_add_buffer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_add_buffer in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    6093
                                             46 COMRAM    12    12      0
                            _ADC_Get
                           _ADC_Init
                          _UART_Init
                    _UART_Write_Text
                  _UART_clean_buffer
                           _delay_ms
                            _delay_s
                           _delay_us
                               _itoa
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    1401
                                             37 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     362
                                             28 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                             22 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1698
                                             38 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1307
                                             29 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                             22 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             2     0      2      98
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     500
                                             25 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _UART_clean_buffer                                    0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                             22 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2    1169
                                             23 COMRAM     6     4      2
                    _UART_Write_byte
 ---------------------------------------------------------------------------------
 (2) _UART_Write_byte                                      1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Get                                              6     4      2     425
                                             25 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2     402
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _UART_add_buffer                                     22    22      0      60
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get
     _delay_ms
   _ADC_Init
   _UART_Init
   _UART_Write_Text
     _UART_Write_byte
   _UART_clean_buffer
     _memset
   _delay_ms
   _delay_s
     _delay_ms
   _delay_us
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _UART_add_buffer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3A      56       1       68.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56       5        0.0%
DATA                 0      0      56       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 11 11:41:16 2018

                        l70 05DE                          l71 05AA                          l92 07FC  
                        l93 07EE                          l86 08A0                          l87 089E  
                        l98 081C                          l99 0810                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l120 02D4  
                       l123 02E0                         l108 079E                         l132 037E  
                       l133 038A                         l125 02F2                         l134 039C  
                       l135 03A8                         l127 0320                         l119 0256  
                       l136 03BA                         l128 0348                         l137 03C6  
                       l129 0352                         l138 03D8                         l139 03E4  
                       l560 0630                         l480 0476                         l561 0628  
                       l473 0688                         l570 06BC                         l571 06B4  
                       l564 0650                         l716 04FE                         l565 065A  
                       l477 03FE                         l717 049C                         l574 06D4  
                       l750 06F6                         l718 04D6                         l575 06DE  
                       l479 0438                         l751 06F2                         l584 07DA  
                       l585 07CA                         l745 0740                         l756 0586  
                       l757 0520                         l758 057E                         l858 08B4  
              __CFG_CPB$OFF 000000                         u600 05D6                         u440 0634  
                       u610 060A                __CFG_CPD$OFF 000000                         u470 06C0  
                       u607 05CC                         u711 028C                         u560 054C  
                       u617 0600                         u680 0514                         u827 07F4  
           __end_of_ADC_Get 07C0                         wreg 000FE8           _UART_clean_buffer 082E  
              __CFG_WDT$OFF 000000                        l1242 0520                        l1196 07EE  
                      l1188 07CA                        l1286 0810                        STR_1 0176  
                      STR_2 01C2                        STR_3 018D                        STR_4 018A  
                      STR_5 01BC                        STR_6 01B5                        STR_7 0198  
                      STR_8 0131                        STR_9 0101                        i2l81 0064  
                      i2l82 00A0                        _TRMT 007D61          ?_UART_clean_buffer 0001  
             __CFG_BOR$BOHW 000000                        _main 01C8                        _itoa 0664  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr2h 000FDA  
                      fsr0l 000FE9                        indf1 000FE7                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 0057  
                      _utoa 03F6            __end_of_ADC_Init 089C                main@adcValue 0039  
                      prodh 000FF4                        prodl 000FF3                        start 00F0  
             __CFG_IESO$OFF 000000         ??_UART_clean_buffer 001F                ___param_bank 000000  
   __end_of_UART_add_buffer 00F0     __end_of_UART_Write_Text 0612     __end_of_UART_Write_byte 08BE  
                     ?_main 0001                       ?_itoa 0027                       STR_10 0145  
                     STR_11 0119                       STR_12 01AC                       STR_13 01A2  
                     STR_14 0168                       STR_15 0159                       STR_16 0182  
                     ?_utoa 001E                       _LATA0 007C48                       _LATB0 007C50  
                     _LATB1 007C51                       _LATB3 007C53             __end_of___lwdiv 0664  
           __end_of___lwmod 06E8                       _RCREG 000FAE                       _SPBRG 000FAF  
                     _TXREG 000FAD               __CFG_PWRT$OFF 000000             __end_of_delay_s 082E  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000   __end_of_UART_clean_buffer 084C  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
        __size_of_UART_Init 001E               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       pclath 000FFA  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     utoa@c 0026                       utoa@v 0024                       status 000FD8  
                     wtemp6 0058             __end_of_strncmp 05A0             delay_s@repeat_3 001A  
            __CFG_MCLRE$OFF 000000             __initialization 075C              __CFG_HPOL$HIGH 000000  
              __end_of_main 03F6                __end_of_itoa 06A6                __end_of_utoa 049A  
                 ??_ADC_Get 001C              __CFG_LPOL$HIGH 000000                      ??_main 002F  
                    ??_itoa 002D                      ??_utoa 0024               __activetblptr 000002  
                    _ADRESH 000FC4                      _ADRESL 000FC3            __end_of_delay_ms 080E  
          __end_of_delay_us 08B2              __CFG_XINST$OFF 000000           __end_of_UART_Init 086A  
          ?_UART_add_buffer 0001              __CFG_STVREN$ON 000000            ?_UART_Write_Text 0018  
                 ??___lwdiv 001B                   ??___lwmod 001B            ?_UART_Write_byte 0001  
                    _memset 07C0                   ??_delay_s 001C                      _status 0056  
                    _strchr 0726                      _strlen 06E8                      _strstr 049A  
                    itoa@cp 002D                __pdataCOMRAM 003B                   ?_ADC_Init 0001  
              __mediumconst 0000  __size_of_UART_clean_buffer 001E                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ??_strncmp 0023  
                __accesstop 0080     __end_of__initialization 0780             __CFG_FLTAMX$RA5 000000  
             ___rparam_used 000001              __pcstackCOMRAM 0001             __CFG_OSC$INTIO2 000000  
                ??_ADC_Init 0017                     ?_memset 0017                     _ADC_Get 078E  
                   ?_strchr 0017                     ?_strlen 0017                     ?_strstr 0026  
          __CFG_BBSIZ$BB256 000000                   ?_delay_ms 0017                   ?_delay_us 0017  
                   i2u30_40 00A0             __CFG_PWMPIN$OFF 000000            delay_ms@repeat_2 0017  
                   __Hparam 0000                     __Lparam 0000                     ___lwdiv 0612  
                   ___lwmod 06A6                __psmallconst 0100                     __pcinit 075C  
           __size_of_memset 002C                     _delay_s 080E                     __ramtop 0100  
                   __ptext0 01C8                     __ptext1 049A                     __ptext2 051E  
                   __ptext3 06E8                     __ptext4 0726                     __ptext5 0664  
                   __ptext6 03F6                     __ptext7 06A6                     __ptext8 0612  
                   __ptext9 089C             __size_of_strchr 0036             __size_of_strlen 003E  
           __size_of_strstr 0084                  ??_delay_ms 0019                  ??_delay_us 0019  
                _old_status 0055                     _strncmp 051E        end_of_initialization 0780  
                   itoa@buf 0027                     memset@c 0019                     itoa@val 0029  
                   memset@n 001B                     memset@p 001D               __Lmediumconst 0000  
            ADC_Get@advalue 001E                   _RCSTAbits 000FAB                     postdec1 000FE5  
                   postinc0 000FEE                     postinc2 000FDE                     utoa@buf 001E  
                   utoa@val 0020                     strlen@s 0017                   _UART_Init 084C  
                 _PORTAbits 000F80                   _PORTBbits 000F81                   _TRISAbits 000F92  
                 _TRISBbits 000F93           __size_of_ADC_Init 0018                  main@buffer 002F  
                 _TXSTAbits 000FAC            __CFG_T1OSCMX$LOW 000000            delay_us@repeat_1 0017  
               _BAUDCONbits 000FB8                  ?_UART_Init 0001               __pidataCOMRAM 086A  
            __end_of_memset 07EC    __size_of_UART_add_buffer 00E8    __size_of_UART_Write_Text 0072  
            __end_of_strchr 075C              __end_of_strlen 0726              __end_of_strstr 051E  
       start_initialization 075C    __size_of_UART_Write_byte 000C                    ??_memset 001D  
                  ?_ADC_Get 001A                    ??_strchr 001B                    ??_strlen 0019  
                  ??_strstr 002A                 __pbssCOMRAM 0055           __size_of_delay_ms 0022  
         __size_of_delay_us 0016            ___lwdiv@dividend 0017                   __pintcode 0008  
                  ?___lwdiv 0017                    ?___lwmod 0017                 ??_UART_Init 0017  
                  ?_delay_s 001A                 __smallconst 0100                    _ADC_Init 0884  
          ___lwdiv@quotient 001B                    ?_strncmp 001D           ??_UART_add_buffer 0001  
         ??_UART_Write_Text 001A           ??_UART_Write_byte 0017                    _PIE1bits 000F9D  
          __CFG_WDTPS$32768 000000                   main@F2343 003B            __size_of_ADC_Get 0032  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
                 copy_data0 0770                    __Hrparam 0000                    __Lrparam 0000  
          __size_of___lwdiv 0052            __size_of___lwmod 0042            __size_of_delay_s 0020  
                  _delay_ms 07EC                    _delay_us 089C             ___lwdiv@divisor 0019  
           ___lwdiv@counter 001D                    __ptext10 080E                    __ptext11 082E  
                  __ptext12 07C0                    __ptext13 05A0                    __ptext14 08B2  
                  __ptext15 084C                    __ptext16 0884                    __ptext17 078E  
                  __ptext18 07EC            __size_of_strncmp 0082         UART_Write_Text@text 0018  
             __size_of_main 022E               __size_of_itoa 0042               __size_of_utoa 00A4  
                strncmp@len 0021                    int$flags 0057                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                    itoa@base 002B                    memset@p1 0017  
                  intlevel2 0000                   strchr@chr 0019            ___lwmod@dividend 0017  
                 strchr@ptr 0017                   strncmp@s1 001D                   strncmp@s2 001F  
                _OSCCONbits 000FD3         UART_Write_byte@data 0017                 _UART_buffer 0045  
                  utoa@base 0022             _UART_add_buffer 0008             _UART_Write_Text 05A0  
           _UART_Write_byte 08B2             ___lwmod@divisor 0019                    strlen@cp 001B  
           ___lwmod@counter 001B                    strstr@s1 0026                    strstr@s2 0028  
          UART_add_buffer@i 0015            UART_Write_Text@i 001C  
