

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 26 21:39:53 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F1330 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   112                           OVDCONS equ 0F82h ;# 
   113  0000                     # 552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   114                           OVDCOND equ 0F83h ;# 
   115  0000                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   116                           DTCON equ 0F84h ;# 
   117  0000                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   118                           PWMCON1 equ 0F85h ;# 
   119  0000                     # 752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   120                           PWMCON0 equ 0F86h ;# 
   121  0000                     # 818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   122                           SEVTCMPH equ 0F87h ;# 
   123  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   124                           SEVTCMPL equ 0F88h ;# 
   125  0000                     # 858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   126                           LATA equ 0F89h ;# 
   127  0000                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   128                           LATB equ 0F8Ah ;# 
   129  0000                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   130                           FLTCONFIG equ 0F8Bh ;# 
   131  0000                     # 1121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   132                           PDC2H equ 0F8Ch ;# 
   133  0000                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   134                           PDC2L equ 0F8Dh ;# 
   135  0000                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   136                           PDC1H equ 0F8Eh ;# 
   137  0000                     # 1181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   138                           PDC1L equ 0F8Fh ;# 
   139  0000                     # 1201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   140                           PDC0H equ 0F90h ;# 
   141  0000                     # 1221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   142                           PDC0L equ 0F91h ;# 
   143  0000                     # 1241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   144                           TRISA equ 0F92h ;# 
   145  0000                     # 1246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   146                           DDRA equ 0F92h ;# 
   147  0000                     # 1463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   148                           TRISB equ 0F93h ;# 
   149  0000                     # 1468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   150                           DDRB equ 0F93h ;# 
   151  0000                     # 1685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   152                           PTPERH equ 0F95h ;# 
   153  0000                     # 1705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   154                           PTPERL equ 0F96h ;# 
   155  0000                     # 1725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   156                           PTMRH equ 0F97h ;# 
   157  0000                     # 1745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   158                           PTMRL equ 0F98h ;# 
   159  0000                     # 1765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   160                           PTCON1 equ 0F99h ;# 
   161  0000                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   162                           PTCON0 equ 0F9Ah ;# 
   163  0000                     # 1874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   164                           OSCTUNE equ 0F9Bh ;# 
   165  0000                     # 1939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   166                           PIE1 equ 0F9Dh ;# 
   167  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   168                           PIR1 equ 0F9Eh ;# 
   169  0000                     # 2081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   170                           IPR1 equ 0F9Fh ;# 
   171  0000                     # 2152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   172                           PIE2 equ 0FA0h ;# 
   173  0000                     # 2187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   174                           PIR2 equ 0FA1h ;# 
   175  0000                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   176                           IPR2 equ 0FA2h ;# 
   177  0000                     # 2257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   178                           PIE3 equ 0FA3h ;# 
   179  0000                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   180                           PIR3 equ 0FA4h ;# 
   181  0000                     # 2326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   182                           IPR3 equ 0FA5h ;# 
   183  0000                     # 2356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   184                           EECON1 equ 0FA6h ;# 
   185  0000                     # 2422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   186                           EECON2 equ 0FA7h ;# 
   187  0000                     # 2429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   188                           EEDATA equ 0FA8h ;# 
   189  0000                     # 2436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   190                           EEADR equ 0FA9h ;# 
   191  0000                     # 2443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   192                           RCSTA equ 0FABh ;# 
   193  0000                     # 2448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   194                           RCSTA1 equ 0FABh ;# 
   195  0000                     # 2653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   196                           TXSTA equ 0FACh ;# 
   197  0000                     # 2658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   198                           TXSTA1 equ 0FACh ;# 
   199  0000                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   200                           TXREG equ 0FADh ;# 
   201  0000                     # 2914 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   202                           TXREG1 equ 0FADh ;# 
   203  0000                     # 2921 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   204                           RCREG equ 0FAEh ;# 
   205  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   206                           RCREG1 equ 0FAEh ;# 
   207  0000                     # 2933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   208                           SPBRG equ 0FAFh ;# 
   209  0000                     # 2938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   210                           SPBRG1 equ 0FAFh ;# 
   211  0000                     # 2945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   212                           SPBRGH equ 0FB0h ;# 
   213  0000                     # 2952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   214                           CMCON equ 0FB4h ;# 
   215  0000                     # 3038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   216                           CVRCON equ 0FB5h ;# 
   217  0000                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   218                           BAUDCON equ 0FB8h ;# 
   219  0000                     # 3114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   220                           BAUDCTL equ 0FB8h ;# 
   221  0000                     # 3289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   222                           ADCON2 equ 0FC0h ;# 
   223  0000                     # 3360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   224                           ADCON1 equ 0FC1h ;# 
   225  0000                     # 3433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   226                           ADCON0 equ 0FC2h ;# 
   227  0000                     # 3554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   228                           ADRES equ 0FC3h ;# 
   229  0000                     # 3561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   230                           ADRESL equ 0FC3h ;# 
   231  0000                     # 3568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   232                           ADRESH equ 0FC4h ;# 
   233  0000                     # 3575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   234                           T1CON equ 0FCDh ;# 
   235  0000                     # 3680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   236                           TMR1 equ 0FCEh ;# 
   237  0000                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   238                           TMR1L equ 0FCEh ;# 
   239  0000                     # 3694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   240                           TMR1H equ 0FCFh ;# 
   241  0000                     # 3701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   242                           RCON equ 0FD0h ;# 
   243  0000                     # 3834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   244                           WDTCON equ 0FD1h ;# 
   245  0000                     # 3862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   246                           LVDCON equ 0FD2h ;# 
   247  0000                     # 3927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   248                           OSCCON equ 0FD3h ;# 
   249  0000                     # 4010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   250                           T0CON equ 0FD5h ;# 
   251  0000                     # 4089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   252                           TMR0 equ 0FD6h ;# 
   253  0000                     # 4096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   254                           TMR0L equ 0FD6h ;# 
   255  0000                     # 4103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   256                           TMR0H equ 0FD7h ;# 
   257  0000                     # 4110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   258                           STATUS equ 0FD8h ;# 
   259  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   260                           FSR2 equ 0FD9h ;# 
   261  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   262                           FSR2L equ 0FD9h ;# 
   263  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   264                           FSR2H equ 0FDAh ;# 
   265  0000                     # 4202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   266                           PLUSW2 equ 0FDBh ;# 
   267  0000                     # 4209 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   268                           PREINC2 equ 0FDCh ;# 
   269  0000                     # 4216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   270                           POSTDEC2 equ 0FDDh ;# 
   271  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   272                           POSTINC2 equ 0FDEh ;# 
   273  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   274                           INDF2 equ 0FDFh ;# 
   275  0000                     # 4237 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   276                           BSR equ 0FE0h ;# 
   277  0000                     # 4244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   278                           FSR1 equ 0FE1h ;# 
   279  0000                     # 4251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   280                           FSR1L equ 0FE1h ;# 
   281  0000                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   282                           FSR1H equ 0FE2h ;# 
   283  0000                     # 4265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   284                           PLUSW1 equ 0FE3h ;# 
   285  0000                     # 4272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   286                           PREINC1 equ 0FE4h ;# 
   287  0000                     # 4279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   288                           POSTDEC1 equ 0FE5h ;# 
   289  0000                     # 4286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   290                           POSTINC1 equ 0FE6h ;# 
   291  0000                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   292                           INDF1 equ 0FE7h ;# 
   293  0000                     # 4300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   294                           WREG equ 0FE8h ;# 
   295  0000                     # 4312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   296                           FSR0 equ 0FE9h ;# 
   297  0000                     # 4319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   298                           FSR0L equ 0FE9h ;# 
   299  0000                     # 4326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   300                           FSR0H equ 0FEAh ;# 
   301  0000                     # 4333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   302                           PLUSW0 equ 0FEBh ;# 
   303  0000                     # 4340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   304                           PREINC0 equ 0FECh ;# 
   305  0000                     # 4347 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   306                           POSTDEC0 equ 0FEDh ;# 
   307  0000                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   308                           POSTINC0 equ 0FEEh ;# 
   309  0000                     # 4361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   310                           INDF0 equ 0FEFh ;# 
   311  0000                     # 4368 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   312                           INTCON3 equ 0FF0h ;# 
   313  0000                     # 4480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   314                           INTCON2 equ 0FF1h ;# 
   315  0000                     # 4567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   316                           INTCON equ 0FF2h ;# 
   317  0000                     # 4684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   318                           PROD equ 0FF3h ;# 
   319  0000                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   320                           PRODL equ 0FF3h ;# 
   321  0000                     # 4698 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   322                           PRODH equ 0FF4h ;# 
   323  0000                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   324                           TABLAT equ 0FF5h ;# 
   325  0000                     # 4714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   326                           TBLPTR equ 0FF6h ;# 
   327  0000                     # 4721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   328                           TBLPTRL equ 0FF6h ;# 
   329  0000                     # 4728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   330                           TBLPTRH equ 0FF7h ;# 
   331  0000                     # 4735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   332                           TBLPTRU equ 0FF8h ;# 
   333  0000                     # 4744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   334                           PCLAT equ 0FF9h ;# 
   335  0000                     # 4751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   336                           PC equ 0FF9h ;# 
   337  0000                     # 4758 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   338                           PCL equ 0FF9h ;# 
   339  0000                     # 4765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   340                           PCLATH equ 0FFAh ;# 
   341  0000                     # 4772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   342                           PCLATU equ 0FFBh ;# 
   343  0000                     # 4779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   344                           STKPTR equ 0FFCh ;# 
   345  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   346                           TOS equ 0FFDh ;# 
   347  0000                     # 4860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   348                           TOSL equ 0FFDh ;# 
   349  0000                     # 4867 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   350                           TOSH equ 0FFEh ;# 
   351  0000                     # 4874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   352                           TOSU equ 0FFFh ;# 
   353  0000                     	FNCALL	_main,_ADC_Init
   354                           	FNCALL	_main,_IC_Init
   355                           	FNCALL	_main,_UART_Init
   356                           	FNCALL	_main,_UART_Write_Text
   357                           	FNCALL	_main,_UART_clean_buffer
   358                           	FNCALL	_main,_delay_ms
   359                           	FNCALL	_main,_delay_s
   360                           	FNCALL	_main,_send_Status
   361                           	FNCALL	_main,_strstr
   362                           	FNCALL	_strstr,_strchr
   363                           	FNCALL	_strstr,_strlen
   364                           	FNCALL	_strstr,_strncmp
   365                           	FNCALL	_send_Status,_ADC_Get
   366                           	FNCALL	_send_Status,_UART_Write_Text
   367                           	FNCALL	_send_Status,___lldiv
   368                           	FNCALL	_send_Status,___lmul
   369                           	FNCALL	_send_Status,_itoa
   370                           	FNCALL	_itoa,_utoa
   371                           	FNCALL	_utoa,___lwdiv
   372                           	FNCALL	_utoa,___lwmod
   373                           	FNCALL	_UART_Write_Text,_UART_Write_byte
   374                           	FNCALL	_ADC_Get,_delay_ms
   375                           	FNCALL	_delay_s,_delay_ms
   376                           	FNCALL	_UART_clean_buffer,_memset
   377                           	FNROOT	_main
   378                           	FNCALL	intlevel2,_UART_add_buffer
   379                           	global	intlevel2
   380                           	FNROOT	intlevel2
   381                           	global	_cycleAlarm
   382                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   383                           global __pidataCOMRAM
   384                           __pidataCOMRAM:
   385  001208                     	file	"main.c"
   386                           	line	20
   387                           
   388                           ;initializer for _cycleAlarm
   389                           	db	low(0Ah)
   390  001208  0A                 	global	_trash
   391                           	global	_cycleAlarmCounter
   392                           	global	_allArmed
   393                           	global	_Status_Extra_old
   394                           	global	_Status_Siren_old
   395                           	global	_Status_Ac_power_old
   396                           	global	_Status_Alarm_Enabled_old
   397                           	global	_Status_Alarm_Triggered_old
   398                           	global	_Status_Extra
   399                           	global	_Status_Siren
   400                           	global	_Status_Ac_power
   401                           	global	_Status_Alarm_Enabled
   402                           	global	_Status_Alarm_Triggered
   403                           	global	_received_char
   404                           	global	_UART_Buffer_Ptr
   405                           	global	_UART_buffer
   406                           	global	_TMR0H
   407                           _TMR0H	set	0xFD7
   408  0000                     	global	_TMR0L
   409                           _TMR0L	set	0xFD6
   410  0000                     	global	_PORTBbits
   411                           _PORTBbits	set	0xF81
   412  0000                     	global	_PORTAbits
   413                           _PORTAbits	set	0xF80
   414  0000                     	global	_LATAbits
   415                           _LATAbits	set	0xF89
   416  0000                     	global	_RCREG
   417                           _RCREG	set	0xFAE
   418  0000                     	global	_PIR1bits
   419                           _PIR1bits	set	0xF9E
   420  0000                     	global	_TXREG
   421                           _TXREG	set	0xFAD
   422  0000                     	global	_SPBRG
   423                           _SPBRG	set	0xFAF
   424  0000                     	global	_BAUDCONbits
   425                           _BAUDCONbits	set	0xFB8
   426  0000                     	global	_TXSTAbits
   427                           _TXSTAbits	set	0xFAC
   428  0000                     	global	_RCSTAbits
   429                           _RCSTAbits	set	0xFAB
   430  0000                     	global	_INTCONbits
   431                           _INTCONbits	set	0xFF2
   432  0000                     	global	_PIE1bits
   433                           _PIE1bits	set	0xF9D
   434  0000                     	global	_LATBbits
   435                           _LATBbits	set	0xF8A
   436  0000                     	global	_T0CONbits
   437                           _T0CONbits	set	0xFD5
   438  0000                     	global	_OSCTUNEbits
   439                           _OSCTUNEbits	set	0xF9B
   440  0000                     	global	_OSCCONbits
   441                           _OSCCONbits	set	0xFD3
   442  0000                     	global	_TRISBbits
   443                           _TRISBbits	set	0xF93
   444  0000                     	global	_TRISAbits
   445                           _TRISAbits	set	0xF92
   446  0000                     	global	_ADRESL
   447                           _ADRESL	set	0xFC3
   448  0000                     	global	_ADRESH
   449                           _ADRESH	set	0xFC4
   450  0000                     	global	_ADCON2bits
   451                           _ADCON2bits	set	0xFC0
   452  0000                     	global	_ADCON1bits
   453                           _ADCON1bits	set	0xFC1
   454  0000                     	global	_ADCON0bits
   455                           _ADCON0bits	set	0xFC2
   456  0000                     	global	_TMR0IF
   457                           _TMR0IF	set	0x7F92
   458  0000                     	global	_TRMT
   459                           _TRMT	set	0x7D61
   460  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   461                           global __psmallconst
   462                           __psmallconst:
   463  000100                     	db	0
   464  000100  00                 	
   465                           STR_13:
   466  000101                     	db	72	;'H'
   467  000101  48                 	db	101	;'e'
   468  000102  65                 	db	108	;'l'
   469  000103  6C                 	db	108	;'l'
   470  000104  6C                 	db	111	;'o'
   471  000105  6F                 	db	32
   472  000106  20                 	db	87	;'W'
   473  000107  57                 	db	111	;'o'
   474  000108  6F                 	db	114	;'r'
   475  000109  72                 	db	108	;'l'
   476  00010A  6C                 	db	100	;'d'
   477  00010B  64                 	db	51	;'3'
   478  00010C  33                 	db	49	;'1'
   479  00010D  31                 	db	10
   480  00010E  0A                 	db	0
   481  00010F  00                 	
   482                           STR_11:
   483  000110                     	db	72	;'H'
   484  000110  48                 	db	101	;'e'
   485  000111  65                 	db	108	;'l'
   486  000112  6C                 	db	108	;'l'
   487  000113  6C                 	db	111	;'o'
   488  000114  6F                 	db	32
   489  000115  20                 	db	87	;'W'
   490  000116  57                 	db	111	;'o'
   491  000117  6F                 	db	114	;'r'
   492  000118  72                 	db	108	;'l'
   493  000119  6C                 	db	100	;'d'
   494  00011A  64                 	db	49	;'1'
   495  00011B  31                 	db	10
   496  00011C  0A                 	db	0
   497  00011D  00                 	
   498                           STR_12:
   499  00011E                     	db	72	;'H'
   500  00011E  48                 	db	101	;'e'
   501  00011F  65                 	db	108	;'l'
   502  000120  6C                 	db	108	;'l'
   503  000121  6C                 	db	111	;'o'
   504  000122  6F                 	db	32
   505  000123  20                 	db	87	;'W'
   506  000124  57                 	db	111	;'o'
   507  000125  6F                 	db	114	;'r'
   508  000126  72                 	db	108	;'l'
   509  000127  6C                 	db	100	;'d'
   510  000128  64                 	db	50	;'2'
   511  000129  32                 	db	10
   512  00012A  0A                 	db	0
   513  00012B  00                 	
   514                           STR_30:
   515  00012C                     	db	65	;'A'
   516  00012C  41                 	db	76	;'L'
   517  00012D  4C                 	db	76	;'L'
   518  00012E  4C                 	db	95	;'_'
   519  00012F  5F                 	db	83	;'S'
   520  000130  53                 	db	73	;'I'
   521  000131  49                 	db	82	;'R'
   522  000132  52                 	db	69	;'E'
   523  000133  45                 	db	78	;'N'
   524  000134  4E                 	db	95	;'_'
   525  000135  5F                 	db	79	;'O'
   526  000136  4F                 	db	78	;'N'
   527  000137  4E                 	db	0
   528  000138  00                 	
   529                           STR_28:
   530  000139                     	db	48	;'0'
   531  000139  30                 	db	95	;'_'
   532  00013A  5F                 	db	88	;'X'
   533  00013B  58                 	db	84	;'T'
   534  00013C  54                 	db	82	;'R'
   535  00013D  52                 	db	65	;'A'
   536  00013E  41                 	db	95	;'_'
   537  00013F  5F                 	db	48	;'0'
   538  000140  30                 	db	0
   539  000141  00                 	
   540                           STR_29:
   541  000142                     	db	49	;'1'
   542  000142  31                 	db	95	;'_'
   543  000143  5F                 	db	88	;'X'
   544  000144  58                 	db	84	;'T'
   545  000145  54                 	db	82	;'R'
   546  000146  52                 	db	65	;'A'
   547  000147  41                 	db	95	;'_'
   548  000148  5F                 	db	48	;'0'
   549  000149  30                 	db	0
   550  00014A  00                 	
   551                           STR_20:
   552  00014B                     	db	48	;'0'
   553  00014B  30                 	db	95	;'_'
   554  00014C  5F                 	db	83	;'S'
   555  00014D  53                 	db	73	;'I'
   556  00014E  49                 	db	82	;'R'
   557  00014F  52                 	db	78	;'N'
   558  000150  4E                 	db	95	;'_'
   559  000151  5F                 	db	48	;'0'
   560  000152  30                 	db	0
   561  000153  00                 	
   562                           STR_21:
   563  000154                     	db	49	;'1'
   564  000154  31                 	db	95	;'_'
   565  000155  5F                 	db	83	;'S'
   566  000156  53                 	db	73	;'I'
   567  000157  49                 	db	82	;'R'
   568  000158  52                 	db	78	;'N'
   569  000159  4E                 	db	95	;'_'
   570  00015A  5F                 	db	48	;'0'
   571  00015B  30                 	db	0
   572  00015C  00                 	
   573                           STR_18:
   574  00015D                     	db	48	;'0'
   575  00015D  30                 	db	95	;'_'
   576  00015E  5F                 	db	65	;'A'
   577  00015F  41                 	db	76	;'L'
   578  000160  4C                 	db	65	;'A'
   579  000161  41                 	db	82	;'R'
   580  000162  52                 	db	95	;'_'
   581  000163  5F                 	db	48	;'0'
   582  000164  30                 	db	0
   583  000165  00                 	
   584                           STR_19:
   585  000166                     	db	49	;'1'
   586  000166  31                 	db	95	;'_'
   587  000167  5F                 	db	65	;'A'
   588  000168  41                 	db	76	;'L'
   589  000169  4C                 	db	65	;'A'
   590  00016A  41                 	db	82	;'R'
   591  00016B  52                 	db	95	;'_'
   592  00016C  5F                 	db	48	;'0'
   593  00016D  30                 	db	0
   594  00016E  00                 	
   595                           STR_26:
   596  00016F                     	db	48	;'0'
   597  00016F  30                 	db	95	;'_'
   598  000170  5F                 	db	88	;'X'
   599  000171  58                 	db	84	;'T'
   600  000172  54                 	db	82	;'R'
   601  000173  52                 	db	65	;'A'
   602  000174  41                 	db	95	;'_'
   603  000175  5F                 	db	49	;'1'
   604  000176  31                 	db	0
   605  000177  00                 	
   606                           STR_27:
   607  000178                     	db	49	;'1'
   608  000178  31                 	db	95	;'_'
   609  000179  5F                 	db	88	;'X'
   610  00017A  58                 	db	84	;'T'
   611  00017B  54                 	db	82	;'R'
   612  00017C  52                 	db	65	;'A'
   613  00017D  41                 	db	95	;'_'
   614  00017E  5F                 	db	49	;'1'
   615  00017F  31                 	db	0
   616  000180  00                 	
   617                           STR_22:
   618  000181                     	db	48	;'0'
   619  000181  30                 	db	95	;'_'
   620  000182  5F                 	db	83	;'S'
   621  000183  53                 	db	73	;'I'
   622  000184  49                 	db	82	;'R'
   623  000185  52                 	db	78	;'N'
   624  000186  4E                 	db	95	;'_'
   625  000187  5F                 	db	49	;'1'
   626  000188  31                 	db	0
   627  000189  00                 	
   628                           STR_23:
   629  00018A                     	db	49	;'1'
   630  00018A  31                 	db	95	;'_'
   631  00018B  5F                 	db	83	;'S'
   632  00018C  53                 	db	73	;'I'
   633  00018D  49                 	db	82	;'R'
   634  00018E  52                 	db	78	;'N'
   635  00018F  4E                 	db	95	;'_'
   636  000190  5F                 	db	49	;'1'
   637  000191  31                 	db	0
   638  000192  00                 	
   639                           STR_16:
   640  000193                     	db	48	;'0'
   641  000193  30                 	db	95	;'_'
   642  000194  5F                 	db	65	;'A'
   643  000195  41                 	db	76	;'L'
   644  000196  4C                 	db	65	;'A'
   645  000197  41                 	db	82	;'R'
   646  000198  52                 	db	95	;'_'
   647  000199  5F                 	db	49	;'1'
   648  00019A  31                 	db	0
   649  00019B  00                 	
   650                           STR_17:
   651  00019C                     	db	49	;'1'
   652  00019C  31                 	db	95	;'_'
   653  00019D  5F                 	db	65	;'A'
   654  00019E  41                 	db	76	;'L'
   655  00019F  4C                 	db	65	;'A'
   656  0001A0  41                 	db	82	;'R'
   657  0001A1  52                 	db	95	;'_'
   658  0001A2  5F                 	db	49	;'1'
   659  0001A3  31                 	db	0
   660  0001A4  00                 	
   661                           STR_24:
   662  0001A5                     	db	48	;'0'
   663  0001A5  30                 	db	95	;'_'
   664  0001A6  5F                 	db	66	;'B'
   665  0001A7  42                 	db	69	;'E'
   666  0001A8  45                 	db	69	;'E'
   667  0001A9  45                 	db	80	;'P'
   668  0001AA  50                 	db	69	;'E'
   669  0001AB  45                 	db	82	;'R'
   670  0001AC  52                 	db	0
   671  0001AD  00                 	
   672                           STR_25:
   673  0001AE                     	db	49	;'1'
   674  0001AE  31                 	db	95	;'_'
   675  0001AF  5F                 	db	66	;'B'
   676  0001B0  42                 	db	69	;'E'
   677  0001B1  45                 	db	69	;'E'
   678  0001B2  45                 	db	80	;'P'
   679  0001B3  50                 	db	69	;'E'
   680  0001B4  45                 	db	82	;'R'
   681  0001B5  52                 	db	0
   682  0001B6  00                 	
   683                           STR_14:
   684  0001B7                     	db	48	;'0'
   685  0001B7  30                 	db	95	;'_'
   686  0001B8  5F                 	db	83	;'S'
   687  0001B9  53                 	db	84	;'T'
   688  0001BA  54                 	db	65	;'A'
   689  0001BB  41                 	db	84	;'T'
   690  0001BC  54                 	db	85	;'U'
   691  0001BD  55                 	db	83	;'S'
   692  0001BE  53                 	db	0
   693  0001BF  00                 	
   694                           STR_15:
   695  0001C0                     	db	49	;'1'
   696  0001C0  31                 	db	95	;'_'
   697  0001C1  5F                 	db	83	;'S'
   698  0001C2  53                 	db	84	;'T'
   699  0001C3  54                 	db	65	;'A'
   700  0001C4  41                 	db	84	;'T'
   701  0001C5  54                 	db	85	;'U'
   702  0001C6  55                 	db	83	;'S'
   703  0001C7  53                 	db	0
   704  0001C8  00                 	
   705                           STR_2:
   706  0001C9                     	db	124
   707  0001C9  7C                 	db	79	;'O'
   708  0001CA  4F                 	db	70	;'F'
   709  0001CB  46                 	db	70	;'F'
   710  0001CC  46                 	db	124
   711  0001CD  7C                 	db	0
   712  0001CE  00                 	
   713                           STR_1:
   714  0001CF                     	db	124
   715  0001CF  7C                 	db	79	;'O'
   716  0001D0  4F                 	db	78	;'N'
   717  0001D1  4E                 	db	124
   718  0001D2  7C                 	db	0
   719  0001D3  00                 	
   720                           STR_10:
   721  0001D4                     	db	79	;'O'
   722  0001D4  4F                 	db	70	;'F'
   723  0001D5  46                 	db	70	;'F'
   724  0001D6  46                 	db	0
   725  0001D7  00                 	
   726                           STR_5:
   727  0001D8                     	db	65	;'A'
   728  0001D8  41                 	db	67	;'C'
   729  0001D9  43                 	db	124
   730  0001DA  7C                 	db	0
   731  0001DB  00                 	
   732                           STR_6:
   733  0001DC                     	db	68	;'D'
   734  0001DC  44                 	db	67	;'C'
   735  0001DD  43                 	db	124
   736  0001DE  7C                 	db	0
   737  0001DF  00                 STR_3	equ	STR_1+1
   738  0000                     STR_7	equ	STR_1+1
   739  0000                     STR_4	equ	STR_2+1
   740  0000                     STR_8	equ	STR_2+1
   741  0000                     STR_9	equ	STR_30+10
   742  0000                     ; #config settings
   743                           global __CFG_OSC$INTIO2
   744                           __CFG_OSC$INTIO2 equ 0x0
   745  0000                     global __CFG_FCMEN$OFF
   746                           __CFG_FCMEN$OFF equ 0x0
   747  0000                     global __CFG_IESO$OFF
   748                           __CFG_IESO$OFF equ 0x0
   749  0000                     global __CFG_PWRT$OFF
   750                           __CFG_PWRT$OFF equ 0x0
   751  0000                     global __CFG_BOR$BOHW
   752                           __CFG_BOR$BOHW equ 0x0
   753  0000                     global __CFG_BORV$3
   754                           __CFG_BORV$3 equ 0x0
   755  0000                     global __CFG_WDT$OFF
   756                           __CFG_WDT$OFF equ 0x0
   757  0000                     global __CFG_WDTPS$32768
   758                           __CFG_WDTPS$32768 equ 0x0
   759  0000                     global __CFG_PWMPIN$OFF
   760                           __CFG_PWMPIN$OFF equ 0x0
   761  0000                     global __CFG_LPOL$HIGH
   762                           __CFG_LPOL$HIGH equ 0x0
   763  0000                     global __CFG_HPOL$HIGH
   764                           __CFG_HPOL$HIGH equ 0x0
   765  0000                     global __CFG_FLTAMX$RA5
   766                           __CFG_FLTAMX$RA5 equ 0x0
   767  0000                     global __CFG_T1OSCMX$HIGH
   768                           __CFG_T1OSCMX$HIGH equ 0x0
   769  0000                     global __CFG_MCLRE$OFF
   770                           __CFG_MCLRE$OFF equ 0x0
   771  0000                     global __CFG_STVREN$ON
   772                           __CFG_STVREN$ON equ 0x0
   773  0000                     global __CFG_BBSIZ$BB256
   774                           __CFG_BBSIZ$BB256 equ 0x0
   775  0000                     global __CFG_XINST$OFF
   776                           __CFG_XINST$OFF equ 0x0
   777  0000                     global __CFG_CP0$OFF
   778                           __CFG_CP0$OFF equ 0x0
   779  0000                     global __CFG_CP1$OFF
   780                           __CFG_CP1$OFF equ 0x0
   781  0000                     global __CFG_CPB$OFF
   782                           __CFG_CPB$OFF equ 0x0
   783  0000                     global __CFG_CPD$OFF
   784                           __CFG_CPD$OFF equ 0x0
   785  0000                     global __CFG_WRT0$OFF
   786                           __CFG_WRT0$OFF equ 0x0
   787  0000                     global __CFG_WRT1$OFF
   788                           __CFG_WRT1$OFF equ 0x0
   789  0000                     global __CFG_WRTC$OFF
   790                           __CFG_WRTC$OFF equ 0x0
   791  0000                     global __CFG_WRTB$OFF
   792                           __CFG_WRTB$OFF equ 0x0
   793  0000                     global __CFG_WRTD$OFF
   794                           __CFG_WRTD$OFF equ 0x0
   795  0000                     global __CFG_EBTR0$OFF
   796                           __CFG_EBTR0$OFF equ 0x0
   797  0000                     global __CFG_EBTR1$OFF
   798                           __CFG_EBTR1$OFF equ 0x0
   799  0000                     global __CFG_EBTRB$OFF
   800                           __CFG_EBTRB$OFF equ 0x0
   801  0000                     	file	"C:\Users\me\AppData\Local\Temp\sans."
   802                           	line	#
   803                           psect	cinit,class=CODE,delta=1,reloc=2
   804                           global __pcinit
   805                           __pcinit:
   806  001160                     global start_initialization
   807                           start_initialization:
   808  001160                     
   809                           global __initialization
   810                           __initialization:
   811  001160                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   812                           global __pbssCOMRAM
   813                           __pbssCOMRAM:
   814  000033                     	global	_trash
   815                           _trash:
   816  000033                            ds      1
   817  000033                     	global	_cycleAlarmCounter
   818                           _cycleAlarmCounter:
   819  000034                            ds      1
   820  000034                     	global	_allArmed
   821                           _allArmed:
   822  000035                            ds      1
   823  000035                     	global	_Status_Extra_old
   824                           _Status_Extra_old:
   825  000036                            ds      1
   826  000036                     	global	_Status_Siren_old
   827                           _Status_Siren_old:
   828  000037                            ds      1
   829  000037                     	global	_Status_Ac_power_old
   830                           _Status_Ac_power_old:
   831  000038                            ds      1
   832  000038                     	global	_Status_Alarm_Enabled_old
   833                           _Status_Alarm_Enabled_old:
   834  000039                            ds      1
   835  000039                     	global	_Status_Alarm_Triggered_old
   836                           _Status_Alarm_Triggered_old:
   837  00003A                            ds      1
   838  00003A                     	global	_Status_Extra
   839                           _Status_Extra:
   840  00003B                            ds      1
   841  00003B                     	global	_Status_Siren
   842                           _Status_Siren:
   843  00003C                            ds      1
   844  00003C                     	global	_Status_Ac_power
   845                           _Status_Ac_power:
   846  00003D                            ds      1
   847  00003D                     	global	_Status_Alarm_Enabled
   848                           _Status_Alarm_Enabled:
   849  00003E                            ds      1
   850  00003E                     	global	_Status_Alarm_Triggered
   851                           _Status_Alarm_Triggered:
   852  00003F                            ds      1
   853  00003F                     	global	_received_char
   854                           _received_char:
   855  000040                            ds      1
   856  000040                     	global	_UART_Buffer_Ptr
   857                           _UART_Buffer_Ptr:
   858  000041                            ds      1
   859  000041                     	global	_UART_buffer
   860                           _UART_buffer:
   861  000042                            ds      8
   862  000042                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   863                           global __pdataCOMRAM
   864                           __pdataCOMRAM:
   865  00004A                     	file	"main.c"
   866                           	line	20
   867                           	global	_cycleAlarm
   868                           _cycleAlarm:
   869  00004A                            ds      1
   870  00004A                     	file	"C:\Users\me\AppData\Local\Temp\sans."
   871                           	line	#
   872                           psect	cinit
   873                           ; Initialize objects allocated to COMRAM (1 bytes)
   874                           	global __pidataCOMRAM
   875                           	; load TBLPTR registers with __pidataCOMRAM
   876                           	movlw	low (__pidataCOMRAM)
   877  001160  0E08               	movwf	tblptrl
   878  001162  6EF6               	movlw	high(__pidataCOMRAM)
   879  001164  0E12               	movwf	tblptrh
   880  001166  6EF7               	movlw	low highword(__pidataCOMRAM)
   881  001168  0E00               	movwf	tblptru
   882  00116A  6EF8               	tblrd*+ ;fetch initializer
   883  00116C  0009               	movff	tablat, __pdataCOMRAM+0		
   884  00116E  CFF5 F04A          	line	#
   885                           ; Clear objects allocated to COMRAM (23 bytes)
   886                           	global __pbssCOMRAM
   887                           lfsr	0,__pbssCOMRAM
   888  001172  EE00  F033         movlw	23
   889  001176  0E17               clear_0:
   890  001178                     clrf	postinc0,c
   891  001178  6AEE               decf	wreg
   892  00117A  06E8               bnz	clear_0
   893  00117C  E1FD               psect cinit,class=CODE,delta=1
   894                           global end_of_initialization,__end_of__initialization
   895                           
   896                           ;End of C runtime variable initialization code
   897                           
   898                           end_of_initialization:
   899  00117E                     __end_of__initialization:
   900  00117E                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   901  00117E  904B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   902  001180  924B               	GLOBAL	__Lmediumconst
   903                           	movlw	low highword(__Lmediumconst)
   904  001182  0E00               	movwf	tblptru
   905  001184  6EF8               movlb 0
   906  001186  0100               goto _main	;jump to C main() function
   907  001188  EFF1  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   908                           global __pcstackCOMRAM
   909                           __pcstackCOMRAM:
   910  000001                     ?_ADC_Init:	; 1 bytes @ 0x0
   911  000001                     ?_IC_Init:	; 1 bytes @ 0x0
   912  000001                     ?_UART_Init:	; 1 bytes @ 0x0
   913  000001                     ?_UART_Write_byte:	; 1 bytes @ 0x0
   914  000001                     ?_UART_clean_buffer:	; 1 bytes @ 0x0
   915  000001                     ?_send_Status:	; 1 bytes @ 0x0
   916  000001                     ?_UART_add_buffer:	; 1 bytes @ 0x0
   917  000001                     ??_UART_add_buffer:	; 1 bytes @ 0x0
   918  000001                     ?_main:	; 1 bytes @ 0x0
   919  000001                     	ds   4
   920  000001                     ?_delay_ms:	; 1 bytes @ 0x4
   921  000005                     ??_ADC_Init:	; 1 bytes @ 0x4
   922  000005                     ??_IC_Init:	; 1 bytes @ 0x4
   923  000005                     ??_UART_Init:	; 1 bytes @ 0x4
   924  000005                     ??_UART_Write_byte:	; 1 bytes @ 0x4
   925  000005                     ?_memset:	; 2 bytes @ 0x4
   926  000005                     	global	?_strlen
   927                           ?_strlen:	; 2 bytes @ 0x4
   928  000005                     	global	?_strchr
   929                           ?_strchr:	; 2 bytes @ 0x4
   930  000005                     	global	?___lwdiv
   931                           ?___lwdiv:	; 2 bytes @ 0x4
   932  000005                     	global	?___lwmod
   933                           ?___lwmod:	; 2 bytes @ 0x4
   934  000005                     	global	?___lmul
   935                           ?___lmul:	; 4 bytes @ 0x4
   936  000005                     	global	?___lldiv
   937                           ?___lldiv:	; 4 bytes @ 0x4
   938  000005                     	global	UART_Write_byte@data
   939                           UART_Write_byte@data:	; 1 bytes @ 0x4
   940  000005                     	global	delay_ms@repeat_2
   941                           delay_ms@repeat_2:	; 2 bytes @ 0x4
   942  000005                     	global	___lwdiv@dividend
   943                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   944  000005                     	global	___lwmod@dividend
   945                           ___lwmod@dividend:	; 2 bytes @ 0x4
   946  000005                     	global	memset@p1
   947                           memset@p1:	; 2 bytes @ 0x4
   948  000005                     	global	strchr@ptr
   949                           strchr@ptr:	; 2 bytes @ 0x4
   950  000005                     	global	strlen@s
   951                           strlen@s:	; 2 bytes @ 0x4
   952  000005                     	global	___lmul@multiplier
   953                           ___lmul@multiplier:	; 4 bytes @ 0x4
   954  000005                     	global	___lldiv@dividend
   955                           ___lldiv@dividend:	; 4 bytes @ 0x4
   956  000005                     	ds   1
   957  000005                     ?_UART_Write_Text:	; 1 bytes @ 0x5
   958  000006                     	global	UART_Write_Text@text
   959                           UART_Write_Text@text:	; 2 bytes @ 0x5
   960  000006                     	ds   1
   961  000006                     ??_strlen:	; 1 bytes @ 0x6
   962  000007                     ??_delay_ms:	; 1 bytes @ 0x6
   963  000007                     	global	___lwdiv@divisor
   964                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   965  000007                     	global	___lwmod@divisor
   966                           ___lwmod@divisor:	; 2 bytes @ 0x6
   967  000007                     	global	memset@c
   968                           memset@c:	; 2 bytes @ 0x6
   969  000007                     	global	strchr@chr
   970                           strchr@chr:	; 2 bytes @ 0x6
   971  000007                     	ds   1
   972  000007                     ?_delay_s:	; 1 bytes @ 0x7
   973  000008                     ??_UART_Write_Text:	; 1 bytes @ 0x7
   974  000008                     	global	?_ADC_Get
   975                           ?_ADC_Get:	; 2 bytes @ 0x7
   976  000008                     	global	delay_s@repeat_3
   977                           delay_s@repeat_3:	; 2 bytes @ 0x7
   978  000008                     	ds   1
   979  000008                     ??_strchr:	; 1 bytes @ 0x8
   980  000009                     ??___lwdiv:	; 1 bytes @ 0x8
   981  000009                     ??___lwmod:	; 1 bytes @ 0x8
   982  000009                     	global	___lwmod@counter
   983                           ___lwmod@counter:	; 1 bytes @ 0x8
   984  000009                     	global	___lwdiv@quotient
   985                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   986  000009                     	global	memset@n
   987                           memset@n:	; 2 bytes @ 0x8
   988  000009                     	global	strlen@cp
   989                           strlen@cp:	; 2 bytes @ 0x8
   990  000009                     	global	___lmul@multiplicand
   991                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   992  000009                     	global	___lldiv@divisor
   993                           ___lldiv@divisor:	; 4 bytes @ 0x8
   994  000009                     	ds   1
   995  000009                     ??_delay_s:	; 1 bytes @ 0x9
   996  00000A                     ??_ADC_Get:	; 1 bytes @ 0x9
   997  00000A                     	global	UART_Write_Text@toSend
   998                           UART_Write_Text@toSend:	; 1 bytes @ 0x9
   999  00000A                     	ds   1
  1000  00000A                     ??_memset:	; 1 bytes @ 0xA
  1001  00000B                     	global	?_strncmp
  1002                           ?_strncmp:	; 2 bytes @ 0xA
  1003  00000B                     	global	___lwdiv@counter
  1004                           ___lwdiv@counter:	; 1 bytes @ 0xA
  1005  00000B                     	global	UART_Write_Text@i
  1006                           UART_Write_Text@i:	; 2 bytes @ 0xA
  1007  00000B                     	global	memset@p
  1008                           memset@p:	; 2 bytes @ 0xA
  1009  00000B                     	global	strncmp@s1
  1010                           strncmp@s1:	; 2 bytes @ 0xA
  1011  00000B                     	ds   1
  1012  00000B                     ?_utoa:	; 2 bytes @ 0xB
  1013  00000C                     	global	ADC_Get@advalue
  1014                           ADC_Get@advalue:	; 2 bytes @ 0xB
  1015  00000C                     	global	utoa@buf
  1016                           utoa@buf:	; 2 bytes @ 0xB
  1017  00000C                     	ds   1
  1018  00000C                     ??_UART_clean_buffer:	; 1 bytes @ 0xC
  1019  00000D                     ??___lmul:	; 1 bytes @ 0xC
  1020  00000D                     ??___lldiv:	; 1 bytes @ 0xC
  1021  00000D                     	global	strncmp@s2
  1022                           strncmp@s2:	; 2 bytes @ 0xC
  1023  00000D                     	global	___lmul@product
  1024                           ___lmul@product:	; 4 bytes @ 0xC
  1025  00000D                     	global	___lldiv@quotient
  1026                           ___lldiv@quotient:	; 4 bytes @ 0xC
  1027  00000D                     	ds   1
  1028  00000D                     	global	utoa@val
  1029                           utoa@val:	; 2 bytes @ 0xD
  1030  00000E                     	ds   1
  1031  00000E                     	global	strncmp@len
  1032                           strncmp@len:	; 2 bytes @ 0xE
  1033  00000F                     	ds   1
  1034  00000F                     	global	utoa@base
  1035                           utoa@base:	; 2 bytes @ 0xF
  1036  000010                     	ds   1
  1037  000010                     ??_strncmp:	; 1 bytes @ 0x10
  1038  000011                     	global	___lldiv@counter
  1039                           ___lldiv@counter:	; 1 bytes @ 0x10
  1040  000011                     	ds   1
  1041  000011                     ??_utoa:	; 1 bytes @ 0x11
  1042  000012                     	global	utoa@v
  1043                           utoa@v:	; 2 bytes @ 0x11
  1044  000012                     	ds   2
  1045  000012                     	global	?_strstr
  1046                           ?_strstr:	; 2 bytes @ 0x13
  1047  000014                     	global	utoa@c
  1048                           utoa@c:	; 1 bytes @ 0x13
  1049  000014                     	global	strstr@s1
  1050                           strstr@s1:	; 2 bytes @ 0x13
  1051  000014                     	ds   1
  1052  000014                     ?_itoa:	; 2 bytes @ 0x14
  1053  000015                     	global	itoa@buf
  1054                           itoa@buf:	; 2 bytes @ 0x14
  1055  000015                     	ds   1
  1056  000015                     	global	strstr@s2
  1057                           strstr@s2:	; 2 bytes @ 0x15
  1058  000016                     	ds   1
  1059  000016                     	global	itoa@val
  1060                           itoa@val:	; 2 bytes @ 0x16
  1061  000017                     	ds   1
  1062  000017                     ??_strstr:	; 1 bytes @ 0x17
  1063  000018                     	ds   1
  1064  000018                     	global	itoa@base
  1065                           itoa@base:	; 2 bytes @ 0x18
  1066  000019                     	ds   2
  1067  000019                     ??_itoa:	; 1 bytes @ 0x1A
  1068  00001B                     	global	itoa@cp
  1069                           itoa@cp:	; 2 bytes @ 0x1A
  1070  00001B                     	ds   2
  1071  00001B                     ??_send_Status:	; 1 bytes @ 0x1C
  1072  00001D                     	global	send_Status@buffer
  1073                           send_Status@buffer:	; 10 bytes @ 0x1C
  1074  00001D                     	ds   10
  1075  00001D                     	global	send_Status@temp
  1076                           send_Status@temp:	; 4 bytes @ 0x26
  1077  000027                     	ds   4
  1078  000027                     	global	send_Status@adcValue
  1079                           send_Status@adcValue:	; 2 bytes @ 0x2A
  1080  00002B                     	ds   2
  1081  00002B                     	global	send_Status@batValue
  1082                           send_Status@batValue:	; 2 bytes @ 0x2C
  1083  00002D                     	ds   2
  1084  00002D                     ??_main:	; 1 bytes @ 0x2E
  1085  00002F                     	ds   2
  1086  00002F                     	global	main@i
  1087                           main@i:	; 2 bytes @ 0x30
  1088  000031                     	ds   2
  1089  000031                     ;!
  1090                           ;!Data Sizes:
  1091                           ;!    Strings     223
  1092                           ;!    Constant    0
  1093                           ;!    Data        1
  1094                           ;!    BSS         23
  1095                           ;!    Persistent  0
  1096                           ;!    Stack       0
  1097                           ;!
  1098                           ;!Auto Spaces:
  1099                           ;!    Space          Size  Autos    Used
  1100                           ;!    COMRAM          126     50      74
  1101                           ;!    BANK0           128      0       0
  1102                           
  1103                           ;!
  1104                           ;!Pointer List with Targets:
  1105                           ;!
  1106                           ;!    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
  1107                           ;!		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
  1108                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
  1109                           ;!		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
  1110                           ;!		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
  1111                           ;!
  1112                           ;!    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
  1113                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 
  1114                           ;!
  1115                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 9
  1116                           ;!		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
  1117                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
  1118                           ;!		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
  1119                           ;!		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
  1120                           ;!
  1121                           ;!    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
  1122                           ;!		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
  1123                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
  1124                           ;!		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
  1125                           ;!		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
  1126                           ;!
  1127                           ;!    strchr@ptr	PTR const unsigned char  size(2) Largest target is 8
  1128                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 
  1129                           ;!
  1130                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 8
  1131                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 
  1132                           ;!
  1133                           ;!    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
  1134                           ;!		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
  1135                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
  1136                           ;!		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
  1137                           ;!		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
  1138                           ;!
  1139                           ;!    strstr@s1	PTR const unsigned char  size(2) Largest target is 8
  1140                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 
  1141                           ;!
  1142                           ;!    memset@p1	PTR void  size(2) Largest target is 8
  1143                           ;!		 -> UART_buffer(COMRAM[8]), 
  1144                           ;!
  1145                           ;!    memset@p	PTR unsigned char  size(2) Largest target is 8
  1146                           ;!		 -> UART_buffer(COMRAM[8]), 
  1147                           ;!
  1148                           ;!    utoa@buf	PTR unsigned char  size(2) Largest target is 10
  1149                           ;!		 -> send_Status@buffer(COMRAM[10]), 
  1150                           ;!
  1151                           ;!    sp__utoa	PTR unsigned char  size(2) Largest target is 10
  1152                           ;!		 -> send_Status@buffer(COMRAM[10]), 
  1153                           ;!
  1154                           ;!    itoa@buf	PTR unsigned char  size(2) Largest target is 10
  1155                           ;!		 -> send_Status@buffer(COMRAM[10]), 
  1156                           ;!
  1157                           ;!    itoa@cp	PTR unsigned char  size(2) Largest target is 10
  1158                           ;!		 -> send_Status@buffer(COMRAM[10]), 
  1159                           ;!
  1160                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 8
  1161                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 
  1162                           ;!
  1163                           ;!    sp__itoa	PTR unsigned char  size(2) Largest target is 10
  1164                           ;!		 -> send_Status@buffer(COMRAM[10]), 
  1165                           ;!
  1166                           ;!    sp__memset	PTR void  size(2) Largest target is 8
  1167                           ;!		 -> UART_buffer(COMRAM[8]), 
  1168                           ;!
  1169                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
  1170                           ;!		 -> STR_30(CODE[13]), STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), 
  1171                           ;!		 -> STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
  1172                           ;!		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), 
  1173                           ;!		 -> STR_2(CODE[6]), STR_1(CODE[5]), send_Status@buffer(COMRAM[10]), 
  1174                           ;!
  1175                           
  1176                           
  1177                           ;!
  1178                           ;!Critical Paths under _main in COMRAM
  1179                           ;!
  1180                           ;!    _main->_send_Status
  1181                           ;!    _strstr->_strncmp
  1182                           ;!    _strncmp->_strlen
  1183                           ;!    _send_Status->_itoa
  1184                           ;!    _itoa->_utoa
  1185                           ;!    _utoa->___lwdiv
  1186                           ;!    _UART_Write_Text->_UART_Write_byte
  1187                           ;!    _ADC_Get->_delay_ms
  1188                           ;!    _delay_s->_delay_ms
  1189                           ;!    _UART_clean_buffer->_memset
  1190                           ;!
  1191                           ;!Critical Paths under _UART_add_buffer in COMRAM
  1192                           ;!
  1193                           ;!    None.
  1194                           ;!
  1195                           ;!Critical Paths under _main in BANK0
  1196                           ;!
  1197                           ;!    None.
  1198                           ;!
  1199                           ;!Critical Paths under _UART_add_buffer in BANK0
  1200                           ;!
  1201                           ;!    None.
  1202                           
  1203 ;;
  1204 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1205 ;;
  1206                           
  1207                           ;!
  1208                           ;!Call Graph Tables:
  1209                           ;!
  1210                           ;! ---------------------------------------------------------------------------------
  1211                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1212                           ;! ---------------------------------------------------------------------------------
  1213                           ;! (0) _main                                                 5     5      0   11025
  1214                           ;!                                             46 COMRAM     4     4      0
  1215                           ;!                           _ADC_Init
  1216                           ;!                            _IC_Init
  1217                           ;!                          _UART_Init
  1218                           ;!                    _UART_Write_Text
  1219                           ;!                  _UART_clean_buffer
  1220                           ;!                           _delay_ms
  1221                           ;!                            _delay_s
  1222                           ;!                        _send_Status
  1223                           ;!                             _strstr
  1224                           ;! ---------------------------------------------------------------------------------
  1225                           ;! (1) _strstr                                               4     0      4    3377
  1226                           ;!                                             19 COMRAM     4     0      4
  1227                           ;!                             _strchr
  1228                           ;!                             _strlen
  1229                           ;!                            _strncmp
  1230                           ;! ---------------------------------------------------------------------------------
  1231                           ;! (2) _strncmp                                              9     3      6     362
  1232                           ;!                                             10 COMRAM     9     3      6
  1233                           ;!                             _strlen (ARG)
  1234                           ;! ---------------------------------------------------------------------------------
  1235                           ;! (2) _strlen                                               6     4      2     166
  1236                           ;!                                              4 COMRAM     6     4      2
  1237                           ;! ---------------------------------------------------------------------------------
  1238                           ;! (2) _strchr                                               5     1      4     240
  1239                           ;!                                              4 COMRAM     5     1      4
  1240                           ;! ---------------------------------------------------------------------------------
  1241                           ;! (1) _send_Status                                         18    18      0    4424
  1242                           ;!                                             28 COMRAM    18    18      0
  1243                           ;!                            _ADC_Get
  1244                           ;!                    _UART_Write_Text
  1245                           ;!                            ___lldiv
  1246                           ;!                             ___lmul
  1247                           ;!                               _itoa
  1248                           ;! ---------------------------------------------------------------------------------
  1249                           ;! (2) _itoa                                                 8     2      6    1698
  1250                           ;!                                             20 COMRAM     8     2      6
  1251                           ;!                               _utoa
  1252                           ;! ---------------------------------------------------------------------------------
  1253                           ;! (3) _utoa                                                 9     3      6    1307
  1254                           ;!                                             11 COMRAM     9     3      6
  1255                           ;!                            ___lwdiv
  1256                           ;!                            ___lwmod
  1257                           ;! ---------------------------------------------------------------------------------
  1258                           ;! (4) ___lwmod                                              5     1      4     311
  1259                           ;!                                              4 COMRAM     5     1      4
  1260                           ;! ---------------------------------------------------------------------------------
  1261                           ;! (4) ___lwdiv                                              7     3      4     466
  1262                           ;!                                              4 COMRAM     7     3      4
  1263                           ;! ---------------------------------------------------------------------------------
  1264                           ;! (2) ___lmul                                              12     4      8     370
  1265                           ;!                                              4 COMRAM    12     4      8
  1266                           ;! ---------------------------------------------------------------------------------
  1267                           ;! (2) ___lldiv                                             13     5      8     314
  1268                           ;!                                              4 COMRAM    13     5      8
  1269                           ;! ---------------------------------------------------------------------------------
  1270                           ;! (2) _UART_Write_Text                                      7     5      2    1268
  1271                           ;!                                              5 COMRAM     7     5      2
  1272                           ;!                    _UART_Write_byte
  1273                           ;! ---------------------------------------------------------------------------------
  1274                           ;! (3) _UART_Write_byte                                      1     1      0      15
  1275                           ;!                                              4 COMRAM     1     1      0
  1276                           ;! ---------------------------------------------------------------------------------
  1277                           ;! (2) _ADC_Get                                              6     4      2     653
  1278                           ;!                                              7 COMRAM     6     4      2
  1279                           ;!                           _delay_ms
  1280                           ;! ---------------------------------------------------------------------------------
  1281                           ;! (1) _delay_s                                              2     0      2     956
  1282                           ;!                                              7 COMRAM     2     0      2
  1283                           ;!                           _delay_ms
  1284                           ;! ---------------------------------------------------------------------------------
  1285                           ;! (3) _delay_ms                                             3     1      2     630
  1286                           ;!                                              4 COMRAM     3     1      2
  1287                           ;! ---------------------------------------------------------------------------------
  1288                           ;! (1) _UART_clean_buffer                                    0     0      0     324
  1289                           ;!                             _memset
  1290                           ;! ---------------------------------------------------------------------------------
  1291                           ;! (2) _memset                                               8     2      6     324
  1292                           ;!                                              4 COMRAM     8     2      6
  1293                           ;! ---------------------------------------------------------------------------------
  1294                           ;! (1) _UART_Init                                            0     0      0       0
  1295                           ;! ---------------------------------------------------------------------------------
  1296                           ;! (1) _IC_Init                                              0     0      0       0
  1297                           ;! ---------------------------------------------------------------------------------
  1298                           ;! (1) _ADC_Init                                             0     0      0       0
  1299                           ;! ---------------------------------------------------------------------------------
  1300                           ;! Estimated maximum stack depth 4
  1301                           ;! ---------------------------------------------------------------------------------
  1302                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1303                           ;! ---------------------------------------------------------------------------------
  1304                           ;! (5) _UART_add_buffer                                      4     4      0       0
  1305                           ;!                                              0 COMRAM     4     4      0
  1306                           ;! ---------------------------------------------------------------------------------
  1307                           ;! Estimated maximum stack depth 5
  1308                           ;! ---------------------------------------------------------------------------------
  1309                           ;!
  1310                           ;! Call Graph Graphs:
  1311                           ;!
  1312                           ;! _main (ROOT)
  1313                           ;!   _ADC_Init
  1314                           ;!   _IC_Init
  1315                           ;!   _UART_Init
  1316                           ;!   _UART_Write_Text
  1317                           ;!     _UART_Write_byte
  1318                           ;!   _UART_clean_buffer
  1319                           ;!     _memset
  1320                           ;!   _delay_ms
  1321                           ;!   _delay_s
  1322                           ;!     _delay_ms
  1323                           ;!   _send_Status
  1324                           ;!     _ADC_Get
  1325                           ;!       _delay_ms
  1326                           ;!     _UART_Write_Text
  1327                           ;!       _UART_Write_byte
  1328                           ;!     ___lldiv
  1329                           ;!     ___lmul
  1330                           ;!     _itoa
  1331                           ;!       _utoa
  1332                           ;!         ___lwdiv
  1333                           ;!         ___lwmod
  1334                           ;!   _strstr
  1335                           ;!     _strchr
  1336                           ;!     _strlen
  1337                           ;!     _strncmp
  1338                           ;!       _strlen (ARG)
  1339                           ;!
  1340                           ;! _UART_add_buffer (ROOT)
  1341                           ;!
  1342                           
  1343                           ;! Address spaces:
  1344                           
  1345                           ;!Name               Size   Autos  Total    Cost      Usage
  1346                           ;!BIGRAM              FF      0       0       6        0.0%
  1347                           ;!EEDATA              80      0       0       0        0.0%
  1348                           ;!BITBANK0            80      0       0       3        0.0%
  1349                           ;!BANK0               80      0       0       4        0.0%
  1350                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1351                           ;!COMRAM              7E     32      4A       1       58.7%
  1352                           ;!BITSFR               0      0       0     200        0.0%
  1353                           ;!SFR                  0      0       0     200        0.0%
  1354                           ;!STACK                0      0       0       2        0.0%
  1355                           ;!NULL                 0      0       0       0        0.0%
  1356                           ;!ABS                  0      0      4A       5        0.0%
  1357                           ;!DATA                 0      0      4A       7        0.0%
  1358                           ;!CODE                 0      0       0       0        0.0%
  1359                           
  1360                           	global	_main
  1361                           
  1362 ;; *************** function _main *****************
  1363 ;; Defined at:
  1364 ;;		line 25 in file "main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  i               2   48[COMRAM] int 
  1369 ;;  counter         1    0        unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0
  1379 ;;      Params:         0       0
  1380 ;;      Locals:         2       0
  1381 ;;      Temps:          2       0
  1382 ;;      Totals:         4       0
  1383 ;;Total ram usage:        4 bytes
  1384 ;; Hardware stack levels required when called:    5
  1385 ;; This function calls:
  1386 ;;		_ADC_Init
  1387 ;;		_IC_Init
  1388 ;;		_UART_Init
  1389 ;;		_UART_Write_Text
  1390 ;;		_UART_clean_buffer
  1391 ;;		_delay_ms
  1392 ;;		_delay_s
  1393 ;;		_send_Status
  1394 ;;		_strstr
  1395 ;; This function is called by:
  1396 ;;		Startup code after reset
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1400                           	file	"main.c"
  1401                           	line	25
  1402                           global __ptext0
  1403                           __ptext0:
  1404  0001E2                     psect	text0
  1405                           	file	"main.c"
  1406                           	line	25
  1407                           	global	__size_of_main
  1408                           	__size_of_main	equ	__end_of_main-_main
  1409  0000                     	
  1410                           _main:
  1411  0001E2                     ;incstack = 0
  1412                           	opt	stack 26
  1413                           	line	30
  1414                           	
  1415                           l1772:
  1416  0001E2                     ;main.c: 30: IC_Init();
  1417                           	call	_IC_Init	;wreg free
  1418  0001E2  EC7B  F008         	line	31
  1419                           	
  1420                           l1774:
  1421  0001E6                     ;main.c: 31: UART_Init();
  1422                           	call	_UART_Init	;wreg free
  1423  0001E6  ECE9  F008         	line	32
  1424                           	
  1425                           l1776:
  1426  0001EA                     ;main.c: 32: ADC_Init();
  1427                           	call	_ADC_Init	;wreg free
  1428  0001EA  ECF8  F008         	line	34
  1429                           	
  1430                           l1778:
  1431  0001EE                     ;main.c: 34: LATBbits.LATB4 = 1;
  1432                           	bsf	((c:3978)),c,4	;volatile
  1433  0001EE  888A               	line	35
  1434                           	
  1435                           l1780:
  1436  0001F0                     ;main.c: 35: delay_ms(50);
  1437                           	movlw	high(032h)
  1438  0001F0  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1439  0001F2  6E06               	movlw	low(032h)
  1440  0001F4  0E32               	movwf	((c:delay_ms@repeat_2)),c
  1441  0001F6  6E05               	call	_delay_ms	;wreg free
  1442  0001F8  EC5F  F008         	line	36
  1443                           	
  1444                           l1782:
  1445  0001FC                     ;main.c: 36: LATBbits.LATB4 = 0;
  1446                           	bcf	((c:3978)),c,4	;volatile
  1447  0001FC  988A               	line	38
  1448                           	
  1449                           l1784:
  1450  0001FE                     ;main.c: 38: LATBbits.LATB3 = 1;
  1451                           	bsf	((c:3978)),c,3	;volatile
  1452  0001FE  868A               	line	39
  1453                           	
  1454                           l1786:
  1455  000200                     ;main.c: 39: LATAbits.LATA0 = 0;
  1456                           	bcf	((c:3977)),c,0	;volatile
  1457  000200  9089               	line	40
  1458                           	
  1459                           l1788:
  1460  000202                     ;main.c: 40: LATBbits.LATB5 = 1;
  1461                           	bsf	((c:3978)),c,5	;volatile
  1462  000202  8A8A               	line	41
  1463                           	
  1464                           l1790:
  1465  000204                     ;main.c: 41: delay_s(1);
  1466                           	movlw	high(01h)
  1467  000204  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1468  000206  6E09               	movlw	low(01h)
  1469  000208  0E01               	movwf	((c:delay_s@repeat_3)),c
  1470  00020A  6E08               	call	_delay_s	;wreg free
  1471  00020C  EC96  F008         	line	42
  1472                           	
  1473                           l1792:
  1474  000210                     ;main.c: 42: LATBbits.LATB3 = 0;
  1475                           	bcf	((c:3978)),c,3	;volatile
  1476  000210  968A               	line	43
  1477                           	
  1478                           l1794:
  1479  000212                     ;main.c: 43: LATAbits.LATA0 = 1;
  1480                           	bsf	((c:3977)),c,0	;volatile
  1481  000212  8089               	line	44
  1482                           	
  1483                           l1796:
  1484  000214                     ;main.c: 44: LATBbits.LATB5 = 0;
  1485                           	bcf	((c:3978)),c,5	;volatile
  1486  000214  9A8A               	line	45
  1487                           	
  1488                           l1798:
  1489  000216                     ;main.c: 45: delay_s(1);
  1490                           	movlw	high(01h)
  1491  000216  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1492  000218  6E09               	movlw	low(01h)
  1493  00021A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1494  00021C  6E08               	call	_delay_s	;wreg free
  1495  00021E  EC96  F008         	line	46
  1496                           	
  1497                           l1800:
  1498  000222                     ;main.c: 46: LATBbits.LATB3 = 1;
  1499                           	bsf	((c:3978)),c,3	;volatile
  1500  000222  868A               	line	47
  1501                           	
  1502                           l1802:
  1503  000224                     ;main.c: 47: LATAbits.LATA0 = 0;
  1504                           	bcf	((c:3977)),c,0	;volatile
  1505  000224  9089               	line	48
  1506                           	
  1507                           l1804:
  1508  000226                     ;main.c: 48: delay_s(1);
  1509                           	movlw	high(01h)
  1510  000226  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1511  000228  6E09               	movlw	low(01h)
  1512  00022A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1513  00022C  6E08               	call	_delay_s	;wreg free
  1514  00022E  EC96  F008         	line	49
  1515                           	
  1516                           l1806:
  1517  000232                     ;main.c: 49: LATBbits.LATB3 = 0;
  1518                           	bcf	((c:3978)),c,3	;volatile
  1519  000232  968A               	line	50
  1520                           	
  1521                           l1808:
  1522  000234                     ;main.c: 50: LATAbits.LATA0 = 1;
  1523                           	bsf	((c:3977)),c,0	;volatile
  1524  000234  8089               	line	51
  1525                           	
  1526                           l1810:
  1527  000236                     ;main.c: 51: delay_s(1);
  1528                           	movlw	high(01h)
  1529  000236  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1530  000238  6E09               	movlw	low(01h)
  1531  00023A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1532  00023C  6E08               	call	_delay_s	;wreg free
  1533  00023E  EC96  F008         	line	52
  1534                           	
  1535                           l1812:
  1536  000242                     ;main.c: 52: LATBbits.LATB3 = 0;
  1537                           	bcf	((c:3978)),c,3	;volatile
  1538  000242  968A               	line	53
  1539                           	
  1540                           l1814:
  1541  000244                     ;main.c: 53: LATAbits.LATA0 = 0;
  1542                           	bcf	((c:3977)),c,0	;volatile
  1543  000244  9089               	line	55
  1544                           	
  1545                           l1816:
  1546  000246                     ;main.c: 55: UART_Write_Text((unsigned char *) "Hello World1\n");
  1547                           		movlw	low(STR_11)
  1548  000246  0E10               	movwf	((c:UART_Write_Text@text)),c
  1549  000248  6E06               	movlw	high(STR_11)
  1550  00024A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1551  00024C  6E07               
  1552                           	call	_UART_Write_Text	;wreg free
  1553  00024E  EC9C  F006         	line	56
  1554                           	
  1555                           l1818:
  1556  000252                     ;main.c: 56: UART_Write_Text((unsigned char *) "Hello World2\n");
  1557                           		movlw	low(STR_12)
  1558  000252  0E1E               	movwf	((c:UART_Write_Text@text)),c
  1559  000254  6E06               	movlw	high(STR_12)
  1560  000256  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1561  000258  6E07               
  1562                           	call	_UART_Write_Text	;wreg free
  1563  00025A  EC9C  F006         	line	57
  1564                           	
  1565                           l1820:
  1566  00025E                     ;main.c: 57: UART_Write_Text((unsigned char *) "Hello World31\n");
  1567                           		movlw	low(STR_13)
  1568  00025E  0E01               	movwf	((c:UART_Write_Text@text)),c
  1569  000260  6E06               	movlw	high(STR_13)
  1570  000262  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1571  000264  6E07               
  1572                           	call	_UART_Write_Text	;wreg free
  1573  000266  EC9C  F006         	line	59
  1574                           	
  1575                           l1822:
  1576  00026A                     ;main.c: 59: for(int i=0;i<100;i++){
  1577                           	movlw	high(0)
  1578  00026A  0E00               	movwf	((c:main@i+1)),c
  1579  00026C  6E32               	movlw	low(0)
  1580  00026E  0E00               	movwf	((c:main@i)),c
  1581  000270  6E31               	
  1582                           l1824:
  1583  000272                     	btfsc	((c:main@i+1)),c,7
  1584  000272  BE32               	goto	u1221
  1585  000274  EF45  F001         	movf	((c:main@i+1)),c,w
  1586  000278  5032               	bnz	u1220
  1587  00027A  E109               	movlw	100
  1588  00027C  0E64               	subwf	 ((c:main@i)),c,w
  1589  00027E  5C31               	btfss	status,0
  1590  000280  A0D8               	goto	u1221
  1591  000282  EF45  F001         	goto	u1220
  1592  000286  EF47  F001         
  1593                           u1221:
  1594  00028A                     	goto	l169
  1595  00028A  EF4B  F001         u1220:
  1596  00028E                     	goto	l1834
  1597  00028E  EF63  F001         	
  1598                           l1826:
  1599  000292                     	goto	l1834
  1600  000292  EF63  F001         	
  1601                           l169:
  1602  000296                     	line	60
  1603                           ;main.c: 60: trash = RCREG;
  1604                           	movff	(c:4014),(c:_trash)	;volatile
  1605  000296  CFAE F033          	line	61
  1606                           	
  1607                           l1828:
  1608  00029A                     ;main.c: 61: UART_clean_buffer();
  1609                           	call	_UART_clean_buffer	;wreg free
  1610  00029A  ECC6  F008         	line	59
  1611                           	
  1612                           l1830:
  1613  00029E                     	infsnz	((c:main@i)),c
  1614  00029E  4A31               	incf	((c:main@i+1)),c
  1615  0002A0  2A32               	
  1616                           l1832:
  1617  0002A2                     	btfsc	((c:main@i+1)),c,7
  1618  0002A2  BE32               	goto	u1231
  1619  0002A4  EF5D  F001         	movf	((c:main@i+1)),c,w
  1620  0002A8  5032               	bnz	u1230
  1621  0002AA  E109               	movlw	100
  1622  0002AC  0E64               	subwf	 ((c:main@i)),c,w
  1623  0002AE  5C31               	btfss	status,0
  1624  0002B0  A0D8               	goto	u1231
  1625  0002B2  EF5D  F001         	goto	u1230
  1626  0002B6  EF5F  F001         
  1627                           u1231:
  1628  0002BA                     	goto	l169
  1629  0002BA  EF4B  F001         u1230:
  1630  0002BE                     	goto	l1834
  1631  0002BE  EF63  F001         	
  1632                           l170:
  1633  0002C2                     	goto	l1834
  1634  0002C2  EF63  F001         	line	65
  1635                           ;main.c: 62: };main.c: 64: unsigned char counter;;main.c: 65: while (1) {
  1636                           	
  1637                           l171:
  1638  0002C6                     	line	69
  1639                           	
  1640                           l1834:
  1641  0002C6                     ;main.c: 69: if (strstr(UART_buffer, "0_STATUS") != (0) | strstr(UART_buffer, "1_STATUS"
                                 ) != (0)) {
  1642                           		movlw	low(_UART_buffer)
  1643  0002C6  0E42               	movwf	((c:strstr@s1)),c
  1644  0002C8  6E14               	movlw	high(_UART_buffer)
  1645  0002CA  0E00               	movwf	((c:strstr@s1+1)),c
  1646  0002CC  6E15               
  1647                           		movlw	low(STR_15)
  1648  0002CE  0EC0               	movwf	((c:strstr@s2)),c
  1649  0002D0  6E16               	movlw	high(STR_15)
  1650  0002D2  0E01               	movwf	((c:strstr@s2+1)),c
  1651  0002D4  6E17               
  1652                           	call	_strstr	;wreg free
  1653  0002D6  EC87  F005         	movf	(0+?_strstr),c,w
  1654  0002DA  5014               iorwf	(1+?_strstr),c,w
  1655  0002DC  1015               	btfss	status,2
  1656  0002DE  A4D8               	goto	u1241
  1657  0002E0  EF74  F001         	goto	u1240
  1658  0002E4  EF77  F001         
  1659                           u1241:
  1660  0002E8                     	movlw	1
  1661  0002E8  0E01               	goto	u1242
  1662  0002EA  EF78  F001         u1240:
  1663  0002EE                     	movlw	0
  1664  0002EE  0E00               u1242:
  1665  0002F0                     	
  1666                           	movwf	(??_main+0+0)&0ffh,c
  1667  0002F0  6E2F               		movlw	low(_UART_buffer)
  1668  0002F2  0E42               	movwf	((c:strstr@s1)),c
  1669  0002F4  6E14               	movlw	high(_UART_buffer)
  1670  0002F6  0E00               	movwf	((c:strstr@s1+1)),c
  1671  0002F8  6E15               
  1672                           		movlw	low(STR_14)
  1673  0002FA  0EB7               	movwf	((c:strstr@s2)),c
  1674  0002FC  6E16               	movlw	high(STR_14)
  1675  0002FE  0E01               	movwf	((c:strstr@s2+1)),c
  1676  000300  6E17               
  1677                           	call	_strstr	;wreg free
  1678  000302  EC87  F005         	movf	(0+?_strstr),c,w
  1679  000306  5014               iorwf	(1+?_strstr),c,w
  1680  000308  1015               	btfss	status,2
  1681  00030A  A4D8               	goto	u1251
  1682  00030C  EF8A  F001         	goto	u1250
  1683  000310  EF8D  F001         
  1684                           u1251:
  1685  000314                     	movlw	1
  1686  000314  0E01               	goto	u1252
  1687  000316  EF8E  F001         u1250:
  1688  00031A                     	movlw	0
  1689  00031A  0E00               u1252:
  1690  00031C                     	
  1691                           	iorwf	(??_main+0+0),c,w
  1692  00031C  102F               	btfss	wreg,0
  1693  00031E  A0E8               	goto	u1261
  1694  000320  EF94  F001         	goto	u1260
  1695  000324  EF96  F001         u1261:
  1696  000328                     	goto	l1840
  1697  000328  EF9C  F001         u1260:
  1698  00032C                     	line	70
  1699                           	
  1700                           l1836:
  1701  00032C                     ;main.c: 70: UART_clean_buffer();
  1702                           	call	_UART_clean_buffer	;wreg free
  1703  00032C  ECC6  F008         	line	71
  1704                           	
  1705                           l1838:
  1706  000330                     ;main.c: 71: send_Status();
  1707                           	call	_send_Status	;wreg free
  1708  000330  EC5B  F004         	line	72
  1709                           ;main.c: 72: } else if (strstr(UART_buffer, "0_ALAR_1") != (0) | strstr(UART_buffer, "1_
                                 ALAR_1") != (0)) {
  1710                           	goto	l1894
  1711  000334  EF4B  F003         	
  1712                           l172:
  1713  000338                     	
  1714                           l1840:
  1715  000338                     		movlw	low(_UART_buffer)
  1716  000338  0E42               	movwf	((c:strstr@s1)),c
  1717  00033A  6E14               	movlw	high(_UART_buffer)
  1718  00033C  0E00               	movwf	((c:strstr@s1+1)),c
  1719  00033E  6E15               
  1720                           		movlw	low(STR_17)
  1721  000340  0E9C               	movwf	((c:strstr@s2)),c
  1722  000342  6E16               	movlw	high(STR_17)
  1723  000344  0E01               	movwf	((c:strstr@s2+1)),c
  1724  000346  6E17               
  1725                           	call	_strstr	;wreg free
  1726  000348  EC87  F005         	movf	(0+?_strstr),c,w
  1727  00034C  5014               iorwf	(1+?_strstr),c,w
  1728  00034E  1015               	btfss	status,2
  1729  000350  A4D8               	goto	u1271
  1730  000352  EFAD  F001         	goto	u1270
  1731  000356  EFB0  F001         
  1732                           u1271:
  1733  00035A                     	movlw	1
  1734  00035A  0E01               	goto	u1272
  1735  00035C  EFB1  F001         u1270:
  1736  000360                     	movlw	0
  1737  000360  0E00               u1272:
  1738  000362                     	
  1739                           	movwf	(??_main+0+0)&0ffh,c
  1740  000362  6E2F               		movlw	low(_UART_buffer)
  1741  000364  0E42               	movwf	((c:strstr@s1)),c
  1742  000366  6E14               	movlw	high(_UART_buffer)
  1743  000368  0E00               	movwf	((c:strstr@s1+1)),c
  1744  00036A  6E15               
  1745                           		movlw	low(STR_16)
  1746  00036C  0E93               	movwf	((c:strstr@s2)),c
  1747  00036E  6E16               	movlw	high(STR_16)
  1748  000370  0E01               	movwf	((c:strstr@s2+1)),c
  1749  000372  6E17               
  1750                           	call	_strstr	;wreg free
  1751  000374  EC87  F005         	movf	(0+?_strstr),c,w
  1752  000378  5014               iorwf	(1+?_strstr),c,w
  1753  00037A  1015               	btfss	status,2
  1754  00037C  A4D8               	goto	u1281
  1755  00037E  EFC3  F001         	goto	u1280
  1756  000382  EFC6  F001         
  1757                           u1281:
  1758  000386                     	movlw	1
  1759  000386  0E01               	goto	u1282
  1760  000388  EFC7  F001         u1280:
  1761  00038C                     	movlw	0
  1762  00038C  0E00               u1282:
  1763  00038E                     	
  1764                           	iorwf	(??_main+0+0),c,w
  1765  00038E  102F               	btfss	wreg,0
  1766  000390  A0E8               	goto	u1291
  1767  000392  EFCD  F001         	goto	u1290
  1768  000396  EFCF  F001         u1291:
  1769  00039A                     	goto	l1846
  1770  00039A  EFD5  F001         u1290:
  1771  00039E                     	line	73
  1772                           	
  1773                           l1842:
  1774  00039E                     ;main.c: 73: UART_clean_buffer();
  1775                           	call	_UART_clean_buffer	;wreg free
  1776  00039E  ECC6  F008         	line	74
  1777                           	
  1778                           l1844:
  1779  0003A2                     ;main.c: 74: Status_Alarm_Enabled = 0b1;
  1780                           	movlw	low(01h)
  1781  0003A2  0E01               	movwf	((c:_Status_Alarm_Enabled)),c
  1782  0003A4  6E3E               	line	75
  1783                           ;main.c: 75: } else if (strstr(UART_buffer, "0_ALAR_0") != (0) | strstr(UART_buffer, "1_
                                 ALAR_0") != (0)) {
  1784                           	goto	l1894
  1785  0003A6  EF4B  F003         	
  1786                           l174:
  1787  0003AA                     	
  1788                           l1846:
  1789  0003AA                     		movlw	low(_UART_buffer)
  1790  0003AA  0E42               	movwf	((c:strstr@s1)),c
  1791  0003AC  6E14               	movlw	high(_UART_buffer)
  1792  0003AE  0E00               	movwf	((c:strstr@s1+1)),c
  1793  0003B0  6E15               
  1794                           		movlw	low(STR_19)
  1795  0003B2  0E66               	movwf	((c:strstr@s2)),c
  1796  0003B4  6E16               	movlw	high(STR_19)
  1797  0003B6  0E01               	movwf	((c:strstr@s2+1)),c
  1798  0003B8  6E17               
  1799                           	call	_strstr	;wreg free
  1800  0003BA  EC87  F005         	movf	(0+?_strstr),c,w
  1801  0003BE  5014               iorwf	(1+?_strstr),c,w
  1802  0003C0  1015               	btfss	status,2
  1803  0003C2  A4D8               	goto	u1301
  1804  0003C4  EFE6  F001         	goto	u1300
  1805  0003C8  EFE9  F001         
  1806                           u1301:
  1807  0003CC                     	movlw	1
  1808  0003CC  0E01               	goto	u1302
  1809  0003CE  EFEA  F001         u1300:
  1810  0003D2                     	movlw	0
  1811  0003D2  0E00               u1302:
  1812  0003D4                     	
  1813                           	movwf	(??_main+0+0)&0ffh,c
  1814  0003D4  6E2F               		movlw	low(_UART_buffer)
  1815  0003D6  0E42               	movwf	((c:strstr@s1)),c
  1816  0003D8  6E14               	movlw	high(_UART_buffer)
  1817  0003DA  0E00               	movwf	((c:strstr@s1+1)),c
  1818  0003DC  6E15               
  1819                           		movlw	low(STR_18)
  1820  0003DE  0E5D               	movwf	((c:strstr@s2)),c
  1821  0003E0  6E16               	movlw	high(STR_18)
  1822  0003E2  0E01               	movwf	((c:strstr@s2+1)),c
  1823  0003E4  6E17               
  1824                           	call	_strstr	;wreg free
  1825  0003E6  EC87  F005         	movf	(0+?_strstr),c,w
  1826  0003EA  5014               iorwf	(1+?_strstr),c,w
  1827  0003EC  1015               	btfss	status,2
  1828  0003EE  A4D8               	goto	u1311
  1829  0003F0  EFFC  F001         	goto	u1310
  1830  0003F4  EFFF  F001         
  1831                           u1311:
  1832  0003F8                     	movlw	1
  1833  0003F8  0E01               	goto	u1312
  1834  0003FA  EF00  F002         u1310:
  1835  0003FE                     	movlw	0
  1836  0003FE  0E00               u1312:
  1837  000400                     	
  1838                           	iorwf	(??_main+0+0),c,w
  1839  000400  102F               	btfss	wreg,0
  1840  000402  A0E8               	goto	u1321
  1841  000404  EF06  F002         	goto	u1320
  1842  000408  EF08  F002         u1321:
  1843  00040C                     	goto	l1858
  1844  00040C  EF14  F002         u1320:
  1845  000410                     	line	76
  1846                           	
  1847                           l1848:
  1848  000410                     ;main.c: 76: UART_clean_buffer();
  1849                           	call	_UART_clean_buffer	;wreg free
  1850  000410  ECC6  F008         	line	77
  1851                           	
  1852                           l1850:
  1853  000414                     ;main.c: 77: Status_Alarm_Enabled = 0b0;
  1854                           	movlw	low(0)
  1855  000414  0E00               	movwf	((c:_Status_Alarm_Enabled)),c
  1856  000416  6E3E               	line	78
  1857                           	
  1858                           l1852:
  1859  000418                     ;main.c: 78: Status_Alarm_Triggered = 0b0;
  1860                           	movlw	low(0)
  1861  000418  0E00               	movwf	((c:_Status_Alarm_Triggered)),c
  1862  00041A  6E3F               	line	79
  1863                           	
  1864                           l1854:
  1865  00041C                     ;main.c: 79: Status_Siren = 0b0;
  1866                           	movlw	low(0)
  1867  00041C  0E00               	movwf	((c:_Status_Siren)),c
  1868  00041E  6E3C               	line	80
  1869                           	
  1870                           l1856:
  1871  000420                     ;main.c: 80: allArmed = 0;
  1872                           	movlw	low(0)
  1873  000420  0E00               	movwf	((c:_allArmed)),c
  1874  000422  6E35               	line	81
  1875                           ;main.c: 81: } else if (strstr(UART_buffer, "0_SIRN_0") != (0) | strstr(UART_buffer, "1_
                                 SIRN_0") != (0)) {
  1876                           	goto	l1894
  1877  000424  EF4B  F003         	
  1878                           l176:
  1879  000428                     	
  1880                           l1858:
  1881  000428                     		movlw	low(_UART_buffer)
  1882  000428  0E42               	movwf	((c:strstr@s1)),c
  1883  00042A  6E14               	movlw	high(_UART_buffer)
  1884  00042C  0E00               	movwf	((c:strstr@s1+1)),c
  1885  00042E  6E15               
  1886                           		movlw	low(STR_21)
  1887  000430  0E54               	movwf	((c:strstr@s2)),c
  1888  000432  6E16               	movlw	high(STR_21)
  1889  000434  0E01               	movwf	((c:strstr@s2+1)),c
  1890  000436  6E17               
  1891                           	call	_strstr	;wreg free
  1892  000438  EC87  F005         	movf	(0+?_strstr),c,w
  1893  00043C  5014               iorwf	(1+?_strstr),c,w
  1894  00043E  1015               	btfss	status,2
  1895  000440  A4D8               	goto	u1331
  1896  000442  EF25  F002         	goto	u1330
  1897  000446  EF28  F002         
  1898                           u1331:
  1899  00044A                     	movlw	1
  1900  00044A  0E01               	goto	u1332
  1901  00044C  EF29  F002         u1330:
  1902  000450                     	movlw	0
  1903  000450  0E00               u1332:
  1904  000452                     	
  1905                           	movwf	(??_main+0+0)&0ffh,c
  1906  000452  6E2F               		movlw	low(_UART_buffer)
  1907  000454  0E42               	movwf	((c:strstr@s1)),c
  1908  000456  6E14               	movlw	high(_UART_buffer)
  1909  000458  0E00               	movwf	((c:strstr@s1+1)),c
  1910  00045A  6E15               
  1911                           		movlw	low(STR_20)
  1912  00045C  0E4B               	movwf	((c:strstr@s2)),c
  1913  00045E  6E16               	movlw	high(STR_20)
  1914  000460  0E01               	movwf	((c:strstr@s2+1)),c
  1915  000462  6E17               
  1916                           	call	_strstr	;wreg free
  1917  000464  EC87  F005         	movf	(0+?_strstr),c,w
  1918  000468  5014               iorwf	(1+?_strstr),c,w
  1919  00046A  1015               	btfss	status,2
  1920  00046C  A4D8               	goto	u1341
  1921  00046E  EF3B  F002         	goto	u1340
  1922  000472  EF3E  F002         
  1923                           u1341:
  1924  000476                     	movlw	1
  1925  000476  0E01               	goto	u1342
  1926  000478  EF3F  F002         u1340:
  1927  00047C                     	movlw	0
  1928  00047C  0E00               u1342:
  1929  00047E                     	
  1930                           	iorwf	(??_main+0+0),c,w
  1931  00047E  102F               	btfss	wreg,0
  1932  000480  A0E8               	goto	u1351
  1933  000482  EF45  F002         	goto	u1350
  1934  000486  EF47  F002         u1351:
  1935  00048A                     	goto	l1864
  1936  00048A  EF4D  F002         u1350:
  1937  00048E                     	line	82
  1938                           	
  1939                           l1860:
  1940  00048E                     ;main.c: 82: UART_clean_buffer();
  1941                           	call	_UART_clean_buffer	;wreg free
  1942  00048E  ECC6  F008         	line	83
  1943                           	
  1944                           l1862:
  1945  000492                     ;main.c: 83: Status_Siren = 0b0;
  1946                           	movlw	low(0)
  1947  000492  0E00               	movwf	((c:_Status_Siren)),c
  1948  000494  6E3C               	line	84
  1949                           ;main.c: 84: } else if (strstr(UART_buffer, "0_SIRN_1") != (0) | strstr(UART_buffer, "1_
                                 SIRN_1") != (0)) {
  1950                           	goto	l1894
  1951  000496  EF4B  F003         	
  1952                           l178:
  1953  00049A                     	
  1954                           l1864:
  1955  00049A                     		movlw	low(_UART_buffer)
  1956  00049A  0E42               	movwf	((c:strstr@s1)),c
  1957  00049C  6E14               	movlw	high(_UART_buffer)
  1958  00049E  0E00               	movwf	((c:strstr@s1+1)),c
  1959  0004A0  6E15               
  1960                           		movlw	low(STR_23)
  1961  0004A2  0E8A               	movwf	((c:strstr@s2)),c
  1962  0004A4  6E16               	movlw	high(STR_23)
  1963  0004A6  0E01               	movwf	((c:strstr@s2+1)),c
  1964  0004A8  6E17               
  1965                           	call	_strstr	;wreg free
  1966  0004AA  EC87  F005         	movf	(0+?_strstr),c,w
  1967  0004AE  5014               iorwf	(1+?_strstr),c,w
  1968  0004B0  1015               	btfss	status,2
  1969  0004B2  A4D8               	goto	u1361
  1970  0004B4  EF5E  F002         	goto	u1360
  1971  0004B8  EF61  F002         
  1972                           u1361:
  1973  0004BC                     	movlw	1
  1974  0004BC  0E01               	goto	u1362
  1975  0004BE  EF62  F002         u1360:
  1976  0004C2                     	movlw	0
  1977  0004C2  0E00               u1362:
  1978  0004C4                     	
  1979                           	movwf	(??_main+0+0)&0ffh,c
  1980  0004C4  6E2F               		movlw	low(_UART_buffer)
  1981  0004C6  0E42               	movwf	((c:strstr@s1)),c
  1982  0004C8  6E14               	movlw	high(_UART_buffer)
  1983  0004CA  0E00               	movwf	((c:strstr@s1+1)),c
  1984  0004CC  6E15               
  1985                           		movlw	low(STR_22)
  1986  0004CE  0E81               	movwf	((c:strstr@s2)),c
  1987  0004D0  6E16               	movlw	high(STR_22)
  1988  0004D2  0E01               	movwf	((c:strstr@s2+1)),c
  1989  0004D4  6E17               
  1990                           	call	_strstr	;wreg free
  1991  0004D6  EC87  F005         	movf	(0+?_strstr),c,w
  1992  0004DA  5014               iorwf	(1+?_strstr),c,w
  1993  0004DC  1015               	btfss	status,2
  1994  0004DE  A4D8               	goto	u1371
  1995  0004E0  EF74  F002         	goto	u1370
  1996  0004E4  EF77  F002         
  1997                           u1371:
  1998  0004E8                     	movlw	1
  1999  0004E8  0E01               	goto	u1372
  2000  0004EA  EF78  F002         u1370:
  2001  0004EE                     	movlw	0
  2002  0004EE  0E00               u1372:
  2003  0004F0                     	
  2004                           	iorwf	(??_main+0+0),c,w
  2005  0004F0  102F               	btfss	wreg,0
  2006  0004F2  A0E8               	goto	u1381
  2007  0004F4  EF7E  F002         	goto	u1380
  2008  0004F8  EF80  F002         u1381:
  2009  0004FC                     	goto	l1870
  2010  0004FC  EF86  F002         u1380:
  2011  000500                     	line	85
  2012                           	
  2013                           l1866:
  2014  000500                     ;main.c: 85: UART_clean_buffer();
  2015                           	call	_UART_clean_buffer	;wreg free
  2016  000500  ECC6  F008         	line	86
  2017                           	
  2018                           l1868:
  2019  000504                     ;main.c: 86: Status_Siren = 0b1;
  2020                           	movlw	low(01h)
  2021  000504  0E01               	movwf	((c:_Status_Siren)),c
  2022  000506  6E3C               	line	87
  2023                           ;main.c: 87: } else if (strstr(UART_buffer, "0_BEEPER") != (0) | strstr(UART_buffer, "1_
                                 BEEPER") != (0)) {
  2024                           	goto	l1894
  2025  000508  EF4B  F003         	
  2026                           l180:
  2027  00050C                     	
  2028                           l1870:
  2029  00050C                     		movlw	low(_UART_buffer)
  2030  00050C  0E42               	movwf	((c:strstr@s1)),c
  2031  00050E  6E14               	movlw	high(_UART_buffer)
  2032  000510  0E00               	movwf	((c:strstr@s1+1)),c
  2033  000512  6E15               
  2034                           		movlw	low(STR_25)
  2035  000514  0EAE               	movwf	((c:strstr@s2)),c
  2036  000516  6E16               	movlw	high(STR_25)
  2037  000518  0E01               	movwf	((c:strstr@s2+1)),c
  2038  00051A  6E17               
  2039                           	call	_strstr	;wreg free
  2040  00051C  EC87  F005         	movf	(0+?_strstr),c,w
  2041  000520  5014               iorwf	(1+?_strstr),c,w
  2042  000522  1015               	btfss	status,2
  2043  000524  A4D8               	goto	u1391
  2044  000526  EF97  F002         	goto	u1390
  2045  00052A  EF9A  F002         
  2046                           u1391:
  2047  00052E                     	movlw	1
  2048  00052E  0E01               	goto	u1392
  2049  000530  EF9B  F002         u1390:
  2050  000534                     	movlw	0
  2051  000534  0E00               u1392:
  2052  000536                     	
  2053                           	movwf	(??_main+0+0)&0ffh,c
  2054  000536  6E2F               		movlw	low(_UART_buffer)
  2055  000538  0E42               	movwf	((c:strstr@s1)),c
  2056  00053A  6E14               	movlw	high(_UART_buffer)
  2057  00053C  0E00               	movwf	((c:strstr@s1+1)),c
  2058  00053E  6E15               
  2059                           		movlw	low(STR_24)
  2060  000540  0EA5               	movwf	((c:strstr@s2)),c
  2061  000542  6E16               	movlw	high(STR_24)
  2062  000544  0E01               	movwf	((c:strstr@s2+1)),c
  2063  000546  6E17               
  2064                           	call	_strstr	;wreg free
  2065  000548  EC87  F005         	movf	(0+?_strstr),c,w
  2066  00054C  5014               iorwf	(1+?_strstr),c,w
  2067  00054E  1015               	btfss	status,2
  2068  000550  A4D8               	goto	u1401
  2069  000552  EFAD  F002         	goto	u1400
  2070  000556  EFB0  F002         
  2071                           u1401:
  2072  00055A                     	movlw	1
  2073  00055A  0E01               	goto	u1402
  2074  00055C  EFB1  F002         u1400:
  2075  000560                     	movlw	0
  2076  000560  0E00               u1402:
  2077  000562                     	
  2078                           	iorwf	(??_main+0+0),c,w
  2079  000562  102F               	btfss	wreg,0
  2080  000564  A0E8               	goto	u1411
  2081  000566  EFB7  F002         	goto	u1410
  2082  00056A  EFB9  F002         u1411:
  2083  00056E                     	goto	l1882
  2084  00056E  EFCB  F002         u1410:
  2085  000572                     	line	88
  2086                           	
  2087                           l1872:
  2088  000572                     ;main.c: 88: UART_clean_buffer();
  2089                           	call	_UART_clean_buffer	;wreg free
  2090  000572  ECC6  F008         	line	89
  2091                           	
  2092                           l1874:
  2093  000576                     ;main.c: 89: LATBbits.LATB4 = 0b1;
  2094                           	bsf	((c:3978)),c,4	;volatile
  2095  000576  888A               	line	90
  2096                           	
  2097                           l1876:
  2098  000578                     ;main.c: 90: delay_ms(250);
  2099                           	movlw	high(0FAh)
  2100  000578  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2101  00057A  6E06               	movlw	low(0FAh)
  2102  00057C  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  2103  00057E  6E05               	call	_delay_ms	;wreg free
  2104  000580  EC5F  F008         	line	91
  2105                           	
  2106                           l1878:
  2107  000584                     ;main.c: 91: LATBbits.LATB4 = 0b0;
  2108                           	bcf	((c:3978)),c,4	;volatile
  2109  000584  988A               	line	92
  2110                           	
  2111                           l1880:
  2112  000586                     ;main.c: 92: delay_ms(250);
  2113                           	movlw	high(0FAh)
  2114  000586  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2115  000588  6E06               	movlw	low(0FAh)
  2116  00058A  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  2117  00058C  6E05               	call	_delay_ms	;wreg free
  2118  00058E  EC5F  F008         	line	93
  2119                           ;main.c: 93: } else if (strstr(UART_buffer, "0_XTRA_1") != (0) | strstr(UART_buffer, "1_
                                 XTRA_1") != (0)) {
  2120                           	goto	l1894
  2121  000592  EF4B  F003         	
  2122                           l182:
  2123  000596                     	
  2124                           l1882:
  2125  000596                     		movlw	low(_UART_buffer)
  2126  000596  0E42               	movwf	((c:strstr@s1)),c
  2127  000598  6E14               	movlw	high(_UART_buffer)
  2128  00059A  0E00               	movwf	((c:strstr@s1+1)),c
  2129  00059C  6E15               
  2130                           		movlw	low(STR_27)
  2131  00059E  0E78               	movwf	((c:strstr@s2)),c
  2132  0005A0  6E16               	movlw	high(STR_27)
  2133  0005A2  0E01               	movwf	((c:strstr@s2+1)),c
  2134  0005A4  6E17               
  2135                           	call	_strstr	;wreg free
  2136  0005A6  EC87  F005         	movf	(0+?_strstr),c,w
  2137  0005AA  5014               iorwf	(1+?_strstr),c,w
  2138  0005AC  1015               	btfss	status,2
  2139  0005AE  A4D8               	goto	u1421
  2140  0005B0  EFDC  F002         	goto	u1420
  2141  0005B4  EFDF  F002         
  2142                           u1421:
  2143  0005B8                     	movlw	1
  2144  0005B8  0E01               	goto	u1422
  2145  0005BA  EFE0  F002         u1420:
  2146  0005BE                     	movlw	0
  2147  0005BE  0E00               u1422:
  2148  0005C0                     	
  2149                           	movwf	(??_main+0+0)&0ffh,c
  2150  0005C0  6E2F               		movlw	low(_UART_buffer)
  2151  0005C2  0E42               	movwf	((c:strstr@s1)),c
  2152  0005C4  6E14               	movlw	high(_UART_buffer)
  2153  0005C6  0E00               	movwf	((c:strstr@s1+1)),c
  2154  0005C8  6E15               
  2155                           		movlw	low(STR_26)
  2156  0005CA  0E6F               	movwf	((c:strstr@s2)),c
  2157  0005CC  6E16               	movlw	high(STR_26)
  2158  0005CE  0E01               	movwf	((c:strstr@s2+1)),c
  2159  0005D0  6E17               
  2160                           	call	_strstr	;wreg free
  2161  0005D2  EC87  F005         	movf	(0+?_strstr),c,w
  2162  0005D6  5014               iorwf	(1+?_strstr),c,w
  2163  0005D8  1015               	btfss	status,2
  2164  0005DA  A4D8               	goto	u1431
  2165  0005DC  EFF2  F002         	goto	u1430
  2166  0005E0  EFF5  F002         
  2167                           u1431:
  2168  0005E4                     	movlw	1
  2169  0005E4  0E01               	goto	u1432
  2170  0005E6  EFF6  F002         u1430:
  2171  0005EA                     	movlw	0
  2172  0005EA  0E00               u1432:
  2173  0005EC                     	
  2174                           	iorwf	(??_main+0+0),c,w
  2175  0005EC  102F               	btfss	wreg,0
  2176  0005EE  A0E8               	goto	u1441
  2177  0005F0  EFFC  F002         	goto	u1440
  2178  0005F4  EFFE  F002         u1441:
  2179  0005F8                     	goto	l1888
  2180  0005F8  EF04  F003         u1440:
  2181  0005FC                     	line	94
  2182                           	
  2183                           l1884:
  2184  0005FC                     ;main.c: 94: UART_clean_buffer();
  2185                           	call	_UART_clean_buffer	;wreg free
  2186  0005FC  ECC6  F008         	line	95
  2187                           	
  2188                           l1886:
  2189  000600                     ;main.c: 95: Status_Extra = 0b1;
  2190                           	movlw	low(01h)
  2191  000600  0E01               	movwf	((c:_Status_Extra)),c
  2192  000602  6E3B               	line	96
  2193                           ;main.c: 96: } else if (strstr(UART_buffer, "0_XTRA_0") != (0) | strstr(UART_buffer, "1_
                                 XTRA_0") != (0)) {
  2194                           	goto	l1894
  2195  000604  EF4B  F003         	
  2196                           l184:
  2197  000608                     	
  2198                           l1888:
  2199  000608                     		movlw	low(_UART_buffer)
  2200  000608  0E42               	movwf	((c:strstr@s1)),c
  2201  00060A  6E14               	movlw	high(_UART_buffer)
  2202  00060C  0E00               	movwf	((c:strstr@s1+1)),c
  2203  00060E  6E15               
  2204                           		movlw	low(STR_29)
  2205  000610  0E42               	movwf	((c:strstr@s2)),c
  2206  000612  6E16               	movlw	high(STR_29)
  2207  000614  0E01               	movwf	((c:strstr@s2+1)),c
  2208  000616  6E17               
  2209                           	call	_strstr	;wreg free
  2210  000618  EC87  F005         	movf	(0+?_strstr),c,w
  2211  00061C  5014               iorwf	(1+?_strstr),c,w
  2212  00061E  1015               	btfss	status,2
  2213  000620  A4D8               	goto	u1451
  2214  000622  EF15  F003         	goto	u1450
  2215  000626  EF18  F003         
  2216                           u1451:
  2217  00062A                     	movlw	1
  2218  00062A  0E01               	goto	u1452
  2219  00062C  EF19  F003         u1450:
  2220  000630                     	movlw	0
  2221  000630  0E00               u1452:
  2222  000632                     	
  2223                           	movwf	(??_main+0+0)&0ffh,c
  2224  000632  6E2F               		movlw	low(_UART_buffer)
  2225  000634  0E42               	movwf	((c:strstr@s1)),c
  2226  000636  6E14               	movlw	high(_UART_buffer)
  2227  000638  0E00               	movwf	((c:strstr@s1+1)),c
  2228  00063A  6E15               
  2229                           		movlw	low(STR_28)
  2230  00063C  0E39               	movwf	((c:strstr@s2)),c
  2231  00063E  6E16               	movlw	high(STR_28)
  2232  000640  0E01               	movwf	((c:strstr@s2+1)),c
  2233  000642  6E17               
  2234                           	call	_strstr	;wreg free
  2235  000644  EC87  F005         	movf	(0+?_strstr),c,w
  2236  000648  5014               iorwf	(1+?_strstr),c,w
  2237  00064A  1015               	btfss	status,2
  2238  00064C  A4D8               	goto	u1461
  2239  00064E  EF2B  F003         	goto	u1460
  2240  000652  EF2E  F003         
  2241                           u1461:
  2242  000656                     	movlw	1
  2243  000656  0E01               	goto	u1462
  2244  000658  EF2F  F003         u1460:
  2245  00065C                     	movlw	0
  2246  00065C  0E00               u1462:
  2247  00065E                     	
  2248                           	iorwf	(??_main+0+0),c,w
  2249  00065E  102F               	btfss	wreg,0
  2250  000660  A0E8               	goto	u1471
  2251  000662  EF35  F003         	goto	u1470
  2252  000666  EF37  F003         u1471:
  2253  00066A                     	goto	l1894
  2254  00066A  EF4B  F003         u1470:
  2255  00066E                     	line	97
  2256                           	
  2257                           l1890:
  2258  00066E                     ;main.c: 97: UART_clean_buffer();
  2259                           	call	_UART_clean_buffer	;wreg free
  2260  00066E  ECC6  F008         	line	98
  2261                           	
  2262                           l1892:
  2263  000672                     ;main.c: 98: Status_Extra = 0b0;
  2264                           	movlw	low(0)
  2265  000672  0E00               	movwf	((c:_Status_Extra)),c
  2266  000674  6E3B               	goto	l1894
  2267  000676  EF4B  F003         	line	99
  2268                           	
  2269                           l186:
  2270  00067A                     	goto	l1894
  2271  00067A  EF4B  F003         	line	105
  2272                           	
  2273                           l185:
  2274  00067E                     	goto	l1894
  2275  00067E  EF4B  F003         	
  2276                           l183:
  2277  000682                     	goto	l1894
  2278  000682  EF4B  F003         	
  2279                           l181:
  2280  000686                     	goto	l1894
  2281  000686  EF4B  F003         	
  2282                           l179:
  2283  00068A                     	goto	l1894
  2284  00068A  EF4B  F003         	
  2285                           l177:
  2286  00068E                     	goto	l1894
  2287  00068E  EF4B  F003         	
  2288                           l175:
  2289  000692                     	goto	l1894
  2290  000692  EF4B  F003         	
  2291                           l173:
  2292  000696                     	
  2293                           l1894:
  2294  000696                     ;main.c: 99: };main.c: 105: if (PORTAbits.RA1) {
  2295                           	btfss	((c:3968)),c,1	;volatile
  2296  000696  A280               	goto	u1481
  2297  000698  EF50  F003         	goto	u1480
  2298  00069C  EF52  F003         u1481:
  2299  0006A0                     	goto	l1898
  2300  0006A0  EF56  F003         u1480:
  2301  0006A4                     	line	106
  2302                           	
  2303                           l1896:
  2304  0006A4                     ;main.c: 106: Status_Ac_power = 0b1;
  2305                           	movlw	low(01h)
  2306  0006A4  0E01               	movwf	((c:_Status_Ac_power)),c
  2307  0006A6  6E3D               	line	107
  2308                           ;main.c: 107: } else {
  2309                           	goto	l1900
  2310  0006A8  EF5A  F003         	
  2311                           l187:
  2312  0006AC                     	line	108
  2313                           	
  2314                           l1898:
  2315  0006AC                     ;main.c: 108: Status_Ac_power = 0b0;
  2316                           	movlw	low(0)
  2317  0006AC  0E00               	movwf	((c:_Status_Ac_power)),c
  2318  0006AE  6E3D               	goto	l1900
  2319  0006B0  EF5A  F003         	line	109
  2320                           	
  2321                           l188:
  2322  0006B4                     	line	111
  2323                           	
  2324                           l1900:
  2325  0006B4                     ;main.c: 109: };main.c: 111: if (PORTBbits.RB2 | PORTAbits.RA7 | (Status_Alarm_Triggered
                                  == 0b1)) {
  2326                           	movlw	0
  2327  0006B4  0E00               	btfsc	((c:3969)),c,2	;volatile
  2328  0006B6  B481               	movlw	1
  2329  0006B8  0E01               	btfsc	((c:3968)),c,7	;volatile
  2330  0006BA  BE80               	movlw	1
  2331  0006BC  0E01               
  2332                           	btfsc	wreg,0
  2333  0006BE  B0E8               	goto	u1491
  2334  0006C0  EF64  F003         	goto	u1490
  2335  0006C4  EF67  F003         u1491:
  2336  0006C8                     	movlw	1
  2337  0006C8  0E01               	goto	u1500
  2338  0006CA  EF68  F003         u1490:
  2339  0006CE                     	movlw	0
  2340  0006CE  0E00               u1500:
  2341  0006D0                     	movwf	(??_main+0+0)&0ffh,c
  2342  0006D0  6E2F               	clrf	(??_main+0+0+1)&0ffh,c
  2343  0006D2  6A30               		decf	((c:_Status_Alarm_Triggered)),c,w
  2344  0006D4  043F               	btfsc	status,2
  2345  0006D6  B4D8               	goto	u1511
  2346  0006D8  EF70  F003         	goto	u1510
  2347  0006DC  EF73  F003         
  2348                           u1511:
  2349  0006E0                     	movlw	1
  2350  0006E0  0E01               	goto	u1520
  2351  0006E2  EF74  F003         u1510:
  2352  0006E6                     	movlw	0
  2353  0006E6  0E00               u1520:
  2354  0006E8                     	iorwf	(??_main+0+0),c
  2355  0006E8  122F               	movlw	0
  2356  0006EA  0E00               	iorwf	(??_main+0+1),c
  2357  0006EC  1230               	movf	(??_main+0+0),c,w
  2358  0006EE  502F               iorwf	(??_main+0+1),c,w
  2359  0006F0  1030               	btfsc	status,2
  2360  0006F2  B4D8               	goto	u1531
  2361  0006F4  EF7E  F003         	goto	u1530
  2362  0006F8  EF80  F003         
  2363                           u1531:
  2364  0006FC                     	goto	l189
  2365  0006FC  EFE6  F003         u1530:
  2366  000700                     	line	112
  2367                           	
  2368                           l1902:
  2369  000700                     ;main.c: 112: LATAbits.LATA0 = 1;
  2370                           	bsf	((c:3977)),c,0	;volatile
  2371  000700  8089               	line	113
  2372                           	
  2373                           l1904:
  2374  000702                     ;main.c: 113: if (Status_Alarm_Enabled == 0b1) {
  2375                           		decf	((c:_Status_Alarm_Enabled)),c,w
  2376  000702  043E               	btfss	status,2
  2377  000704  A4D8               	goto	u1541
  2378  000706  EF87  F003         	goto	u1540
  2379  00070A  EF89  F003         
  2380                           u1541:
  2381  00070E                     	goto	l1948
  2382  00070E  EFE9  F003         u1540:
  2383  000712                     	line	114
  2384                           	
  2385                           l1906:
  2386  000712                     ;main.c: 114: Status_Extra = 0b0;
  2387                           	movlw	low(0)
  2388  000712  0E00               	movwf	((c:_Status_Extra)),c
  2389  000714  6E3B               	line	115
  2390                           	
  2391                           l1908:
  2392  000716                     ;main.c: 115: if (Status_Alarm_Triggered == 0b1) {
  2393                           		decf	((c:_Status_Alarm_Triggered)),c,w
  2394  000716  043F               	btfss	status,2
  2395  000718  A4D8               	goto	u1551
  2396  00071A  EF91  F003         	goto	u1550
  2397  00071E  EF93  F003         
  2398                           u1551:
  2399  000722                     	goto	l1924
  2400  000722  EFC1  F003         u1550:
  2401  000726                     	line	116
  2402                           	
  2403                           l1910:
  2404  000726                     ;main.c: 116: if (TMR0IF) {
  2405                           	btfss	c:(32658/8),(32658)&7	;volatile
  2406  000726  A4F2               	goto	u1561
  2407  000728  EF98  F003         	goto	u1560
  2408  00072C  EF9A  F003         u1561:
  2409  000730                     	goto	l1948
  2410  000730  EFE9  F003         u1560:
  2411  000734                     	line	117
  2412                           	
  2413                           l1912:
  2414  000734                     ;main.c: 117: if (cycleAlarmCounter == cycleAlarm) {
  2415                           	movf	((c:_cycleAlarm)),c,w
  2416  000734  504A               xorwf	((c:_cycleAlarmCounter)),c,w
  2417  000736  1834               	btfss	status,2
  2418  000738  A4D8               	goto	u1571
  2419  00073A  EFA1  F003         	goto	u1570
  2420  00073E  EFA3  F003         
  2421                           u1571:
  2422  000742                     	goto	l1920
  2423  000742  EFB9  F003         u1570:
  2424  000746                     	line	118
  2425                           	
  2426                           l1914:
  2427  000746                     ;main.c: 118: Status_Siren = 0b1;
  2428                           	movlw	low(01h)
  2429  000746  0E01               	movwf	((c:_Status_Siren)),c
  2430  000748  6E3C               	line	119
  2431                           ;main.c: 119: if (allArmed == 0) {
  2432                           	movf	((c:_allArmed)),c,w
  2433  00074A  5035               	btfss	status,2
  2434  00074C  A4D8               	goto	u1581
  2435  00074E  EFAB  F003         	goto	u1580
  2436  000752  EFAD  F003         u1581:
  2437  000756                     	goto	l1948
  2438  000756  EFE9  F003         u1580:
  2439  00075A                     	line	120
  2440                           	
  2441                           l1916:
  2442  00075A                     ;main.c: 120: allArmed = 1;
  2443                           	movlw	low(01h)
  2444  00075A  0E01               	movwf	((c:_allArmed)),c
  2445  00075C  6E35               	line	121
  2446                           	
  2447                           l1918:
  2448  00075E                     ;main.c: 121: UART_Write_Text((unsigned char *) "ALL_SIREN_ON");
  2449                           		movlw	low(STR_30)
  2450  00075E  0E2C               	movwf	((c:UART_Write_Text@text)),c
  2451  000760  6E06               	movlw	high(STR_30)
  2452  000762  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2453  000764  6E07               
  2454                           	call	_UART_Write_Text	;wreg free
  2455  000766  EC9C  F006         	goto	l1948
  2456  00076A  EFE9  F003         	line	122
  2457                           	
  2458                           l194:
  2459  00076E                     	line	123
  2460                           ;main.c: 122: };main.c: 123: } else {
  2461                           	goto	l1948
  2462  00076E  EFE9  F003         	
  2463                           l193:
  2464  000772                     	line	124
  2465                           	
  2466                           l1920:
  2467  000772                     ;main.c: 124: cycleAlarmCounter ++;
  2468                           	incf	((c:_cycleAlarmCounter)),c
  2469  000772  2A34               	line	125
  2470                           	
  2471                           l1922:
  2472  000774                     ;main.c: 125: TMR0IF = 0;
  2473                           	bcf	c:(32658/8),(32658)&7	;volatile
  2474  000774  94F2               	goto	l1948
  2475  000776  EFE9  F003         	line	126
  2476                           	
  2477                           l195:
  2478  00077A                     	goto	l1948
  2479  00077A  EFE9  F003         	line	127
  2480                           	
  2481                           l192:
  2482  00077E                     	line	128
  2483                           ;main.c: 126: };main.c: 127: };main.c: 128: } else {
  2484                           	goto	l1948
  2485  00077E  EFE9  F003         	
  2486                           l191:
  2487  000782                     	line	129
  2488                           	
  2489                           l1924:
  2490  000782                     ;main.c: 129: cycleAlarmCounter = 0;
  2491                           	movlw	low(0)
  2492  000782  0E00               	movwf	((c:_cycleAlarmCounter)),c
  2493  000784  6E34               	line	130
  2494                           ;main.c: 130: Status_Alarm_Triggered = 0b1;
  2495                           	movlw	low(01h)
  2496  000786  0E01               	movwf	((c:_Status_Alarm_Triggered)),c
  2497  000788  6E3F               	line	131
  2498                           	
  2499                           l1926:
  2500  00078A                     ;main.c: 131: T0CONbits.TMR0ON = 0b0;
  2501                           	bcf	((c:4053)),c,7	;volatile
  2502  00078A  9ED5               	line	132
  2503                           ;main.c: 132: TMR0L = 0;
  2504                           	movlw	low(0)
  2505  00078C  0E00               	movwf	((c:4054)),c	;volatile
  2506  00078E  6ED6               	line	133
  2507                           ;main.c: 133: TMR0H = 0;
  2508                           	movlw	low(0)
  2509  000790  0E00               	movwf	((c:4055)),c	;volatile
  2510  000792  6ED7               	line	134
  2511                           	
  2512                           l1928:
  2513  000794                     ;main.c: 134: T0CONbits.T016BIT = 0b0;
  2514                           	bcf	((c:4053)),c,6	;volatile
  2515  000794  9CD5               	line	135
  2516                           	
  2517                           l1930:
  2518  000796                     ;main.c: 135: T0CONbits.T0CS = 0b0;
  2519                           	bcf	((c:4053)),c,5	;volatile
  2520  000796  9AD5               	line	136
  2521                           	
  2522                           l1932:
  2523  000798                     ;main.c: 136: T0CONbits.PSA = 0b0;
  2524                           	bcf	((c:4053)),c,3	;volatile
  2525  000798  96D5               	line	137
  2526                           	
  2527                           l1934:
  2528  00079A                     ;main.c: 137: T0CONbits.T0PS = 0b111;
  2529                           		
  2530                           	bsf	((c:4053)),c, 0+0	;volatile
  2531  00079A  80D5               	bsf	((c:4053)),c, 0+1	;volatile
  2532  00079C  82D5               	bsf	((c:4053)),c, 0+2	;volatile
  2533  00079E  84D5               
  2534                           	line	138
  2535                           	
  2536                           l1936:
  2537  0007A0                     ;main.c: 138: T0CONbits.TMR0ON = 0b1;
  2538                           	bsf	((c:4053)),c,7	;volatile
  2539  0007A0  8ED5               	line	139
  2540                           	
  2541                           l1938:
  2542  0007A2                     ;main.c: 139: TMR0IF = 0;
  2543                           	bcf	c:(32658/8),(32658)&7	;volatile
  2544  0007A2  94F2               	line	140
  2545                           	
  2546                           l1940:
  2547  0007A4                     ;main.c: 140: LATBbits.LATB4 = 0b1;
  2548                           	bsf	((c:3978)),c,4	;volatile
  2549  0007A4  888A               	line	141
  2550                           	
  2551                           l1942:
  2552  0007A6                     ;main.c: 141: delay_ms(100);
  2553                           	movlw	high(064h)
  2554  0007A6  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2555  0007A8  6E06               	movlw	low(064h)
  2556  0007AA  0E64               	movwf	((c:delay_ms@repeat_2)),c
  2557  0007AC  6E05               	call	_delay_ms	;wreg free
  2558  0007AE  EC5F  F008         	line	142
  2559                           	
  2560                           l1944:
  2561  0007B2                     ;main.c: 142: LATBbits.LATB4 = 0b0;
  2562                           	bcf	((c:3978)),c,4	;volatile
  2563  0007B2  988A               	line	143
  2564                           	
  2565                           l1946:
  2566  0007B4                     ;main.c: 143: delay_ms(100);
  2567                           	movlw	high(064h)
  2568  0007B4  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2569  0007B6  6E06               	movlw	low(064h)
  2570  0007B8  0E64               	movwf	((c:delay_ms@repeat_2)),c
  2571  0007BA  6E05               	call	_delay_ms	;wreg free
  2572  0007BC  EC5F  F008         	goto	l1948
  2573  0007C0  EFE9  F003         	line	144
  2574                           	
  2575                           l196:
  2576  0007C4                     	goto	l1948
  2577  0007C4  EFE9  F003         	line	145
  2578                           	
  2579                           l190:
  2580  0007C8                     	line	146
  2581                           ;main.c: 144: };main.c: 145: };main.c: 146: }
  2582                           	goto	l1948
  2583  0007C8  EFE9  F003         	line	147
  2584                           	
  2585                           l189:
  2586  0007CC                     	line	148
  2587                           ;main.c: 147: else {;main.c: 148: LATAbits.LATA0 = 0;
  2588                           	bcf	((c:3977)),c,0	;volatile
  2589  0007CC  9089               	goto	l1948
  2590  0007CE  EFE9  F003         	line	149
  2591                           	
  2592                           l197:
  2593  0007D2                     	line	151
  2594                           	
  2595                           l1948:
  2596  0007D2                     ;main.c: 149: };main.c: 151: if (Status_Siren == 0b1) {
  2597                           		decf	((c:_Status_Siren)),c,w
  2598  0007D2  043C               	btfss	status,2
  2599  0007D4  A4D8               	goto	u1591
  2600  0007D6  EFEF  F003         	goto	u1590
  2601  0007DA  EFF1  F003         
  2602                           u1591:
  2603  0007DE                     	goto	l198
  2604  0007DE  EFF4  F003         u1590:
  2605  0007E2                     	line	152
  2606                           	
  2607                           l1950:
  2608  0007E2                     ;main.c: 152: LATBbits.LATB4 = 0b1;
  2609                           	bsf	((c:3978)),c,4	;volatile
  2610  0007E2  888A               	line	153
  2611                           ;main.c: 153: } else {
  2612                           	goto	l1952
  2613  0007E4  EFF7  F003         	
  2614                           l198:
  2615  0007E8                     	line	154
  2616                           ;main.c: 154: LATBbits.LATB4 = 0b0;
  2617                           	bcf	((c:3978)),c,4	;volatile
  2618  0007E8  988A               	goto	l1952
  2619  0007EA  EFF7  F003         	line	155
  2620                           	
  2621                           l199:
  2622  0007EE                     	line	157
  2623                           	
  2624                           l1952:
  2625  0007EE                     ;main.c: 155: };main.c: 157: if (Status_Siren == 0b1) {
  2626                           		decf	((c:_Status_Siren)),c,w
  2627  0007EE  043C               	btfss	status,2
  2628  0007F0  A4D8               	goto	u1601
  2629  0007F2  EFFD  F003         	goto	u1600
  2630  0007F6  EFFF  F003         
  2631                           u1601:
  2632  0007FA                     	goto	l200
  2633  0007FA  EF02  F004         u1600:
  2634  0007FE                     	line	158
  2635                           	
  2636                           l1954:
  2637  0007FE                     ;main.c: 158: LATBbits.LATB5 = 0b1;
  2638                           	bsf	((c:3978)),c,5	;volatile
  2639  0007FE  8A8A               	line	159
  2640                           ;main.c: 159: } else {
  2641                           	goto	l1956
  2642  000800  EF05  F004         	
  2643                           l200:
  2644  000804                     	line	160
  2645                           ;main.c: 160: LATBbits.LATB5 = 0b0;
  2646                           	bcf	((c:3978)),c,5	;volatile
  2647  000804  9A8A               	goto	l1956
  2648  000806  EF05  F004         	line	161
  2649                           	
  2650                           l201:
  2651  00080A                     	line	167
  2652                           	
  2653                           l1956:
  2654  00080A                     ;main.c: 161: };main.c: 163: if (Status_Ac_power != Status_Ac_power_old |;main.c: 164: S
                                 tatus_Alarm_Enabled != Status_Alarm_Enabled_old |;main.c: 165: Status_Alarm_Triggered !=
                                  Status_Alarm_Triggered_old |;main.c: 166: Status_Extra != Status_Extra_old |;main.c: 16
                                 7: Status_Siren != Status_Siren_old) {
  2655                           	movf	((c:_Status_Ac_power_old)),c,w
  2656  00080A  5038               xorwf	((c:_Status_Ac_power)),c,w
  2657  00080C  183D               	btfss	status,2
  2658  00080E  A4D8               	goto	u1611
  2659  000810  EF0C  F004         	goto	u1610
  2660  000814  EF0E  F004         
  2661                           u1611:
  2662  000818                     	goto	l1966
  2663  000818  EF34  F004         u1610:
  2664  00081C                     	
  2665                           l1958:
  2666  00081C                     	movf	((c:_Status_Alarm_Enabled_old)),c,w
  2667  00081C  5039               xorwf	((c:_Status_Alarm_Enabled)),c,w
  2668  00081E  183E               	btfss	status,2
  2669  000820  A4D8               	goto	u1621
  2670  000822  EF15  F004         	goto	u1620
  2671  000826  EF17  F004         
  2672                           u1621:
  2673  00082A                     	goto	l1966
  2674  00082A  EF34  F004         u1620:
  2675  00082E                     	
  2676                           l1960:
  2677  00082E                     	movf	((c:_Status_Alarm_Triggered_old)),c,w
  2678  00082E  503A               xorwf	((c:_Status_Alarm_Triggered)),c,w
  2679  000830  183F               	btfss	status,2
  2680  000832  A4D8               	goto	u1631
  2681  000834  EF1E  F004         	goto	u1630
  2682  000838  EF20  F004         
  2683                           u1631:
  2684  00083C                     	goto	l1966
  2685  00083C  EF34  F004         u1630:
  2686  000840                     	
  2687                           l1962:
  2688  000840                     	movf	((c:_Status_Extra_old)),c,w
  2689  000840  5036               xorwf	((c:_Status_Extra)),c,w
  2690  000842  183B               	btfss	status,2
  2691  000844  A4D8               	goto	u1641
  2692  000846  EF27  F004         	goto	u1640
  2693  00084A  EF29  F004         
  2694                           u1641:
  2695  00084E                     	goto	l1966
  2696  00084E  EF34  F004         u1640:
  2697  000852                     	
  2698                           l1964:
  2699  000852                     	movf	((c:_Status_Siren_old)),c,w
  2700  000852  5037               xorwf	((c:_Status_Siren)),c,w
  2701  000854  183C               	btfsc	status,2
  2702  000856  B4D8               	goto	u1651
  2703  000858  EF30  F004         	goto	u1650
  2704  00085C  EF32  F004         
  2705                           u1651:
  2706  000860                     	goto	l1834
  2707  000860  EF63  F001         u1650:
  2708  000864                     	goto	l1966
  2709  000864  EF34  F004         	
  2710                           l204:
  2711  000868                     	line	168
  2712                           	
  2713                           l1966:
  2714  000868                     ;main.c: 168: if (Status_Ac_power != Status_Ac_power_old) {
  2715                           	movf	((c:_Status_Ac_power_old)),c,w
  2716  000868  5038               xorwf	((c:_Status_Ac_power)),c,w
  2717  00086A  183D               	btfsc	status,2
  2718  00086C  B4D8               	goto	u1661
  2719  00086E  EF3B  F004         	goto	u1660
  2720  000872  EF3D  F004         
  2721                           u1661:
  2722  000876                     	goto	l1974
  2723  000876  EF47  F004         u1660:
  2724  00087A                     	line	169
  2725                           	
  2726                           l1968:
  2727  00087A                     ;main.c: 169: LATBbits.LATB4 = 1;
  2728                           	bsf	((c:3978)),c,4	;volatile
  2729  00087A  888A               	line	170
  2730                           	
  2731                           l1970:
  2732  00087C                     ;main.c: 170: delay_ms(50);
  2733                           	movlw	high(032h)
  2734  00087C  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2735  00087E  6E06               	movlw	low(032h)
  2736  000880  0E32               	movwf	((c:delay_ms@repeat_2)),c
  2737  000882  6E05               	call	_delay_ms	;wreg free
  2738  000884  EC5F  F008         	line	171
  2739                           	
  2740                           l1972:
  2741  000888                     ;main.c: 171: LATBbits.LATB4 = 0;
  2742                           	bcf	((c:3978)),c,4	;volatile
  2743  000888  988A               	goto	l1974
  2744  00088A  EF47  F004         	line	172
  2745                           	
  2746                           l205:
  2747  00088E                     	line	173
  2748                           	
  2749                           l1974:
  2750  00088E                     ;main.c: 172: };main.c: 173: Status_Ac_power_old = Status_Ac_power;
  2751                           	movff	(c:_Status_Ac_power),(c:_Status_Ac_power_old)
  2752  00088E  C03D  F038         	line	174
  2753                           	
  2754                           l1976:
  2755  000892                     ;main.c: 174: Status_Alarm_Enabled_old = Status_Alarm_Enabled;
  2756                           	movff	(c:_Status_Alarm_Enabled),(c:_Status_Alarm_Enabled_old)
  2757  000892  C03E  F039         	line	175
  2758                           	
  2759                           l1978:
  2760  000896                     ;main.c: 175: Status_Alarm_Triggered_old = Status_Alarm_Triggered;
  2761                           	movff	(c:_Status_Alarm_Triggered),(c:_Status_Alarm_Triggered_old)
  2762  000896  C03F  F03A         	line	176
  2763                           	
  2764                           l1980:
  2765  00089A                     ;main.c: 176: Status_Extra_old = Status_Extra;
  2766                           	movff	(c:_Status_Extra),(c:_Status_Extra_old)
  2767  00089A  C03B  F036         	line	177
  2768                           	
  2769                           l1982:
  2770  00089E                     ;main.c: 177: Status_Siren_old = Status_Siren;
  2771                           	movff	(c:_Status_Siren),(c:_Status_Siren_old)
  2772  00089E  C03C  F037         	line	178
  2773                           	
  2774                           l1984:
  2775  0008A2                     ;main.c: 178: send_Status();
  2776                           	call	_send_Status	;wreg free
  2777  0008A2  EC5B  F004         	goto	l1834
  2778  0008A6  EF63  F001         	line	179
  2779                           	
  2780                           l202:
  2781  0008AA                     	goto	l1834
  2782  0008AA  EF63  F001         	line	181
  2783                           	
  2784                           l206:
  2785  0008AE                     	line	65
  2786                           	goto	l1834
  2787  0008AE  EF63  F001         	
  2788                           l207:
  2789  0008B2                     	line	182
  2790                           	
  2791                           l208:
  2792  0008B2                     	global	start
  2793                           	goto	start
  2794  0008B2  EF3C  F000         	opt stack 0
  2795                           GLOBAL	__end_of_main
  2796                           	__end_of_main:
  2797  0008B6                     	signat	_main,89
  2798                           	global	_strstr
  2799                           
  2800 ;; *************** function _strstr *****************
  2801 ;; Defined at:
  2802 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  s1              2   19[COMRAM] PTR const unsigned char 
  2805 ;;		 -> NULL(0), UART_buffer(8), 
  2806 ;;  s2              2   21[COMRAM] PTR const unsigned char 
  2807 ;;		 -> STR_29(9), STR_28(9), STR_27(9), STR_26(9), 
  2808 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
  2809 ;;		 -> STR_21(9), STR_20(9), STR_19(9), STR_18(9), 
  2810 ;;		 -> STR_17(9), STR_16(9), STR_15(9), STR_14(9), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   19[COMRAM] PTR unsigned char 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0
  2822 ;;      Params:         4       0
  2823 ;;      Locals:         0       0
  2824 ;;      Temps:          0       0
  2825 ;;      Totals:         4       0
  2826 ;;Total ram usage:        4 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		_strchr
  2831 ;;		_strlen
  2832 ;;		_strncmp
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           psect	text1,class=CODE,space=0,reloc=2,group=2
  2838                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2839                           	line	4
  2840                           global __ptext1
  2841                           __ptext1:
  2842  000B0E                     psect	text1
  2843                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2844                           	line	4
  2845                           	global	__size_of_strstr
  2846                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  2847  0000                     	
  2848                           _strstr:
  2849  000B0E                     ;incstack = 0
  2850                           	opt	stack 28
  2851                           	line	6
  2852                           	
  2853                           l1754:
  2854  000B0E                     	goto	l1764
  2855  000B0E  EFC4  F005         	
  2856                           l900:
  2857  000B12                     	line	7
  2858                           	
  2859                           l1756:
  2860  000B12                     		movff	(c:strstr@s1),(c:strncmp@s1)
  2861  000B12  C014  F00B         	movff	(c:strstr@s1+1),(c:strncmp@s1+1)
  2862  000B16  C015  F00C         
  2863                           		movff	(c:strstr@s2),(c:strncmp@s2)
  2864  000B1A  C016  F00D         	movff	(c:strstr@s2+1),(c:strncmp@s2+1)
  2865  000B1E  C017  F00E         
  2866                           		movff	(c:strstr@s2),(c:strlen@s)
  2867  000B22  C016  F005         	movff	(c:strstr@s2+1),(c:strlen@s+1)
  2868  000B26  C017  F006         
  2869                           	call	_strlen	;wreg free
  2870  000B2A  ECC6  F007         	movff	0+?_strlen,(c:strncmp@len)
  2871  000B2E  C005  F00F         	movff	1+?_strlen,(c:strncmp@len+1)
  2872  000B32  C006  F010         	call	_strncmp	;wreg free
  2873  000B36  ECE4  F005         	movf	(0+?_strncmp),c,w
  2874  000B3A  500B               iorwf	(1+?_strncmp),c,w
  2875  000B3C  100C               	btfss	status,2
  2876  000B3E  A4D8               	goto	u1191
  2877  000B40  EFA4  F005         	goto	u1190
  2878  000B44  EFA6  F005         
  2879                           u1191:
  2880  000B48                     	goto	l1762
  2881  000B48  EFAE  F005         u1190:
  2882  000B4C                     	line	8
  2883                           	
  2884                           l1758:
  2885  000B4C                     		movff	(c:strstr@s1),(c:?_strstr)
  2886  000B4C  C014  F014         	movff	(c:strstr@s1+1),(c:?_strstr+1)
  2887  000B50  C015  F015         
  2888                           	goto	l902
  2889  000B54  EFE3  F005         	
  2890                           l1760:
  2891  000B58                     	goto	l902
  2892  000B58  EFE3  F005         	
  2893                           l901:
  2894  000B5C                     	line	9
  2895                           	
  2896                           l1762:
  2897  000B5C                     	movlw	low(01h)
  2898  000B5C  0E01               	addwf	((c:strstr@s1)),c,w
  2899  000B5E  2414               	movwf	((c:strchr@ptr)),c
  2900  000B60  6E05               	movlw	high(01h)
  2901  000B62  0E00               	addwfc	((c:strstr@s1+1)),c,w
  2902  000B64  2015               	movwf	1+((c:strchr@ptr)),c
  2903  000B66  6E06               	movff	(c:strstr@s2),tblptrl
  2904  000B68  C016  FFF6         	movff	(c:strstr@s2+1),tblptrh
  2905  000B6C  C017  FFF7         	if	0	;tblptru may be non-zero
  2906  000B70                     	clrf	tblptru
  2908  000B70                     	if	0	;tblptru may be non-zero
  2909  000B70                     	global __mediumconst
  2910                           movlw	low highword(__mediumconst)
  2913  000B70                     	tblrd	*
  2914  000B70  0008               	
  2915                           	movf	tablat,w
  2916  000B72  50F5               
  2917                           	movwf	((c:strchr@chr)),c
  2918  000B74  6E07               	clrf	((c:strchr@chr+1)),c
  2919  000B76  6A08               	call	_strchr	;wreg free
  2920  000B78  EC9A  F007         	movff	0+?_strchr,(c:strstr@s1)
  2921  000B7C  C005  F014         	movff	1+?_strchr,(c:strstr@s1+1)
  2922  000B80  C006  F015         	goto	l1764
  2923  000B84  EFC4  F005         	line	10
  2924                           	
  2925                           l899:
  2926  000B88                     	line	6
  2927                           	
  2928                           l1764:
  2929  000B88                     	movf	((c:strstr@s1)),c,w
  2930  000B88  5014               iorwf	((c:strstr@s1+1)),c,w
  2931  000B8A  1015               	btfsc	status,2
  2932  000B8C  B4D8               	goto	u1201
  2933  000B8E  EFCB  F005         	goto	u1200
  2934  000B92  EFCD  F005         
  2935                           u1201:
  2936  000B96                     	goto	l1768
  2937  000B96  EFDD  F005         u1200:
  2938  000B9A                     	
  2939                           l1766:
  2940  000B9A                     	movff	(c:strstr@s1),fsr2l
  2941  000B9A  C014  FFD9         	movff	(c:strstr@s1+1),fsr2h
  2942  000B9E  C015  FFDA         	movf	indf2,w
  2943  000BA2  50DF               	btfss	status,2
  2944  000BA4  A4D8               	goto	u1211
  2945  000BA6  EFD7  F005         	goto	u1210
  2946  000BAA  EFD9  F005         u1211:
  2947  000BAE                     	goto	l1756
  2948  000BAE  EF89  F005         u1210:
  2949  000BB2                     	goto	l1768
  2950  000BB2  EFDD  F005         	
  2951                           l904:
  2952  000BB6                     	goto	l1768
  2953  000BB6  EFDD  F005         	
  2954                           l905:
  2955  000BBA                     	line	11
  2956                           	
  2957                           l1768:
  2958  000BBA                     		movlw	low(0)
  2959  000BBA  0E00               	movwf	((c:?_strstr)),c
  2960  000BBC  6E14               	movlw	high(0)
  2961  000BBE  0E00               	movwf	((c:?_strstr+1)),c
  2962  000BC0  6E15               
  2963                           	goto	l902
  2964  000BC2  EFE3  F005         	
  2965                           l1770:
  2966  000BC6                     	line	12
  2967                           	
  2968                           l902:
  2969  000BC6                     	return	;funcret
  2970  000BC6  0012               	opt stack 0
  2971                           GLOBAL	__end_of_strstr
  2972                           	__end_of_strstr:
  2973  000BC8                     	signat	_strstr,8314
  2974                           	global	_strncmp
  2975                           
  2976 ;; *************** function _strncmp *****************
  2977 ;; Defined at:
  2978 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  2981 ;;		 -> NULL(0), UART_buffer(8), 
  2982 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  2983 ;;		 -> STR_29(9), STR_28(9), STR_27(9), STR_26(9), 
  2984 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
  2985 ;;		 -> STR_21(9), STR_20(9), STR_19(9), STR_18(9), 
  2986 ;;		 -> STR_17(9), STR_16(9), STR_15(9), STR_14(9), 
  2987 ;;  len             2   14[COMRAM] unsigned int 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2   10[COMRAM] int 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0
  2999 ;;      Params:         6       0
  3000 ;;      Locals:         0       0
  3001 ;;      Temps:          3       0
  3002 ;;      Totals:         9       0
  3003 ;;Total ram usage:        9 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_strstr
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           psect	text2,class=CODE,space=0,reloc=2,group=2
  3013                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  3014                           	line	4
  3015                           global __ptext2
  3016                           __ptext2:
  3017  000BC8                     psect	text2
  3018                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  3019                           	line	4
  3020                           	global	__size_of_strncmp
  3021                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  3022  0000                     	
  3023                           _strncmp:
  3024  000BC8                     ;incstack = 0
  3025                           	opt	stack 28
  3026                           	line	6
  3027                           	
  3028                           l1674:
  3029  000BC8                     	goto	l1686
  3030  000BC8  EF2A  F006         	
  3031                           l921:
  3032  000BCC                     	line	7
  3033                           	
  3034                           l1676:
  3035  000BCC                     	movff	(c:strncmp@s1),fsr2l
  3036  000BCC  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  3037  000BD0  C00C  FFDA         	movf	indf2,w
  3038  000BD4  50DF               	btfsc	status,2
  3039  000BD6  B4D8               	goto	u1081
  3040  000BD8  EFF0  F005         	goto	u1080
  3041  000BDC  EFF2  F005         u1081:
  3042  000BE0                     	goto	l1680
  3043  000BE0  EF08  F006         u1080:
  3044  000BE4                     	
  3045                           l1678:
  3046  000BE4                     	movff	(c:strncmp@s1),fsr2l
  3047  000BE4  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  3048  000BE8  C00C  FFDA         	movf	indf2,w
  3049  000BEC  50DF               	movwf	(??_strncmp+0+0)&0ffh,c
  3050  000BEE  6E11               	movff	(c:strncmp@s2),tblptrl
  3051  000BF0  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  3052  000BF4  C00E  FFF7         	if	0	;tblptru may be non-zero
  3053  000BF8                     	clrf	tblptru
  3055  000BF8                     	if	0	;tblptru may be non-zero
  3056  000BF8                     	global __mediumconst
  3057                           movlw	low highword(__mediumconst)
  3060  000BF8                     	tblrd	*
  3061  000BF8  0008               	
  3062                           	movf	tablat,w
  3063  000BFA  50F5               	xorwf	((??_strncmp+0+0)),c,w
  3064  000BFC  1811               
  3065                           	btfsc	status,2
  3066  000BFE  B4D8               	goto	u1091
  3067  000C00  EF04  F006         	goto	u1090
  3068  000C04  EF06  F006         u1091:
  3069  000C08                     	goto	l1684
  3070  000C08  EF24  F006         u1090:
  3071  000C0C                     	goto	l1680
  3072  000C0C  EF08  F006         	
  3073                           l924:
  3074  000C10                     	line	8
  3075                           	
  3076                           l1680:
  3077  000C10                     	movff	(c:strncmp@s2),tblptrl
  3078  000C10  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  3079  000C14  C00E  FFF7         	if	0	;tblptru may be non-zero
  3080  000C18                     	clrf	tblptru
  3082  000C18                     	if	0	;tblptru may be non-zero
  3083  000C18                     	global __mediumconst
  3084                           movlw	low highword(__mediumconst)
  3087  000C18                     	tblrd	*
  3088  000C18  0008               	
  3089                           	movf	tablat,w
  3090  000C1A  50F5               	movwf	(??_strncmp+0+0)&0ffh,c
  3091  000C1C  6E11               	clrf	(??_strncmp+0+0+1)&0ffh,c
  3092  000C1E  6A12               
  3093                           	comf	(??_strncmp+0+0),c
  3094  000C20  1E11               	comf	(??_strncmp+0+1),c
  3095  000C22  1E12               	infsnz	(??_strncmp+0+0),c
  3096  000C24  4A11               	incf	(??_strncmp+0+1),c
  3097  000C26  2A12               	movff	(c:strncmp@s1),fsr2l
  3098  000C28  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  3099  000C2C  C00C  FFDA         	movf	indf2,w
  3100  000C30  50DF               	movwf	(??_strncmp+2+0)&0ffh,c
  3101  000C32  6E13               	movf	((??_strncmp+2+0)),c,w
  3102  000C34  5013               	addwf	(??_strncmp+0+0),c,w
  3103  000C36  2411               	movwf	((c:?_strncmp)),c
  3104  000C38  6E0B               	movlw	0
  3105  000C3A  0E00               	addwfc	(??_strncmp+0+1),c,w
  3106  000C3C  2012               	movwf	1+((c:?_strncmp)),c
  3107  000C3E  6E0C               	goto	l925
  3108  000C40  EF3F  F006         	
  3109                           l1682:
  3110  000C44                     	goto	l925
  3111  000C44  EF3F  F006         	
  3112                           l922:
  3113  000C48                     	line	10
  3114                           	
  3115                           l1684:
  3116  000C48                     	infsnz	((c:strncmp@s1)),c
  3117  000C48  4A0B               	incf	((c:strncmp@s1+1)),c
  3118  000C4A  2A0C               	line	11
  3119                           	infsnz	((c:strncmp@s2)),c
  3120  000C4C  4A0D               	incf	((c:strncmp@s2+1)),c
  3121  000C4E  2A0E               	goto	l1686
  3122  000C50  EF2A  F006         	line	12
  3123                           	
  3124                           l920:
  3125  000C54                     	line	6
  3126                           	
  3127                           l1686:
  3128  000C54                     	decf	((c:strncmp@len)),c
  3129  000C54  060F               	btfss	status,0
  3130  000C56  A0D8               	decf	((c:strncmp@len+1)),c
  3131  000C58  0610               		incf	((c:strncmp@len)),c,w
  3132  000C5A  280F               	bnz	u1101
  3133  000C5C  E106               	incf	((c:strncmp@len+1)),c,w
  3134  000C5E  2810               	btfss	status,2
  3135  000C60  A4D8               	goto	u1101
  3136  000C62  EF35  F006         	goto	u1100
  3137  000C66  EF37  F006         
  3138                           u1101:
  3139  000C6A                     	goto	l1676
  3140  000C6A  EFE6  F005         u1100:
  3141  000C6E                     	goto	l1688
  3142  000C6E  EF39  F006         	
  3143                           l926:
  3144  000C72                     	line	13
  3145                           	
  3146                           l1688:
  3147  000C72                     	movlw	high(0)
  3148  000C72  0E00               	movwf	((c:?_strncmp+1)),c
  3149  000C74  6E0C               	movlw	low(0)
  3150  000C76  0E00               	movwf	((c:?_strncmp)),c
  3151  000C78  6E0B               	goto	l925
  3152  000C7A  EF3F  F006         	
  3153                           l1690:
  3154  000C7E                     	line	14
  3155                           	
  3156                           l925:
  3157  000C7E                     	return	;funcret
  3158  000C7E  0012               	opt stack 0
  3159                           GLOBAL	__end_of_strncmp
  3160                           	__end_of_strncmp:
  3161  000C80                     	signat	_strncmp,12410
  3162                           	global	_strlen
  3163                           
  3164 ;; *************** function _strlen *****************
  3165 ;; Defined at:
  3166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3169 ;;		 -> STR_29(9), STR_28(9), STR_27(9), STR_26(9), 
  3170 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
  3171 ;;		 -> STR_21(9), STR_20(9), STR_19(9), STR_18(9), 
  3172 ;;		 -> STR_17(9), STR_16(9), STR_15(9), STR_14(9), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  cp              2    8[COMRAM] PTR const unsigned char 
  3175 ;;		 -> STR_29(9), STR_28(9), STR_27(9), STR_26(9), 
  3176 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
  3177 ;;		 -> STR_21(9), STR_20(9), STR_19(9), STR_18(9), 
  3178 ;;		 -> STR_17(9), STR_16(9), STR_15(9), STR_14(9), 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2    4[COMRAM] unsigned int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0
  3188 ;;      Params:         2       0
  3189 ;;      Locals:         2       0
  3190 ;;      Temps:          2       0
  3191 ;;      Totals:         6       0
  3192 ;;Total ram usage:        6 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_strstr
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           psect	text3,class=CODE,space=0,reloc=2,group=2
  3202                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3203                           	line	4
  3204                           global __ptext3
  3205                           __ptext3:
  3206  000F8C                     psect	text3
  3207                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3208                           	line	4
  3209                           	global	__size_of_strlen
  3210                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  3211  0000                     	
  3212                           _strlen:
  3213  000F8C                     ;incstack = 0
  3214                           	opt	stack 28
  3215                           	line	8
  3216                           	
  3217                           l1664:
  3218  000F8C                     		movff	(c:strlen@s),(c:strlen@cp)
  3219  000F8C  C005  F009         	movff	(c:strlen@s+1),(c:strlen@cp+1)
  3220  000F90  C006  F00A         
  3221                           	line	9
  3222                           	goto	l1668
  3223  000F94  EFD0  F007         	
  3224                           l915:
  3225  000F98                     	line	10
  3226                           	
  3227                           l1666:
  3228  000F98                     	infsnz	((c:strlen@cp)),c
  3229  000F98  4A09               	incf	((c:strlen@cp+1)),c
  3230  000F9A  2A0A               	goto	l1668
  3231  000F9C  EFD0  F007         	line	11
  3232                           	
  3233                           l914:
  3234  000FA0                     	line	9
  3235                           	
  3236                           l1668:
  3237  000FA0                     	movff	(c:strlen@cp),tblptrl
  3238  000FA0  C009  FFF6         	movff	(c:strlen@cp+1),tblptrh
  3239  000FA4  C00A  FFF7         	if	0	;tblptru may be non-zero
  3240  000FA8                     	clrf	tblptru
  3242  000FA8                     	if	0	;tblptru may be non-zero
  3243  000FA8                     	global __mediumconst
  3244                           movlw	low highword(__mediumconst)
  3247  000FA8                     	tblrd	*
  3248  000FA8  0008               	
  3249                           	movf	tablat,w
  3250  000FAA  50F5               	iorlw	0
  3251  000FAC  0900               	btfss	status,2
  3252  000FAE  A4D8               	goto	u1071
  3253  000FB0  EFDC  F007         	goto	u1070
  3254  000FB4  EFDE  F007         u1071:
  3255  000FB8                     	goto	l1666
  3256  000FB8  EFCC  F007         u1070:
  3257  000FBC                     	goto	l1670
  3258  000FBC  EFE0  F007         	
  3259                           l916:
  3260  000FC0                     	line	12
  3261                           	
  3262                           l1670:
  3263  000FC0                     	movff	(c:strlen@s),??_strlen+0+0
  3264  000FC0  C005  F007         	movff	(c:strlen@s+1),??_strlen+0+0+1
  3265  000FC4  C006  F008         	comf	(??_strlen+0+0),c
  3266  000FC8  1E07               	comf	(??_strlen+0+1),c
  3267  000FCA  1E08               	infsnz	(??_strlen+0+0),c
  3268  000FCC  4A07               	incf	(??_strlen+0+1),c
  3269  000FCE  2A08               	movf	((c:strlen@cp)),c,w
  3270  000FD0  5009               	addwf	(??_strlen+0+0),c,w
  3271  000FD2  2407               	movwf	((c:?_strlen)),c
  3272  000FD4  6E05               	movf	((c:strlen@cp+1)),c,w
  3273  000FD6  500A               	addwfc	(??_strlen+0+1),c,w
  3274  000FD8  2008               	movwf	1+((c:?_strlen)),c
  3275  000FDA  6E06               	goto	l917
  3276  000FDC  EFF0  F007         	
  3277                           l1672:
  3278  000FE0                     	line	13
  3279                           	
  3280                           l917:
  3281  000FE0                     	return	;funcret
  3282  000FE0  0012               	opt stack 0
  3283                           GLOBAL	__end_of_strlen
  3284                           	__end_of_strlen:
  3285  000FE2                     	signat	_strlen,4218
  3286                           	global	_strchr
  3287                           
  3288 ;; *************** function _strchr *****************
  3289 ;; Defined at:
  3290 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  3293 ;;		 -> NULL(0), UART_buffer(8), 
  3294 ;;  chr             2    6[COMRAM] int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  2    4[COMRAM] PTR unsigned char 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0
  3306 ;;      Params:         4       0
  3307 ;;      Locals:         0       0
  3308 ;;      Temps:          1       0
  3309 ;;      Totals:         5       0
  3310 ;;Total ram usage:        5 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_strstr
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           psect	text4,class=CODE,space=0,reloc=2,group=2
  3320                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3321                           	line	4
  3322                           global __ptext4
  3323                           __ptext4:
  3324  000F34                     psect	text4
  3325                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3326                           	line	4
  3327                           	global	__size_of_strchr
  3328                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  3329  0000                     	
  3330                           _strchr:
  3331  000F34                     ;incstack = 0
  3332                           	opt	stack 28
  3333                           	line	6
  3334                           	
  3335                           l908:
  3336  000F34                     	line	7
  3337                           	
  3338                           l1692:
  3339  000F34                     	movff	(c:strchr@ptr),fsr2l
  3340  000F34  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  3341  000F38  C006  FFDA         	movf	((c:strchr@chr)),c,w
  3342  000F3C  5007               xorwf	postinc2,w
  3343  000F3E  18DE               	btfss	status,2
  3344  000F40  A4D8               	goto	u1111
  3345  000F42  EFA5  F007         	goto	u1110
  3346  000F46  EFA7  F007         
  3347                           u1111:
  3348  000F4A                     	goto	l1698
  3349  000F4A  EFAF  F007         u1110:
  3350  000F4E                     	line	8
  3351                           	
  3352                           l1694:
  3353  000F4E                     		movff	(c:strchr@ptr),(c:?_strchr)
  3354  000F4E  C005  F005         	movff	(c:strchr@ptr+1),(c:?_strchr+1)
  3355  000F52  C006  F006         
  3356                           	goto	l910
  3357  000F56  EFC5  F007         	
  3358                           l1696:
  3359  000F5A                     	goto	l910
  3360  000F5A  EFC5  F007         	
  3361                           l909:
  3362  000F5E                     	line	9
  3363                           	
  3364                           l1698:
  3365  000F5E                     	movff	(c:strchr@ptr),fsr2l
  3366  000F5E  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  3367  000F62  C006  FFDA         	infsnz	((c:strchr@ptr)),c
  3368  000F66  4A05               	incf	((c:strchr@ptr+1)),c
  3369  000F68  2A06               	movf	indf2,w
  3370  000F6A  50DF               	btfss	status,2
  3371  000F6C  A4D8               	goto	u1121
  3372  000F6E  EFBB  F007         	goto	u1120
  3373  000F72  EFBD  F007         u1121:
  3374  000F76                     	goto	l908
  3375  000F76  EF9A  F007         u1120:
  3376  000F7A                     	goto	l1700
  3377  000F7A  EFBF  F007         	
  3378                           l911:
  3379  000F7E                     	line	10
  3380                           	
  3381                           l1700:
  3382  000F7E                     		movlw	low(0)
  3383  000F7E  0E00               	movwf	((c:?_strchr)),c
  3384  000F80  6E05               	movlw	high(0)
  3385  000F82  0E00               	movwf	((c:?_strchr+1)),c
  3386  000F84  6E06               
  3387                           	goto	l910
  3388  000F86  EFC5  F007         	
  3389                           l1702:
  3390  000F8A                     	line	11
  3391                           	
  3392                           l910:
  3393  000F8A                     	return	;funcret
  3394  000F8A  0012               	opt stack 0
  3395                           GLOBAL	__end_of_strchr
  3396                           	__end_of_strchr:
  3397  000F8C                     	signat	_strchr,8314
  3398                           	global	_send_Status
  3399                           
  3400 ;; *************** function _send_Status *****************
  3401 ;; Defined at:
  3402 ;;		line 67 in file "uart.h"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  buffer         10   28[COMRAM] unsigned char [10]
  3407 ;;  temp            4   38[COMRAM] unsigned long 
  3408 ;;  batValue        2   44[COMRAM] unsigned int 
  3409 ;;  adcValue        2   42[COMRAM] unsigned int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0
  3419 ;;      Params:         0       0
  3420 ;;      Locals:        18       0
  3421 ;;      Temps:          0       0
  3422 ;;      Totals:        18       0
  3423 ;;Total ram usage:       18 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    4
  3426 ;; This function calls:
  3427 ;;		_ADC_Get
  3428 ;;		_UART_Write_Text
  3429 ;;		___lldiv
  3430 ;;		___lmul
  3431 ;;		_itoa
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3437                           	file	"uart.h"
  3438                           	line	67
  3439                           global __ptext5
  3440                           __ptext5:
  3441  0008B6                     psect	text5
  3442                           	file	"uart.h"
  3443                           	line	67
  3444                           	global	__size_of_send_Status
  3445                           	__size_of_send_Status	equ	__end_of_send_Status-_send_Status
  3446  0000                     	
  3447                           _send_Status:
  3448  0008B6                     ;incstack = 0
  3449                           	opt	stack 26
  3450                           	line	72
  3451                           	
  3452                           l1718:
  3453  0008B6                     ;uart.h: 68: unsigned int adcValue;;uart.h: 69: unsigned int batValue;;uart.h: 70: unsig
                                 ned char buffer[10];;uart.h: 72: adcValue = ADC_Get();
  3454                           	call	_ADC_Get	;wreg free
  3455  0008B6  EC1B  F008         	movff	0+?_ADC_Get,(c:send_Status@adcValue)
  3456  0008BA  C008  F02B         	movff	1+?_ADC_Get,(c:send_Status@adcValue+1)
  3457  0008BE  C009  F02C         	line	74
  3458                           ;uart.h: 74: unsigned long temp = ((unsigned long) adcValue * (unsigned long) 5000);
  3459                           	movff	(c:send_Status@adcValue),(c:___lmul@multiplier)
  3460  0008C2  C02B  F005         	movff	(c:send_Status@adcValue+1),(c:___lmul@multiplier+1)
  3461  0008C6  C02C  F006         	clrf	((c:___lmul@multiplier+2)),c
  3462  0008CA  6A07               	clrf	((c:___lmul@multiplier+3)),c
  3463  0008CC  6A08               
  3464                           	movlw	low(01388h)
  3465  0008CE  0E88               	movwf	((c:___lmul@multiplicand)),c
  3466  0008D0  6E09               	movlw	high(01388h)
  3467  0008D2  0E13               	movwf	((c:___lmul@multiplicand+1)),c
  3468  0008D4  6E0A               	movlw	low highword(01388h)
  3469  0008D6  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  3470  0008D8  6E0B               	movlw	high highword(01388h)
  3471  0008DA  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  3472  0008DC  6E0C               	call	___lmul	;wreg free
  3473  0008DE  EC61  F007         	movff	0+?___lmul,(c:send_Status@temp)
  3474  0008E2  C005  F027         	movff	1+?___lmul,(c:send_Status@temp+1)
  3475  0008E6  C006  F028         	movff	2+?___lmul,(c:send_Status@temp+2)
  3476  0008EA  C007  F029         	movff	3+?___lmul,(c:send_Status@temp+3)
  3477  0008EE  C008  F02A         	
  3478                           	line	75
  3479                           ;uart.h: 75: batValue = temp / 1023;
  3480                           	movff	(c:send_Status@temp),(c:___lldiv@dividend)
  3481  0008F2  C027  F005         	movff	(c:send_Status@temp+1),(c:___lldiv@dividend+1)
  3482  0008F6  C028  F006         	movff	(c:send_Status@temp+2),(c:___lldiv@dividend+2)
  3483  0008FA  C029  F007         	movff	(c:send_Status@temp+3),(c:___lldiv@dividend+3)
  3484  0008FE  C02A  F008         	movlw	low(03FFh)
  3485  000902  0EFF               	movwf	((c:___lldiv@divisor)),c
  3486  000904  6E09               	movlw	high(03FFh)
  3487  000906  0E03               	movwf	((c:___lldiv@divisor+1)),c
  3488  000908  6E0A               	movlw	low highword(03FFh)
  3489  00090A  0E00               	movwf	((c:___lldiv@divisor+2)),c
  3490  00090C  6E0B               	movlw	high highword(03FFh)
  3491  00090E  0E00               	movwf	((c:___lldiv@divisor+3)),c
  3492  000910  6E0C               	call	___lldiv	;wreg free
  3493  000912  EC40  F006         	movff	0+?___lldiv,(c:send_Status@batValue)
  3494  000916  C005  F02D         	movff	1+?___lldiv,(c:send_Status@batValue+1)
  3495  00091A  C006  F02E         	line	76
  3496                           	
  3497                           l1720:
  3498  00091E                     ;uart.h: 76: itoa(buffer, batValue, 10);
  3499                           		movlw	low(send_Status@buffer)
  3500  00091E  0E1D               	movwf	((c:itoa@buf)),c
  3501  000920  6E15               	movlw	high(send_Status@buffer)
  3502  000922  0E00               	movwf	((c:itoa@buf+1)),c
  3503  000924  6E16               
  3504                           	movff	(c:send_Status@batValue),(c:itoa@val)
  3505  000926  C02D  F017         	movff	(c:send_Status@batValue+1),(c:itoa@val+1)
  3506  00092A  C02E  F018         	movlw	high(0Ah)
  3507  00092E  0E00               	movwf	((c:itoa@base+1)),c
  3508  000930  6E1A               	movlw	low(0Ah)
  3509  000932  0E0A               	movwf	((c:itoa@base)),c
  3510  000934  6E19               	call	_itoa	;wreg free
  3511  000936  ECF1  F007         	line	77
  3512                           	
  3513                           l1722:
  3514  00093A                     ;uart.h: 77: UART_Write_Text(buffer);
  3515                           		movlw	low(send_Status@buffer)
  3516  00093A  0E1D               	movwf	((c:UART_Write_Text@text)),c
  3517  00093C  6E06               	movlw	high(send_Status@buffer)
  3518  00093E  0E00               	movwf	((c:UART_Write_Text@text+1)),c
  3519  000940  6E07               
  3520                           	call	_UART_Write_Text	;wreg free
  3521  000942  EC9C  F006         	line	79
  3522                           	
  3523                           l1724:
  3524  000946                     ;uart.h: 79: if (Status_Alarm_Triggered == 0b1) {
  3525                           		decf	((c:_Status_Alarm_Triggered)),c,w
  3526  000946  043F               	btfss	status,2
  3527  000948  A4D8               	goto	u1141
  3528  00094A  EFA9  F004         	goto	u1140
  3529  00094E  EFAB  F004         
  3530                           u1141:
  3531  000952                     	goto	l1728
  3532  000952  EFB3  F004         u1140:
  3533  000956                     	line	80
  3534                           	
  3535                           l1726:
  3536  000956                     ;uart.h: 80: UART_Write_Text((unsigned char *) "|ON|");
  3537                           		movlw	low(STR_1)
  3538  000956  0ECF               	movwf	((c:UART_Write_Text@text)),c
  3539  000958  6E06               	movlw	high(STR_1)
  3540  00095A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3541  00095C  6E07               
  3542                           	call	_UART_Write_Text	;wreg free
  3543  00095E  EC9C  F006         	line	81
  3544                           ;uart.h: 81: } else {
  3545                           	goto	l1730
  3546  000962  EFBB  F004         	
  3547                           l141:
  3548  000966                     	line	82
  3549                           	
  3550                           l1728:
  3551  000966                     ;uart.h: 82: UART_Write_Text((unsigned char *) "|OFF|");
  3552                           		movlw	low(STR_2)
  3553  000966  0EC9               	movwf	((c:UART_Write_Text@text)),c
  3554  000968  6E06               	movlw	high(STR_2)
  3555  00096A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3556  00096C  6E07               
  3557                           	call	_UART_Write_Text	;wreg free
  3558  00096E  EC9C  F006         	goto	l1730
  3559  000972  EFBB  F004         	line	83
  3560                           	
  3561                           l142:
  3562  000976                     	line	85
  3563                           	
  3564                           l1730:
  3565  000976                     ;uart.h: 83: };uart.h: 85: if (Status_Alarm_Enabled == 0b1) {
  3566                           		decf	((c:_Status_Alarm_Enabled)),c,w
  3567  000976  043E               	btfss	status,2
  3568  000978  A4D8               	goto	u1151
  3569  00097A  EFC1  F004         	goto	u1150
  3570  00097E  EFC3  F004         
  3571                           u1151:
  3572  000982                     	goto	l1734
  3573  000982  EFCB  F004         u1150:
  3574  000986                     	line	86
  3575                           	
  3576                           l1732:
  3577  000986                     ;uart.h: 86: UART_Write_Text((unsigned char *) "ON|");
  3578                           		movlw	low(STR_3)
  3579  000986  0ED0               	movwf	((c:UART_Write_Text@text)),c
  3580  000988  6E06               	movlw	high(STR_3)
  3581  00098A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3582  00098C  6E07               
  3583                           	call	_UART_Write_Text	;wreg free
  3584  00098E  EC9C  F006         	line	87
  3585                           ;uart.h: 87: } else {
  3586                           	goto	l1736
  3587  000992  EFD3  F004         	
  3588                           l143:
  3589  000996                     	line	88
  3590                           	
  3591                           l1734:
  3592  000996                     ;uart.h: 88: UART_Write_Text((unsigned char *) "OFF|");
  3593                           		movlw	low(STR_4)
  3594  000996  0ECA               	movwf	((c:UART_Write_Text@text)),c
  3595  000998  6E06               	movlw	high(STR_4)
  3596  00099A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3597  00099C  6E07               
  3598                           	call	_UART_Write_Text	;wreg free
  3599  00099E  EC9C  F006         	goto	l1736
  3600  0009A2  EFD3  F004         	line	89
  3601                           	
  3602                           l144:
  3603  0009A6                     	line	91
  3604                           	
  3605                           l1736:
  3606  0009A6                     ;uart.h: 89: };uart.h: 91: if (Status_Ac_power == 0b1) {
  3607                           		decf	((c:_Status_Ac_power)),c,w
  3608  0009A6  043D               	btfss	status,2
  3609  0009A8  A4D8               	goto	u1161
  3610  0009AA  EFD9  F004         	goto	u1160
  3611  0009AE  EFDB  F004         
  3612                           u1161:
  3613  0009B2                     	goto	l1740
  3614  0009B2  EFE3  F004         u1160:
  3615  0009B6                     	line	92
  3616                           	
  3617                           l1738:
  3618  0009B6                     ;uart.h: 92: UART_Write_Text((unsigned char *) "AC|");
  3619                           		movlw	low(STR_5)
  3620  0009B6  0ED8               	movwf	((c:UART_Write_Text@text)),c
  3621  0009B8  6E06               	movlw	high(STR_5)
  3622  0009BA  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3623  0009BC  6E07               
  3624                           	call	_UART_Write_Text	;wreg free
  3625  0009BE  EC9C  F006         	line	93
  3626                           ;uart.h: 93: } else {
  3627                           	goto	l1742
  3628  0009C2  EFEB  F004         	
  3629                           l145:
  3630  0009C6                     	line	94
  3631                           	
  3632                           l1740:
  3633  0009C6                     ;uart.h: 94: UART_Write_Text((unsigned char *) "DC|");
  3634                           		movlw	low(STR_6)
  3635  0009C6  0EDC               	movwf	((c:UART_Write_Text@text)),c
  3636  0009C8  6E06               	movlw	high(STR_6)
  3637  0009CA  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3638  0009CC  6E07               
  3639                           	call	_UART_Write_Text	;wreg free
  3640  0009CE  EC9C  F006         	goto	l1742
  3641  0009D2  EFEB  F004         	line	95
  3642                           	
  3643                           l146:
  3644  0009D6                     	line	97
  3645                           	
  3646                           l1742:
  3647  0009D6                     ;uart.h: 95: };uart.h: 97: if (Status_Siren == 0b1) {
  3648                           		decf	((c:_Status_Siren)),c,w
  3649  0009D6  043C               	btfss	status,2
  3650  0009D8  A4D8               	goto	u1171
  3651  0009DA  EFF1  F004         	goto	u1170
  3652  0009DE  EFF3  F004         
  3653                           u1171:
  3654  0009E2                     	goto	l1746
  3655  0009E2  EFFB  F004         u1170:
  3656  0009E6                     	line	98
  3657                           	
  3658                           l1744:
  3659  0009E6                     ;uart.h: 98: UART_Write_Text((unsigned char *) "ON|");
  3660                           		movlw	low(STR_7)
  3661  0009E6  0ED0               	movwf	((c:UART_Write_Text@text)),c
  3662  0009E8  6E06               	movlw	high(STR_7)
  3663  0009EA  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3664  0009EC  6E07               
  3665                           	call	_UART_Write_Text	;wreg free
  3666  0009EE  EC9C  F006         	line	99
  3667                           ;uart.h: 99: } else {
  3668                           	goto	l1748
  3669  0009F2  EF03  F005         	
  3670                           l147:
  3671  0009F6                     	line	100
  3672                           	
  3673                           l1746:
  3674  0009F6                     ;uart.h: 100: UART_Write_Text((unsigned char *) "OFF|");
  3675                           		movlw	low(STR_8)
  3676  0009F6  0ECA               	movwf	((c:UART_Write_Text@text)),c
  3677  0009F8  6E06               	movlw	high(STR_8)
  3678  0009FA  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3679  0009FC  6E07               
  3680                           	call	_UART_Write_Text	;wreg free
  3681  0009FE  EC9C  F006         	goto	l1748
  3682  000A02  EF03  F005         	line	101
  3683                           	
  3684                           l148:
  3685  000A06                     	line	103
  3686                           	
  3687                           l1748:
  3688  000A06                     ;uart.h: 101: };uart.h: 103: if (Status_Extra == 0b1) {
  3689                           		decf	((c:_Status_Extra)),c,w
  3690  000A06  043B               	btfss	status,2
  3691  000A08  A4D8               	goto	u1181
  3692  000A0A  EF09  F005         	goto	u1180
  3693  000A0E  EF0B  F005         
  3694                           u1181:
  3695  000A12                     	goto	l1752
  3696  000A12  EF13  F005         u1180:
  3697  000A16                     	line	104
  3698                           	
  3699                           l1750:
  3700  000A16                     ;uart.h: 104: UART_Write_Text((unsigned char *) "ON");
  3701                           		movlw	low(STR_9)
  3702  000A16  0E36               	movwf	((c:UART_Write_Text@text)),c
  3703  000A18  6E06               	movlw	high(STR_9)
  3704  000A1A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3705  000A1C  6E07               
  3706                           	call	_UART_Write_Text	;wreg free
  3707  000A1E  EC9C  F006         	line	105
  3708                           ;uart.h: 105: } else {
  3709                           	goto	l151
  3710  000A22  EF1B  F005         	
  3711                           l149:
  3712  000A26                     	line	106
  3713                           	
  3714                           l1752:
  3715  000A26                     ;uart.h: 106: UART_Write_Text((unsigned char *) "OFF");
  3716                           		movlw	low(STR_10)
  3717  000A26  0ED4               	movwf	((c:UART_Write_Text@text)),c
  3718  000A28  6E06               	movlw	high(STR_10)
  3719  000A2A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3720  000A2C  6E07               
  3721                           	call	_UART_Write_Text	;wreg free
  3722  000A2E  EC9C  F006         	goto	l151
  3723  000A32  EF1B  F005         	line	107
  3724                           	
  3725                           l150:
  3726  000A36                     	line	108
  3727                           	
  3728                           l151:
  3729  000A36                     	return	;funcret
  3730  000A36  0012               	opt stack 0
  3731                           GLOBAL	__end_of_send_Status
  3732                           	__end_of_send_Status:
  3733  000A38                     	signat	_send_Status,89
  3734                           	global	_itoa
  3735                           
  3736 ;; *************** function _itoa *****************
  3737 ;; Defined at:
  3738 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3741 ;;		 -> send_Status@buffer(10), 
  3742 ;;  val             2   22[COMRAM] int 
  3743 ;;  base            2   24[COMRAM] int 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  cp              2   26[COMRAM] PTR unsigned char 
  3746 ;;		 -> send_Status@buffer(10), 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2   20[COMRAM] PTR unsigned char 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0
  3756 ;;      Params:         6       0
  3757 ;;      Locals:         2       0
  3758 ;;      Temps:          0       0
  3759 ;;      Totals:         8       0
  3760 ;;Total ram usage:        8 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		_utoa
  3765 ;; This function is called by:
  3766 ;;		_send_Status
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           psect	text6,class=CODE,space=0,reloc=2,group=2
  3770                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3771                           	line	4
  3772                           global __ptext6
  3773                           __ptext6:
  3774  000FE2                     psect	text6
  3775                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3776                           	line	4
  3777                           	global	__size_of_itoa
  3778                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  3779  0000                     	
  3780                           _itoa:
  3781  000FE2                     ;incstack = 0
  3782                           	opt	stack 26
  3783                           	line	6
  3784                           	
  3785                           l1620:
  3786  000FE2                     		movff	(c:itoa@buf),(c:itoa@cp)
  3787  000FE2  C015  F01B         	movff	(c:itoa@buf+1),(c:itoa@cp+1)
  3788  000FE6  C016  F01C         
  3789                           	line	8
  3790                           	btfsc	((c:itoa@val+1)),c,7
  3791  000FEA  BE18               	goto	u1010
  3792  000FEC  EFFC  F007         	goto	u1011
  3793  000FF0  EFFA  F007         
  3794                           u1011:
  3795  000FF4                     	goto	l1628
  3796  000FF4  EF0A  F008         u1010:
  3797  000FF8                     	line	9
  3798                           	
  3799                           l1622:
  3800  000FF8                     	movff	(c:itoa@buf),fsr2l
  3801  000FF8  C015  FFD9         	movff	(c:itoa@buf+1),fsr2h
  3802  000FFC  C016  FFDA         	movlw	low(02Dh)
  3803  001000  0E2D               	movwf	indf2
  3804  001002  6EDF               	
  3805                           l1624:
  3806  001004                     	infsnz	((c:itoa@buf)),c
  3807  001004  4A15               	incf	((c:itoa@buf+1)),c
  3808  001006  2A16               	line	10
  3809                           	
  3810                           l1626:
  3811  001008                     	negf	((c:itoa@val)),c
  3812  001008  6C17               	comf	((c:itoa@val+1)),c
  3813  00100A  1E18               	btfsc	status,0
  3814  00100C  B0D8               	incf	((c:itoa@val+1)),c
  3815  00100E  2A18               	goto	l1628
  3816  001010  EF0A  F008         	line	11
  3817                           	
  3818                           l875:
  3819  001014                     	line	12
  3820                           	
  3821                           l1628:
  3822  001014                     		movff	(c:itoa@buf),(c:utoa@buf)
  3823  001014  C015  F00C         	movff	(c:itoa@buf+1),(c:utoa@buf+1)
  3824  001018  C016  F00D         
  3825                           	movff	(c:itoa@val),(c:utoa@val)
  3826  00101C  C017  F00E         	movff	(c:itoa@val+1),(c:utoa@val+1)
  3827  001020  C018  F00F         	movff	(c:itoa@base),(c:utoa@base)
  3828  001024  C019  F010         	movff	(c:itoa@base+1),(c:utoa@base+1)
  3829  001028  C01A  F011         	call	_utoa	;wreg free
  3830  00102C  EC1C  F005         	goto	l876
  3831  001030  EF1A  F008         	line	13
  3832                           	
  3833                           l1630:
  3834  001034                     	line	14
  3835                           ;	Return value of _itoa is never used
  3836                           	
  3837                           l876:
  3838  001034                     	return	;funcret
  3839  001034  0012               	opt stack 0
  3840                           GLOBAL	__end_of_itoa
  3841                           	__end_of_itoa:
  3842  001036                     	signat	_itoa,12410
  3843                           	global	_utoa
  3844                           
  3845 ;; *************** function _utoa *****************
  3846 ;; Defined at:
  3847 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  buf             2   11[COMRAM] PTR unsigned char 
  3850 ;;		 -> send_Status@buffer(10), 
  3851 ;;  val             2   13[COMRAM] unsigned int 
  3852 ;;  base            2   15[COMRAM] int 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  v               2   17[COMRAM] unsigned int 
  3855 ;;  c               1   19[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2   11[COMRAM] PTR unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0
  3865 ;;      Params:         6       0
  3866 ;;      Locals:         3       0
  3867 ;;      Temps:          0       0
  3868 ;;      Totals:         9       0
  3869 ;;Total ram usage:        9 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    2
  3872 ;; This function calls:
  3873 ;;		___lwdiv
  3874 ;;		___lwmod
  3875 ;; This function is called by:
  3876 ;;		_itoa
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           psect	text7,class=CODE,space=0,reloc=2,group=2
  3880                           	line	17
  3881                           global __ptext7
  3882                           __ptext7:
  3883  000A38                     psect	text7
  3884                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3885                           	line	17
  3886                           	global	__size_of_utoa
  3887                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  3888  0000                     	
  3889                           _utoa:
  3890  000A38                     ;incstack = 0
  3891                           	opt	stack 26
  3892                           	line	22
  3893                           	
  3894                           l1558:
  3895  000A38                     	movff	(c:utoa@val),(c:utoa@v)
  3896  000A38  C00E  F012         	movff	(c:utoa@val+1),(c:utoa@v+1)
  3897  000A3C  C00F  F013         	goto	l1560
  3898  000A40  EF22  F005         	line	23
  3899                           	
  3900                           l879:
  3901  000A44                     	line	24
  3902                           	
  3903                           l1560:
  3904  000A44                     	movff	(c:utoa@v),(c:___lwdiv@dividend)
  3905  000A44  C012  F005         	movff	(c:utoa@v+1),(c:___lwdiv@dividend+1)
  3906  000A48  C013  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3907  000A4C  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3908  000A50  C011  F008         	call	___lwdiv	;wreg free
  3909  000A54  ECE1  F006         	movff	0+?___lwdiv,(c:utoa@v)
  3910  000A58  C005  F012         	movff	1+?___lwdiv,(c:utoa@v+1)
  3911  000A5C  C006  F013         	line	25
  3912                           	
  3913                           l1562:
  3914  000A60                     	infsnz	((c:utoa@buf)),c
  3915  000A60  4A0C               	incf	((c:utoa@buf+1)),c
  3916  000A62  2A0D               	line	26
  3917                           	
  3918                           l1564:
  3919  000A64                     	movf	((c:utoa@v)),c,w
  3920  000A64  5012               iorwf	((c:utoa@v+1)),c,w
  3921  000A66  1013               	btfss	status,2
  3922  000A68  A4D8               	goto	u931
  3923  000A6A  EF39  F005         	goto	u930
  3924  000A6E  EF3B  F005         
  3925                           u931:
  3926  000A72                     	goto	l1560
  3927  000A72  EF22  F005         u930:
  3928  000A76                     	goto	l1566
  3929  000A76  EF3D  F005         	
  3930                           l880:
  3931  000A7A                     	line	27
  3932                           	
  3933                           l1566:
  3934  000A7A                     	movff	(c:utoa@buf),fsr2l
  3935  000A7A  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3936  000A7E  C00D  FFDA         	movlw	low(0)
  3937  000A82  0E00               	movwf	indf2
  3938  000A84  6EDF               	
  3939                           l1568:
  3940  000A86                     	decf	((c:utoa@buf)),c
  3941  000A86  060C               	btfss	status,0
  3942  000A88  A0D8               	decf	((c:utoa@buf+1)),c
  3943  000A8A  060D               	goto	l1570
  3944  000A8C  EF48  F005         	line	28
  3945                           	
  3946                           l881:
  3947  000A90                     	line	29
  3948                           	
  3949                           l1570:
  3950  000A90                     	movff	(c:utoa@val),(c:___lwmod@dividend)
  3951  000A90  C00E  F005         	movff	(c:utoa@val+1),(c:___lwmod@dividend+1)
  3952  000A94  C00F  F006         	movff	(c:utoa@base),(c:___lwmod@divisor)
  3953  000A98  C010  F007         	movff	(c:utoa@base+1),(c:___lwmod@divisor+1)
  3954  000A9C  C011  F008         	call	___lwmod	;wreg free
  3955  000AA0  EC25  F007         	movf	(0+?___lwmod),c,w
  3956  000AA4  5005               	movwf	((c:utoa@c)),c
  3957  000AA6  6E14               	line	30
  3958                           	
  3959                           l1572:
  3960  000AA8                     	movff	(c:utoa@val),(c:___lwdiv@dividend)
  3961  000AA8  C00E  F005         	movff	(c:utoa@val+1),(c:___lwdiv@dividend+1)
  3962  000AAC  C00F  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3963  000AB0  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3964  000AB4  C011  F008         	call	___lwdiv	;wreg free
  3965  000AB8  ECE1  F006         	movff	0+?___lwdiv,(c:utoa@val)
  3966  000ABC  C005  F00E         	movff	1+?___lwdiv,(c:utoa@val+1)
  3967  000AC0  C006  F00F         	line	31
  3968                           	
  3969                           l1574:
  3970  000AC4                     		movlw	0Ah-1
  3971  000AC4  0E09               	cpfsgt	((c:utoa@c)),c
  3972  000AC6  6414               	goto	u941
  3973  000AC8  EF68  F005         	goto	u940
  3974  000ACC  EF6A  F005         
  3975                           u941:
  3976  000AD0                     	goto	l882
  3977  000AD0  EF6C  F005         u940:
  3978  000AD4                     	line	32
  3979                           	
  3980                           l1576:
  3981  000AD4                     	movlw	(07h)&0ffh
  3982  000AD4  0E07               	addwf	((c:utoa@c)),c
  3983  000AD6  2614               	
  3984                           l882:
  3985  000AD8                     	line	33
  3986                           	movlw	(030h)&0ffh
  3987  000AD8  0E30               	addwf	((c:utoa@c)),c
  3988  000ADA  2614               	line	34
  3989                           	
  3990                           l1578:
  3991  000ADC                     	movff	(c:utoa@buf),fsr2l
  3992  000ADC  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3993  000AE0  C00D  FFDA         	movff	(c:utoa@c),indf2
  3994  000AE4  C014  FFDF         
  3995                           	
  3996                           l1580:
  3997  000AE8                     	decf	((c:utoa@buf)),c
  3998  000AE8  060C               	btfss	status,0
  3999  000AEA  A0D8               	decf	((c:utoa@buf+1)),c
  4000  000AEC  060D               	line	35
  4001                           	
  4002                           l1582:
  4003  000AEE                     	movf	((c:utoa@val)),c,w
  4004  000AEE  500E               iorwf	((c:utoa@val+1)),c,w
  4005  000AF0  100F               	btfss	status,2
  4006  000AF2  A4D8               	goto	u951
  4007  000AF4  EF7E  F005         	goto	u950
  4008  000AF8  EF80  F005         
  4009                           u951:
  4010  000AFC                     	goto	l1570
  4011  000AFC  EF48  F005         u950:
  4012  000B00                     	goto	l1584
  4013  000B00  EF82  F005         	
  4014                           l883:
  4015  000B04                     	line	36
  4016                           	
  4017                           l1584:
  4018  000B04                     ;	Return value of _utoa is never used
  4019                           	infsnz	((c:utoa@buf)),c
  4020  000B04  4A0C               	incf	((c:utoa@buf+1)),c
  4021  000B06  2A0D               	goto	l884
  4022  000B08  EF86  F005         	
  4023                           l1586:
  4024  000B0C                     	line	37
  4025                           	
  4026                           l884:
  4027  000B0C                     	return	;funcret
  4028  000B0C  0012               	opt stack 0
  4029                           GLOBAL	__end_of_utoa
  4030                           	__end_of_utoa:
  4031  000B0E                     	signat	_utoa,12410
  4032                           	global	___lwmod
  4033                           
  4034 ;; *************** function ___lwmod *****************
  4035 ;; Defined at:
  4036 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  dividend        2    4[COMRAM] unsigned int 
  4039 ;;  divisor         2    6[COMRAM] unsigned int 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  counter         1    8[COMRAM] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2    4[COMRAM] unsigned int 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0
  4051 ;;      Params:         4       0
  4052 ;;      Locals:         1       0
  4053 ;;      Temps:          0       0
  4054 ;;      Totals:         5       0
  4055 ;;Total ram usage:        5 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_utoa
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           psect	text8,class=CODE,space=0,reloc=2,group=1
  4065                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4066                           	line	7
  4067                           global __ptext8
  4068                           __ptext8:
  4069  000E4A                     psect	text8
  4070                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4071                           	line	7
  4072                           	global	__size_of___lwmod
  4073                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4074  0000                     	
  4075                           ___lwmod:
  4076  000E4A                     ;incstack = 0
  4077                           	opt	stack 26
  4078                           	line	12
  4079                           	
  4080                           l1536:
  4081  000E4A                     	movf	((c:___lwmod@divisor)),c,w
  4082  000E4A  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  4083  000E4C  1008               	btfsc	status,2
  4084  000E4E  B4D8               	goto	u891
  4085  000E50  EF2C  F007         	goto	u890
  4086  000E54  EF2E  F007         
  4087                           u891:
  4088  000E58                     	goto	l700
  4089  000E58  EF5C  F007         u890:
  4090  000E5C                     	line	13
  4091                           	
  4092                           l1538:
  4093  000E5C                     	movlw	low(01h)
  4094  000E5C  0E01               	movwf	((c:___lwmod@counter)),c
  4095  000E5E  6E09               	line	14
  4096                           	goto	l1542
  4097  000E60  EF38  F007         	
  4098                           l702:
  4099  000E64                     	line	15
  4100                           	
  4101                           l1540:
  4102  000E64                     	bcf	status,0
  4103  000E64  90D8               	rlcf	((c:___lwmod@divisor)),c
  4104  000E66  3607               	rlcf	((c:___lwmod@divisor+1)),c
  4105  000E68  3608               	line	16
  4106                           	incf	((c:___lwmod@counter)),c
  4107  000E6A  2A09               	goto	l1542
  4108  000E6C  EF38  F007         	line	17
  4109                           	
  4110                           l701:
  4111  000E70                     	line	14
  4112                           	
  4113                           l1542:
  4114  000E70                     	
  4115                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  4116  000E70  AE08               	goto	u901
  4117  000E72  EF3D  F007         	goto	u900
  4118  000E76  EF3F  F007         u901:
  4119  000E7A                     	goto	l1540
  4120  000E7A  EF32  F007         u900:
  4121  000E7E                     	goto	l1544
  4122  000E7E  EF43  F007         	
  4123                           l703:
  4124  000E82                     	goto	l1544
  4125  000E82  EF43  F007         	line	18
  4126                           	
  4127                           l704:
  4128  000E86                     	line	19
  4129                           	
  4130                           l1544:
  4131  000E86                     		movf	((c:___lwmod@divisor)),c,w
  4132  000E86  5007               	subwf	((c:___lwmod@dividend)),c,w
  4133  000E88  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  4134  000E8A  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  4135  000E8C  5806               	btfss	status,0
  4136  000E8E  A0D8               	goto	u911
  4137  000E90  EF4C  F007         	goto	u910
  4138  000E94  EF4E  F007         
  4139                           u911:
  4140  000E98                     	goto	l1548
  4141  000E98  EF54  F007         u910:
  4142  000E9C                     	line	20
  4143                           	
  4144                           l1546:
  4145  000E9C                     	movf	((c:___lwmod@divisor)),c,w
  4146  000E9C  5007               	subwf	((c:___lwmod@dividend)),c
  4147  000E9E  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  4148  000EA0  5008               	subwfb	((c:___lwmod@dividend+1)),c
  4149  000EA2  5A06               
  4150                           	goto	l1548
  4151  000EA4  EF54  F007         	
  4152                           l705:
  4153  000EA8                     	line	21
  4154                           	
  4155                           l1548:
  4156  000EA8                     	bcf	status,0
  4157  000EA8  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  4158  000EAA  3208               	rrcf	((c:___lwmod@divisor)),c
  4159  000EAC  3207               	line	22
  4160                           	
  4161                           l1550:
  4162  000EAE                     	decfsz	((c:___lwmod@counter)),c
  4163  000EAE  2E09               	
  4164                           	goto	l1544
  4165  000EB0  EF43  F007         	goto	l700
  4166  000EB4  EF5C  F007         	
  4167                           l706:
  4168  000EB8                     	line	23
  4169                           	
  4170                           l700:
  4171  000EB8                     	line	24
  4172                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  4173  000EB8  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  4174  000EBC  C006  F006         	line	25
  4175                           	
  4176                           l707:
  4177  000EC0                     	return	;funcret
  4178  000EC0  0012               	opt stack 0
  4179                           GLOBAL	__end_of___lwmod
  4180                           	__end_of___lwmod:
  4181  000EC2                     	signat	___lwmod,8314
  4182                           	global	___lwdiv
  4183                           
  4184 ;; *************** function ___lwdiv *****************
  4185 ;; Defined at:
  4186 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  dividend        2    4[COMRAM] unsigned int 
  4189 ;;  divisor         2    6[COMRAM] unsigned int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  quotient        2    8[COMRAM] unsigned int 
  4192 ;;  counter         1   10[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    4[COMRAM] unsigned int 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0
  4202 ;;      Params:         4       0
  4203 ;;      Locals:         3       0
  4204 ;;      Temps:          0       0
  4205 ;;      Totals:         7       0
  4206 ;;Total ram usage:        7 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_utoa
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           psect	text9,class=CODE,space=0,reloc=2,group=1
  4216                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4217                           	line	7
  4218                           global __ptext9
  4219                           __ptext9:
  4220  000DC2                     psect	text9
  4221                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4222                           	line	7
  4223                           	global	__size_of___lwdiv
  4224                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4225  0000                     	
  4226                           ___lwdiv:
  4227  000DC2                     ;incstack = 0
  4228                           	opt	stack 26
  4229                           	line	13
  4230                           	
  4231                           l1514:
  4232  000DC2                     	movlw	high(0)
  4233  000DC2  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  4234  000DC4  6E0A               	movlw	low(0)
  4235  000DC6  0E00               	movwf	((c:___lwdiv@quotient)),c
  4236  000DC8  6E09               	line	14
  4237                           	
  4238                           l1516:
  4239  000DCA                     	movf	((c:___lwdiv@divisor)),c,w
  4240  000DCA  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  4241  000DCC  1008               	btfsc	status,2
  4242  000DCE  B4D8               	goto	u861
  4243  000DD0  EFEC  F006         	goto	u860
  4244  000DD4  EFEE  F006         
  4245                           u861:
  4246  000DD8                     	goto	l690
  4247  000DD8  EF20  F007         u860:
  4248  000DDC                     	line	15
  4249                           	
  4250                           l1518:
  4251  000DDC                     	movlw	low(01h)
  4252  000DDC  0E01               	movwf	((c:___lwdiv@counter)),c
  4253  000DDE  6E0B               	line	16
  4254                           	goto	l1522
  4255  000DE0  EFF8  F006         	
  4256                           l692:
  4257  000DE4                     	line	17
  4258                           	
  4259                           l1520:
  4260  000DE4                     	bcf	status,0
  4261  000DE4  90D8               	rlcf	((c:___lwdiv@divisor)),c
  4262  000DE6  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  4263  000DE8  3608               	line	18
  4264                           	incf	((c:___lwdiv@counter)),c
  4265  000DEA  2A0B               	goto	l1522
  4266  000DEC  EFF8  F006         	line	19
  4267                           	
  4268                           l691:
  4269  000DF0                     	line	16
  4270                           	
  4271                           l1522:
  4272  000DF0                     	
  4273                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  4274  000DF0  AE08               	goto	u871
  4275  000DF2  EFFD  F006         	goto	u870
  4276  000DF6  EFFF  F006         u871:
  4277  000DFA                     	goto	l1520
  4278  000DFA  EFF2  F006         u870:
  4279  000DFE                     	goto	l1524
  4280  000DFE  EF03  F007         	
  4281                           l693:
  4282  000E02                     	goto	l1524
  4283  000E02  EF03  F007         	line	20
  4284                           	
  4285                           l694:
  4286  000E06                     	line	21
  4287                           	
  4288                           l1524:
  4289  000E06                     	bcf	status,0
  4290  000E06  90D8               	rlcf	((c:___lwdiv@quotient)),c
  4291  000E08  3609               	rlcf	((c:___lwdiv@quotient+1)),c
  4292  000E0A  360A               	line	22
  4293                           	
  4294                           l1526:
  4295  000E0C                     		movf	((c:___lwdiv@divisor)),c,w
  4296  000E0C  5007               	subwf	((c:___lwdiv@dividend)),c,w
  4297  000E0E  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  4298  000E10  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  4299  000E12  5806               	btfss	status,0
  4300  000E14  A0D8               	goto	u881
  4301  000E16  EF0F  F007         	goto	u880
  4302  000E1A  EF11  F007         
  4303                           u881:
  4304  000E1E                     	goto	l1532
  4305  000E1E  EF18  F007         u880:
  4306  000E22                     	line	23
  4307                           	
  4308                           l1528:
  4309  000E22                     	movf	((c:___lwdiv@divisor)),c,w
  4310  000E22  5007               	subwf	((c:___lwdiv@dividend)),c
  4311  000E24  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  4312  000E26  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  4313  000E28  5A06               
  4314                           	line	24
  4315                           	
  4316                           l1530:
  4317  000E2A                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  4318  000E2A  8009               	goto	l1532
  4319  000E2C  EF18  F007         	line	25
  4320                           	
  4321                           l695:
  4322  000E30                     	line	26
  4323                           	
  4324                           l1532:
  4325  000E30                     	bcf	status,0
  4326  000E30  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  4327  000E32  3208               	rrcf	((c:___lwdiv@divisor)),c
  4328  000E34  3207               	line	27
  4329                           	
  4330                           l1534:
  4331  000E36                     	decfsz	((c:___lwdiv@counter)),c
  4332  000E36  2E0B               	
  4333                           	goto	l1524
  4334  000E38  EF03  F007         	goto	l690
  4335  000E3C  EF20  F007         	
  4336                           l696:
  4337  000E40                     	line	28
  4338                           	
  4339                           l690:
  4340  000E40                     	line	29
  4341                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  4342  000E40  C009  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  4343  000E44  C00A  F006         	line	30
  4344                           	
  4345                           l697:
  4346  000E48                     	return	;funcret
  4347  000E48  0012               	opt stack 0
  4348                           GLOBAL	__end_of___lwdiv
  4349                           	__end_of___lwdiv:
  4350  000E4A                     	signat	___lwdiv,8314
  4351                           	global	___lmul
  4352                           
  4353 ;; *************** function ___lmul *****************
  4354 ;; Defined at:
  4355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  multiplier      4    4[COMRAM] unsigned long 
  4358 ;;  multiplicand    4    8[COMRAM] unsigned long 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  product         4   12[COMRAM] unsigned long 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  4    4[COMRAM] unsigned long 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0
  4370 ;;      Params:         8       0
  4371 ;;      Locals:         4       0
  4372 ;;      Temps:          0       0
  4373 ;;      Totals:        12       0
  4374 ;;Total ram usage:       12 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_send_Status
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           psect	text10,class=CODE,space=0,reloc=2,group=1
  4384                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4385                           	line	15
  4386                           global __ptext10
  4387                           __ptext10:
  4388  000EC2                     psect	text10
  4389                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4390                           	line	15
  4391                           	global	__size_of___lmul
  4392                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  4393  0000                     	
  4394                           ___lmul:
  4395  000EC2                     ;incstack = 0
  4396                           	opt	stack 28
  4397                           	line	119
  4398                           	
  4399                           l1632:
  4400  000EC2                     	movlw	low(0)
  4401  000EC2  0E00               	movwf	((c:___lmul@product)),c
  4402  000EC4  6E0D               	movlw	high(0)
  4403  000EC6  0E00               	movwf	((c:___lmul@product+1)),c
  4404  000EC8  6E0E               	movlw	low highword(0)
  4405  000ECA  0E00               	movwf	((c:___lmul@product+2)),c
  4406  000ECC  6E0F               	movlw	high highword(0)
  4407  000ECE  0E00               	movwf	((c:___lmul@product+3)),c
  4408  000ED0  6E10               	goto	l1634
  4409  000ED2  EF6B  F007         	line	120
  4410                           	
  4411                           l220:
  4412  000ED6                     	line	121
  4413                           	
  4414                           l1634:
  4415  000ED6                     	
  4416                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  4417  000ED6  A005               	goto	u1021
  4418  000ED8  EF70  F007         	goto	u1020
  4419  000EDC  EF72  F007         u1021:
  4420  000EE0                     	goto	l1638
  4421  000EE0  EF7C  F007         u1020:
  4422  000EE4                     	line	122
  4423                           	
  4424                           l1636:
  4425  000EE4                     	movf	((c:___lmul@multiplicand)),c,w
  4426  000EE4  5009               	addwf	((c:___lmul@product)),c
  4427  000EE6  260D               	movf	((c:___lmul@multiplicand+1)),c,w
  4428  000EE8  500A               	addwfc	((c:___lmul@product+1)),c
  4429  000EEA  220E               	movf	((c:___lmul@multiplicand+2)),c,w
  4430  000EEC  500B               	addwfc	((c:___lmul@product+2)),c
  4431  000EEE  220F               	movf	((c:___lmul@multiplicand+3)),c,w
  4432  000EF0  500C               	addwfc	((c:___lmul@product+3)),c
  4433  000EF2  2210               	goto	l1638
  4434  000EF4  EF7C  F007         	
  4435                           l221:
  4436  000EF8                     	line	123
  4437                           	
  4438                           l1638:
  4439  000EF8                     	bcf	status,0
  4440  000EF8  90D8               	rlcf	((c:___lmul@multiplicand)),c
  4441  000EFA  3609               	rlcf	((c:___lmul@multiplicand+1)),c
  4442  000EFC  360A               	rlcf	((c:___lmul@multiplicand+2)),c
  4443  000EFE  360B               	rlcf	((c:___lmul@multiplicand+3)),c
  4444  000F00  360C               	line	124
  4445                           	
  4446                           l1640:
  4447  000F02                     	bcf	status,0
  4448  000F02  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  4449  000F04  3208               	rrcf	((c:___lmul@multiplier+2)),c
  4450  000F06  3207               	rrcf	((c:___lmul@multiplier+1)),c
  4451  000F08  3206               	rrcf	((c:___lmul@multiplier)),c
  4452  000F0A  3205               	line	125
  4453                           	movf	((c:___lmul@multiplier)),c,w
  4454  000F0C  5005               iorwf	((c:___lmul@multiplier+1)),c,w
  4455  000F0E  1006               iorwf	((c:___lmul@multiplier+2)),c,w
  4456  000F10  1007               iorwf	((c:___lmul@multiplier+3)),c,w
  4457  000F12  1008               	btfss	status,2
  4458  000F14  A4D8               	goto	u1031
  4459  000F16  EF8F  F007         	goto	u1030
  4460  000F1A  EF91  F007         
  4461                           u1031:
  4462  000F1E                     	goto	l1634
  4463  000F1E  EF6B  F007         u1030:
  4464  000F22                     	
  4465                           l222:
  4466  000F22                     	line	128
  4467                           	movff	(c:___lmul@product),(c:?___lmul)
  4468  000F22  C00D  F005         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  4469  000F26  C00E  F006         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  4470  000F2A  C00F  F007         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  4471  000F2E  C010  F008         	line	129
  4472                           	
  4473                           l223:
  4474  000F32                     	return	;funcret
  4475  000F32  0012               	opt stack 0
  4476                           GLOBAL	__end_of___lmul
  4477                           	__end_of___lmul:
  4478  000F34                     	signat	___lmul,8316
  4479                           	global	___lldiv
  4480                           
  4481 ;; *************** function ___lldiv *****************
  4482 ;; Defined at:
  4483 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  dividend        4    4[COMRAM] unsigned long 
  4486 ;;  divisor         4    8[COMRAM] unsigned long 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  quotient        4   12[COMRAM] unsigned long 
  4489 ;;  counter         1   16[COMRAM] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  4    4[COMRAM] unsigned long 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0
  4499 ;;      Params:         8       0
  4500 ;;      Locals:         5       0
  4501 ;;      Temps:          0       0
  4502 ;;      Totals:        13       0
  4503 ;;Total ram usage:       13 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_send_Status
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           psect	text11,class=CODE,space=0,reloc=2,group=1
  4513                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4514                           	line	7
  4515                           global __ptext11
  4516                           __ptext11:
  4517  000C80                     psect	text11
  4518                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4519                           	line	7
  4520                           	global	__size_of___lldiv
  4521                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4522  0000                     	
  4523                           ___lldiv:
  4524  000C80                     ;incstack = 0
  4525                           	opt	stack 28
  4526                           	line	13
  4527                           	
  4528                           l1642:
  4529  000C80                     	movlw	low(0)
  4530  000C80  0E00               	movwf	((c:___lldiv@quotient)),c
  4531  000C82  6E0D               	movlw	high(0)
  4532  000C84  0E00               	movwf	((c:___lldiv@quotient+1)),c
  4533  000C86  6E0E               	movlw	low highword(0)
  4534  000C88  0E00               	movwf	((c:___lldiv@quotient+2)),c
  4535  000C8A  6E0F               	movlw	high highword(0)
  4536  000C8C  0E00               	movwf	((c:___lldiv@quotient+3)),c
  4537  000C8E  6E10               	line	14
  4538                           	
  4539                           l1644:
  4540  000C90                     	movf	((c:___lldiv@divisor)),c,w
  4541  000C90  5009               iorwf	((c:___lldiv@divisor+1)),c,w
  4542  000C92  100A               iorwf	((c:___lldiv@divisor+2)),c,w
  4543  000C94  100B               iorwf	((c:___lldiv@divisor+3)),c,w
  4544  000C96  100C               	btfsc	status,2
  4545  000C98  B4D8               	goto	u1041
  4546  000C9A  EF51  F006         	goto	u1040
  4547  000C9E  EF53  F006         
  4548                           u1041:
  4549  000CA2                     	goto	l238
  4550  000CA2  EF93  F006         u1040:
  4551  000CA6                     	line	15
  4552                           	
  4553                           l1646:
  4554  000CA6                     	movlw	low(01h)
  4555  000CA6  0E01               	movwf	((c:___lldiv@counter)),c
  4556  000CA8  6E11               	line	16
  4557                           	goto	l1650
  4558  000CAA  EF5F  F006         	
  4559                           l240:
  4560  000CAE                     	line	17
  4561                           	
  4562                           l1648:
  4563  000CAE                     	bcf	status,0
  4564  000CAE  90D8               	rlcf	((c:___lldiv@divisor)),c
  4565  000CB0  3609               	rlcf	((c:___lldiv@divisor+1)),c
  4566  000CB2  360A               	rlcf	((c:___lldiv@divisor+2)),c
  4567  000CB4  360B               	rlcf	((c:___lldiv@divisor+3)),c
  4568  000CB6  360C               	line	18
  4569                           	incf	((c:___lldiv@counter)),c
  4570  000CB8  2A11               	goto	l1650
  4571  000CBA  EF5F  F006         	line	19
  4572                           	
  4573                           l239:
  4574  000CBE                     	line	16
  4575                           	
  4576                           l1650:
  4577  000CBE                     	
  4578                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  4579  000CBE  AE0C               	goto	u1051
  4580  000CC0  EF64  F006         	goto	u1050
  4581  000CC4  EF66  F006         u1051:
  4582  000CC8                     	goto	l1648
  4583  000CC8  EF57  F006         u1050:
  4584  000CCC                     	goto	l1652
  4585  000CCC  EF6A  F006         	
  4586                           l241:
  4587  000CD0                     	goto	l1652
  4588  000CD0  EF6A  F006         	line	20
  4589                           	
  4590                           l242:
  4591  000CD4                     	line	21
  4592                           	
  4593                           l1652:
  4594  000CD4                     	bcf	status,0
  4595  000CD4  90D8               	rlcf	((c:___lldiv@quotient)),c
  4596  000CD6  360D               	rlcf	((c:___lldiv@quotient+1)),c
  4597  000CD8  360E               	rlcf	((c:___lldiv@quotient+2)),c
  4598  000CDA  360F               	rlcf	((c:___lldiv@quotient+3)),c
  4599  000CDC  3610               	line	22
  4600                           	
  4601                           l1654:
  4602  000CDE                     		movf	((c:___lldiv@divisor)),c,w
  4603  000CDE  5009               	subwf	((c:___lldiv@dividend)),c,w
  4604  000CE0  5C05               	movf	((c:___lldiv@divisor+1)),c,w
  4605  000CE2  500A               	subwfb	((c:___lldiv@dividend+1)),c,w
  4606  000CE4  5806               	movf	((c:___lldiv@divisor+2)),c,w
  4607  000CE6  500B               	subwfb	((c:___lldiv@dividend+2)),c,w
  4608  000CE8  5807               	movf	((c:___lldiv@divisor+3)),c,w
  4609  000CEA  500C               	subwfb	((c:___lldiv@dividend+3)),c,w
  4610  000CEC  5808               	btfss	status,0
  4611  000CEE  A0D8               	goto	u1061
  4612  000CF0  EF7C  F006         	goto	u1060
  4613  000CF4  EF7E  F006         
  4614                           u1061:
  4615  000CF8                     	goto	l1660
  4616  000CF8  EF89  F006         u1060:
  4617  000CFC                     	line	23
  4618                           	
  4619                           l1656:
  4620  000CFC                     	movf	((c:___lldiv@divisor)),c,w
  4621  000CFC  5009               	subwf	((c:___lldiv@dividend)),c
  4622  000CFE  5E05               	movf	((c:___lldiv@divisor+1)),c,w
  4623  000D00  500A               	subwfb	((c:___lldiv@dividend+1)),c
  4624  000D02  5A06               	movf	((c:___lldiv@divisor+2)),c,w
  4625  000D04  500B               	subwfb	((c:___lldiv@dividend+2)),c
  4626  000D06  5A07               	movf	((c:___lldiv@divisor+3)),c,w
  4627  000D08  500C               	subwfb	((c:___lldiv@dividend+3)),c
  4628  000D0A  5A08               	line	24
  4629                           	
  4630                           l1658:
  4631  000D0C                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  4632  000D0C  800D               	goto	l1660
  4633  000D0E  EF89  F006         	line	25
  4634                           	
  4635                           l243:
  4636  000D12                     	line	26
  4637                           	
  4638                           l1660:
  4639  000D12                     	bcf	status,0
  4640  000D12  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  4641  000D14  320C               	rrcf	((c:___lldiv@divisor+2)),c
  4642  000D16  320B               	rrcf	((c:___lldiv@divisor+1)),c
  4643  000D18  320A               	rrcf	((c:___lldiv@divisor)),c
  4644  000D1A  3209               	line	27
  4645                           	
  4646                           l1662:
  4647  000D1C                     	decfsz	((c:___lldiv@counter)),c
  4648  000D1C  2E11               	
  4649                           	goto	l1652
  4650  000D1E  EF6A  F006         	goto	l238
  4651  000D22  EF93  F006         	
  4652                           l244:
  4653  000D26                     	line	28
  4654                           	
  4655                           l238:
  4656  000D26                     	line	29
  4657                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  4658  000D26  C00D  F005         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  4659  000D2A  C00E  F006         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  4660  000D2E  C00F  F007         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  4661  000D32  C010  F008         	line	30
  4662                           	
  4663                           l245:
  4664  000D36                     	return	;funcret
  4665  000D36  0012               	opt stack 0
  4666                           GLOBAL	__end_of___lldiv
  4667                           	__end_of___lldiv:
  4668  000D38                     	signat	___lldiv,8316
  4669                           	global	_UART_Write_Text
  4670                           
  4671 ;; *************** function _UART_Write_Text *****************
  4672 ;; Defined at:
  4673 ;;		line 53 in file "uart.h"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  text            2    5[COMRAM] PTR unsigned char 
  4676 ;;		 -> STR_30(13), STR_13(15), STR_12(14), STR_11(14), 
  4677 ;;		 -> STR_10(4), STR_9(3), STR_8(5), STR_7(4), 
  4678 ;;		 -> STR_6(4), STR_5(4), STR_4(5), STR_3(4), 
  4679 ;;		 -> STR_2(6), STR_1(5), send_Status@buffer(10), 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  i               2   10[COMRAM] int 
  4682 ;;  toSend          1    9[COMRAM] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0
  4692 ;;      Params:         2       0
  4693 ;;      Locals:         3       0
  4694 ;;      Temps:          2       0
  4695 ;;      Totals:         7       0
  4696 ;;Total ram usage:        7 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    2
  4699 ;; This function calls:
  4700 ;;		_UART_Write_byte
  4701 ;; This function is called by:
  4702 ;;		_send_Status
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4707                           	file	"uart.h"
  4708                           	line	53
  4709                           global __ptext12
  4710                           __ptext12:
  4711  000D38                     psect	text12
  4712                           	file	"uart.h"
  4713                           	line	53
  4714                           	global	__size_of_UART_Write_Text
  4715                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  4716  0000                     	
  4717                           _UART_Write_Text:
  4718  000D38                     ;incstack = 0
  4719                           	opt	stack 27
  4720                           	line	55
  4721                           	
  4722                           l1602:
  4723  000D38                     ;uart.h: 54: unsigned char toSend;;uart.h: 55: for (int i = 0; text[i] != '\0'; i++){
  4724                           	movlw	high(0)
  4725  000D38  0E00               	movwf	((c:UART_Write_Text@i+1)),c
  4726  000D3A  6E0C               	movlw	low(0)
  4727  000D3C  0E00               	movwf	((c:UART_Write_Text@i)),c
  4728  000D3E  6E0B               	goto	l1610
  4729  000D40  EFC0  F006         	
  4730                           l133:
  4731  000D44                     	line	56
  4732                           	
  4733                           l1604:
  4734  000D44                     ;uart.h: 56: toSend = text[i];
  4735                           	movf	((c:UART_Write_Text@i)),c,w
  4736  000D44  500B               	addwf	((c:UART_Write_Text@text)),c,w
  4737  000D46  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  4738  000D48  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  4739  000D4A  500C               	addwfc	((c:UART_Write_Text@text+1)),c,w
  4740  000D4C  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  4741  000D4E  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  4742  000D50  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  4743  000D54  C009  FFF7         	clrf	tblptru
  4744  000D58  6AF8               	
  4745                           	movlw	high __ramtop-1
  4746  000D5A  0E00               	cpfsgt	tblptrh
  4747  000D5C  64F7               	bra	u977
  4748  000D5E  D003               	tblrd	*
  4749  000D60  0008               	
  4750                           	movf	tablat,w
  4751  000D62  50F5               	bra	u970
  4752  000D64  D005               u977:
  4753  000D66                     	movff	tblptrl,fsr2l
  4754  000D66  CFF6 FFD9          	movff	tblptrh,fsr2h
  4755  000D6A  CFF7 FFDA          	movf	indf2,w
  4756  000D6E  50DF               u970:
  4757  000D70                     	movwf	((c:UART_Write_Text@toSend)),c
  4758  000D70  6E0A               	line	57
  4759                           	
  4760                           l1606:
  4761  000D72                     ;uart.h: 57: UART_Write_byte(toSend);
  4762                           	movf	((c:UART_Write_Text@toSend)),c,w
  4763  000D72  500A               	
  4764                           	call	_UART_Write_byte
  4765  000D74  ECDA  F008         	line	55
  4766                           	
  4767                           l1608:
  4768  000D78                     	infsnz	((c:UART_Write_Text@i)),c
  4769  000D78  4A0B               	incf	((c:UART_Write_Text@i+1)),c
  4770  000D7A  2A0C               	goto	l1610
  4771  000D7C  EFC0  F006         	
  4772                           l132:
  4773  000D80                     	
  4774                           l1610:
  4775  000D80                     	movf	((c:UART_Write_Text@i)),c,w
  4776  000D80  500B               	addwf	((c:UART_Write_Text@text)),c,w
  4777  000D82  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  4778  000D84  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  4779  000D86  500C               	addwfc	((c:UART_Write_Text@text+1)),c,w
  4780  000D88  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  4781  000D8A  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  4782  000D8C  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  4783  000D90  C009  FFF7         	clrf	tblptru
  4784  000D94  6AF8               	
  4785                           	movlw	high __ramtop-1
  4786  000D96  0E00               	cpfsgt	tblptrh
  4787  000D98  64F7               	bra	u987
  4788  000D9A  D003               	tblrd	*
  4789  000D9C  0008               	
  4790                           	movf	tablat,w
  4791  000D9E  50F5               	bra	u980
  4792  000DA0  D005               u987:
  4793  000DA2                     	movff	tblptrl,fsr2l
  4794  000DA2  CFF6 FFD9          	movff	tblptrh,fsr2h
  4795  000DA6  CFF7 FFDA          	movf	indf2,w
  4796  000DAA  50DF               u980:
  4797  000DAC                     	iorlw	0
  4798  000DAC  0900               	btfss	status,2
  4799  000DAE  A4D8               	goto	u991
  4800  000DB0  EFDC  F006         	goto	u990
  4801  000DB4  EFDE  F006         u991:
  4802  000DB8                     	goto	l1604
  4803  000DB8  EFA2  F006         u990:
  4804  000DBC                     	goto	l135
  4805  000DBC  EFE0  F006         	
  4806                           l134:
  4807  000DC0                     	line	59
  4808                           	
  4809                           l135:
  4810  000DC0                     	return	;funcret
  4811  000DC0  0012               	opt stack 0
  4812                           GLOBAL	__end_of_UART_Write_Text
  4813                           	__end_of_UART_Write_Text:
  4814  000DC2                     	signat	_UART_Write_Text,4217
  4815                           	global	_UART_Write_byte
  4816                           
  4817 ;; *************** function _UART_Write_byte *****************
  4818 ;; Defined at:
  4819 ;;		line 48 in file "uart.h"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  data            1    wreg     unsigned char 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  data            1    4[COMRAM] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0
  4833 ;;      Params:         0       0
  4834 ;;      Locals:         1       0
  4835 ;;      Temps:          0       0
  4836 ;;      Totals:         1       0
  4837 ;;Total ram usage:        1 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_UART_Write_Text
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4847                           	line	48
  4848                           global __ptext13
  4849                           __ptext13:
  4850  0011B4                     psect	text13
  4851                           	file	"uart.h"
  4852                           	line	48
  4853                           	global	__size_of_UART_Write_byte
  4854                           	__size_of_UART_Write_byte	equ	__end_of_UART_Write_byte-_UART_Write_byte
  4855  0000                     	
  4856                           _UART_Write_byte:
  4857  0011B4                     ;incstack = 0
  4858                           	opt	stack 27
  4859                           ;UART_Write_byte@data stored from wreg
  4860                           	movwf	((c:UART_Write_byte@data)),c
  4861  0011B4  6E05               	line	49
  4862                           	
  4863                           l1056:
  4864  0011B6                     ;uart.h: 49: while (!TRMT);
  4865                           	goto	l126
  4866  0011B6  EFDD  F008         	
  4867                           l127:
  4868  0011BA                     	
  4869                           l126:
  4870  0011BA                     	btfss	c:(32097/8),(32097)&7	;volatile
  4871  0011BA  A2AC               	goto	u81
  4872  0011BC  EFE2  F008         	goto	u80
  4873  0011C0  EFE4  F008         u81:
  4874  0011C4                     	goto	l126
  4875  0011C4  EFDD  F008         u80:
  4876  0011C8                     	goto	l1058
  4877  0011C8  EFE6  F008         	
  4878                           l128:
  4879  0011CC                     	line	50
  4880                           	
  4881                           l1058:
  4882  0011CC                     ;uart.h: 50: TXREG = data;
  4883                           	movff	(c:UART_Write_byte@data),(c:4013)	;volatile
  4884  0011CC  C005  FFAD         	line	51
  4885                           	
  4886                           l129:
  4887  0011D0                     	return	;funcret
  4888  0011D0  0012               	opt stack 0
  4889                           GLOBAL	__end_of_UART_Write_byte
  4890                           	__end_of_UART_Write_byte:
  4891  0011D2                     	signat	_UART_Write_byte,4217
  4892                           	global	_ADC_Get
  4893                           
  4894 ;; *************** function _ADC_Get *****************
  4895 ;; Defined at:
  4896 ;;		line 37 in file "adc.h"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  advalue         2   11[COMRAM] unsigned int 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    7[COMRAM] unsigned int 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0
  4910 ;;      Params:         2       0
  4911 ;;      Locals:         2       0
  4912 ;;      Temps:          2       0
  4913 ;;      Totals:         6       0
  4914 ;;Total ram usage:        6 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    2
  4917 ;; This function calls:
  4918 ;;		_delay_ms
  4919 ;; This function is called by:
  4920 ;;		_send_Status
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4924                           	file	"adc.h"
  4925                           	line	37
  4926                           global __ptext14
  4927                           __ptext14:
  4928  001036                     psect	text14
  4929                           	file	"adc.h"
  4930                           	line	37
  4931                           	global	__size_of_ADC_Get
  4932                           	__size_of_ADC_Get	equ	__end_of_ADC_Get-_ADC_Get
  4933  0000                     	
  4934                           _ADC_Get:
  4935  001036                     ;incstack = 0
  4936                           	opt	stack 27
  4937                           	line	38
  4938                           	
  4939                           l1588:
  4940  001036                     ;adc.h: 38: ADCON0bits.ADON = 0b1;
  4941                           	bsf	((c:4034)),c,0	;volatile
  4942  001036  80C2               	line	39
  4943                           	
  4944                           l1590:
  4945  001038                     ;adc.h: 39: delay_ms(10);
  4946                           	movlw	high(0Ah)
  4947  001038  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  4948  00103A  6E06               	movlw	low(0Ah)
  4949  00103C  0E0A               	movwf	((c:delay_ms@repeat_2)),c
  4950  00103E  6E05               	call	_delay_ms	;wreg free
  4951  001040  EC5F  F008         	line	40
  4952                           	
  4953                           l1592:
  4954  001044                     ;adc.h: 40: ADCON0bits.GO_DONE = 1;
  4955                           	bsf	((c:4034)),c,1	;volatile
  4956  001044  82C2               	line	41
  4957                           ;adc.h: 41: while(ADCON0bits.GO_DONE == 1);
  4958                           	goto	l86
  4959  001046  EF25  F008         	
  4960                           l87:
  4961  00104A                     	
  4962                           l86:
  4963  00104A                     	btfsc	((c:4034)),c,1	;volatile
  4964  00104A  B2C2               	goto	u961
  4965  00104C  EF2A  F008         	goto	u960
  4966  001050  EF2C  F008         u961:
  4967  001054                     	goto	l86
  4968  001054  EF25  F008         u960:
  4969  001058                     	goto	l1594
  4970  001058  EF2E  F008         	
  4971                           l88:
  4972  00105C                     	line	42
  4973                           	
  4974                           l1594:
  4975  00105C                     ;adc.h: 42: unsigned int advalue = (unsigned int)(((unsigned char)ADRESH << 8) + (unsign
                                 ed char)ADRESL);
  4976                           	movf	((c:4036)),c,w	;volatile
  4977  00105C  50C4               	movwf	(??_ADC_Get+0+0+1)&0ffh,c
  4978  00105E  6E0B               	clrf	(??_ADC_Get+0+0)&0ffh,c
  4979  001060  6A0A               	movf	((c:4035)),c,w	;volatile
  4980  001062  50C3               	addwf	(??_ADC_Get+0+0),c,w
  4981  001064  240A               	movwf	((c:ADC_Get@advalue)),c
  4982  001066  6E0C               	movlw	0
  4983  001068  0E00               	addwfc	(??_ADC_Get+0+1),c,w
  4984  00106A  200B               	movwf	1+((c:ADC_Get@advalue)),c
  4985  00106C  6E0D               	line	43
  4986                           	
  4987                           l1596:
  4988  00106E                     ;adc.h: 43: ADCON0bits.ADON = 0b0;
  4989                           	bcf	((c:4034)),c,0	;volatile
  4990  00106E  90C2               	line	44
  4991                           	
  4992                           l1598:
  4993  001070                     ;adc.h: 44: return advalue;
  4994                           	movff	(c:ADC_Get@advalue),(c:?_ADC_Get)
  4995  001070  C00C  F008         	movff	(c:ADC_Get@advalue+1),(c:?_ADC_Get+1)
  4996  001074  C00D  F009         	goto	l89
  4997  001078  EF3E  F008         	
  4998                           l1600:
  4999  00107C                     	line	45
  5000                           	
  5001                           l89:
  5002  00107C                     	return	;funcret
  5003  00107C  0012               	opt stack 0
  5004                           GLOBAL	__end_of_ADC_Get
  5005                           	__end_of_ADC_Get:
  5006  00107E                     	signat	_ADC_Get,90
  5007                           	global	_delay_s
  5008                           
  5009 ;; *************** function _delay_s *****************
  5010 ;; Defined at:
  5011 ;;		line 22 in file "delay.h"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  repeat_3        2    7[COMRAM] int 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0
  5025 ;;      Params:         2       0
  5026 ;;      Locals:         0       0
  5027 ;;      Temps:          0       0
  5028 ;;      Totals:         2       0
  5029 ;;Total ram usage:        2 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    2
  5032 ;; This function calls:
  5033 ;;		_delay_ms
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           psect	text15,class=CODE,space=0,reloc=2,group=0
  5039                           	file	"delay.h"
  5040                           	line	22
  5041                           global __ptext15
  5042                           __ptext15:
  5043  00112C                     psect	text15
  5044                           	file	"delay.h"
  5045                           	line	22
  5046                           	global	__size_of_delay_s
  5047                           	__size_of_delay_s	equ	__end_of_delay_s-_delay_s
  5048  0000                     	
  5049                           _delay_s:
  5050  00112C                     ;incstack = 0
  5051                           	opt	stack 28
  5052                           	line	23
  5053                           	
  5054                           l1704:
  5055  00112C                     ;delay.h: 23: while(repeat_3--){
  5056                           	goto	l1708
  5057  00112C  EFA0  F008         	
  5058                           l78:
  5059  001130                     	line	24
  5060                           	
  5061                           l1706:
  5062  001130                     ;delay.h: 24: delay_ms(1000);
  5063                           	movlw	high(03E8h)
  5064  001130  0E03               	movwf	((c:delay_ms@repeat_2+1)),c
  5065  001132  6E06               	movlw	low(03E8h)
  5066  001134  0EE8               	movwf	((c:delay_ms@repeat_2)),c
  5067  001136  6E05               	call	_delay_ms	;wreg free
  5068  001138  EC5F  F008         	goto	l1708
  5069  00113C  EFA0  F008         	line	25
  5070                           	
  5071                           l77:
  5072  001140                     	line	23
  5073                           	
  5074                           l1708:
  5075  001140                     	decf	((c:delay_s@repeat_3)),c
  5076  001140  0608               	btfss	status,0
  5077  001142  A0D8               	decf	((c:delay_s@repeat_3+1)),c
  5078  001144  0609               		incf	((c:delay_s@repeat_3)),c,w
  5079  001146  2808               	bnz	u1131
  5080  001148  E106               	incf	((c:delay_s@repeat_3+1)),c,w
  5081  00114A  2809               	btfss	status,2
  5082  00114C  A4D8               	goto	u1131
  5083  00114E  EFAB  F008         	goto	u1130
  5084  001152  EFAD  F008         
  5085                           u1131:
  5086  001156                     	goto	l1706
  5087  001156  EF98  F008         u1130:
  5088  00115A                     	goto	l80
  5089  00115A  EFAF  F008         	
  5090                           l79:
  5091  00115E                     	line	26
  5092                           	
  5093                           l80:
  5094  00115E                     	return	;funcret
  5095  00115E  0012               	opt stack 0
  5096                           GLOBAL	__end_of_delay_s
  5097                           	__end_of_delay_s:
  5098  001160                     	signat	_delay_s,4217
  5099                           	global	_delay_ms
  5100                           
  5101 ;; *************** function _delay_ms *****************
  5102 ;; Defined at:
  5103 ;;		line 16 in file "delay.h"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  repeat_2        2    4[COMRAM] int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0
  5117 ;;      Params:         2       0
  5118 ;;      Locals:         0       0
  5119 ;;      Temps:          1       0
  5120 ;;      Totals:         3       0
  5121 ;;Total ram usage:        3 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_delay_s
  5128 ;;		_ADC_Get
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           psect	text16,class=CODE,space=0,reloc=2,group=0
  5133                           	line	16
  5134                           global __ptext16
  5135                           __ptext16:
  5136  0010BE                     psect	text16
  5137                           	file	"delay.h"
  5138                           	line	16
  5139                           	global	__size_of_delay_ms
  5140                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  5141  0000                     	
  5142                           _delay_ms:
  5143  0010BE                     ;incstack = 0
  5144                           	opt	stack 27
  5145                           	line	17
  5146                           	
  5147                           l1552:
  5148  0010BE                     ;delay.h: 17: while(repeat_2--){
  5149                           	goto	l1556
  5150  0010BE  EF6B  F008         	
  5151                           l72:
  5152  0010C2                     	line	18
  5153                           	
  5154                           l1554:
  5155  0010C2                     ;delay.h: 18: _delay((unsigned long)((1)*(32000000/4000.0)));
  5156                           	opt asmopt_push
  5157                           opt asmopt_off
  5158                           movlw	11
  5159  0010C2  0E0B               movwf	(??_delay_ms+0+0)&0ffh,c,f
  5160  0010C4  6E07               	movlw	98
  5161  0010C6  0E62               u1677:
  5162  0010C8                     decfsz	wreg,f
  5163  0010C8  2EE8               	bra	u1677
  5164  0010CA  D7FE               	decfsz	(??_delay_ms+0+0)&0ffh,c,f
  5165  0010CC  2E07               	bra	u1677
  5166  0010CE  D7FC               	nop2
  5167  0010D0  D000               opt asmopt_pop
  5168                           
  5169                           	goto	l1556
  5170  0010D2  EF6B  F008         	line	19
  5171                           	
  5172                           l71:
  5173  0010D6                     	line	17
  5174                           	
  5175                           l1556:
  5176  0010D6                     	decf	((c:delay_ms@repeat_2)),c
  5177  0010D6  0605               	btfss	status,0
  5178  0010D8  A0D8               	decf	((c:delay_ms@repeat_2+1)),c
  5179  0010DA  0606               		incf	((c:delay_ms@repeat_2)),c,w
  5180  0010DC  2805               	bnz	u921
  5181  0010DE  E106               	incf	((c:delay_ms@repeat_2+1)),c,w
  5182  0010E0  2806               	btfss	status,2
  5183  0010E2  A4D8               	goto	u921
  5184  0010E4  EF76  F008         	goto	u920
  5185  0010E8  EF78  F008         
  5186                           u921:
  5187  0010EC                     	goto	l1554
  5188  0010EC  EF61  F008         u920:
  5189  0010F0                     	goto	l74
  5190  0010F0  EF7A  F008         	
  5191                           l73:
  5192  0010F4                     	line	20
  5193                           	
  5194                           l74:
  5195  0010F4                     	return	;funcret
  5196  0010F4  0012               	opt stack 0
  5197                           GLOBAL	__end_of_delay_ms
  5198                           	__end_of_delay_ms:
  5199  0010F6                     	signat	_delay_ms,4217
  5200                           	global	_UART_clean_buffer
  5201                           
  5202 ;; *************** function _UART_clean_buffer *****************
  5203 ;; Defined at:
  5204 ;;		line 61 in file "uart.h"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0
  5218 ;;      Params:         0       0
  5219 ;;      Locals:         0       0
  5220 ;;      Temps:          0       0
  5221 ;;      Totals:         0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    2
  5225 ;; This function calls:
  5226 ;;		_memset
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           psect	text17,class=CODE,space=0,reloc=2,group=0
  5232                           	file	"uart.h"
  5233                           	line	61
  5234                           global __ptext17
  5235                           __ptext17:
  5236  00118C                     psect	text17
  5237                           	file	"uart.h"
  5238                           	line	61
  5239                           	global	__size_of_UART_clean_buffer
  5240                           	__size_of_UART_clean_buffer	equ	__end_of_UART_clean_buffer-_UART_clean_buffer
  5241  0000                     	
  5242                           _UART_clean_buffer:
  5243  00118C                     ;incstack = 0
  5244                           	opt	stack 28
  5245                           	line	62
  5246                           	
  5247                           l1710:
  5248  00118C                     ;uart.h: 62: memset(UART_buffer, 45, sizeof (UART_buffer));
  5249                           		movlw	low(_UART_buffer)
  5250  00118C  0E42               	movwf	((c:memset@p1)),c
  5251  00118E  6E05               	movlw	high(_UART_buffer)
  5252  001190  0E00               	movwf	((c:memset@p1+1)),c
  5253  001192  6E06               
  5254                           	movlw	high(02Dh)
  5255  001194  0E00               	movwf	((c:memset@c+1)),c
  5256  001196  6E08               	movlw	low(02Dh)
  5257  001198  0E2D               	movwf	((c:memset@c)),c
  5258  00119A  6E07               	movlw	high(08h)
  5259  00119C  0E00               	movwf	((c:memset@n+1)),c
  5260  00119E  6E0A               	movlw	low(08h)
  5261  0011A0  0E08               	movwf	((c:memset@n)),c
  5262  0011A2  6E09               	call	_memset	;wreg free
  5263  0011A4  EC3F  F008         	line	63
  5264                           	
  5265                           l1712:
  5266  0011A8                     ;uart.h: 63: UART_Buffer_Ptr = 0;
  5267                           	movlw	low(0)
  5268  0011A8  0E00               	movwf	((c:_UART_Buffer_Ptr)),c
  5269  0011AA  6E41               	line	64
  5270                           	
  5271                           l1714:
  5272  0011AC                     ;uart.h: 64: received_char = 0;
  5273                           	movlw	low(0)
  5274  0011AC  0E00               	movwf	((c:_received_char)),c
  5275  0011AE  6E40               	line	65
  5276                           	
  5277                           l1716:
  5278  0011B0                     ;uart.h: 65: LATBbits.LATB3 = 0;
  5279                           	bcf	((c:3978)),c,3	;volatile
  5280  0011B0  968A               	line	66
  5281                           	
  5282                           l138:
  5283  0011B2                     	return	;funcret
  5284  0011B2  0012               	opt stack 0
  5285                           GLOBAL	__end_of_UART_clean_buffer
  5286                           	__end_of_UART_clean_buffer:
  5287  0011B4                     	signat	_UART_clean_buffer,89
  5288                           	global	_memset
  5289                           
  5290 ;; *************** function _memset *****************
  5291 ;; Defined at:
  5292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  p1              2    4[COMRAM] PTR void 
  5295 ;;		 -> UART_buffer(8), 
  5296 ;;  c               2    6[COMRAM] int 
  5297 ;;  n               2    8[COMRAM] unsigned int 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  p               2   10[COMRAM] PTR unsigned char 
  5300 ;;		 -> UART_buffer(8), 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  2    4[COMRAM] PTR void 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0
  5310 ;;      Params:         6       0
  5311 ;;      Locals:         2       0
  5312 ;;      Temps:          0       0
  5313 ;;      Totals:         8       0
  5314 ;;Total ram usage:        8 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_UART_clean_buffer
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           psect	text18,class=CODE,space=0,reloc=2,group=2
  5324                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5325                           	line	8
  5326                           global __ptext18
  5327                           __ptext18:
  5328  00107E                     psect	text18
  5329                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5330                           	line	8
  5331                           	global	__size_of_memset
  5332                           	__size_of_memset	equ	__end_of_memset-_memset
  5333  0000                     	
  5334                           _memset:
  5335  00107E                     ;incstack = 0
  5336                           	opt	stack 28
  5337                           	line	18
  5338                           	
  5339                           l1612:
  5340  00107E                     		movff	(c:memset@p1),(c:memset@p)
  5341  00107E  C005  F00B         	movff	(c:memset@p1+1),(c:memset@p+1)
  5342  001082  C006  F00C         
  5343                           	line	19
  5344                           	goto	l1618
  5345  001086  EF4F  F008         	
  5346                           l888:
  5347  00108A                     	line	20
  5348                           	
  5349                           l1614:
  5350  00108A                     	movff	(c:memset@p),fsr2l
  5351  00108A  C00B  FFD9         	movff	(c:memset@p+1),fsr2h
  5352  00108E  C00C  FFDA         	movff	(c:memset@c),indf2
  5353  001092  C007  FFDF         
  5354                           	
  5355                           l1616:
  5356  001096                     	infsnz	((c:memset@p)),c
  5357  001096  4A0B               	incf	((c:memset@p+1)),c
  5358  001098  2A0C               	goto	l1618
  5359  00109A  EF4F  F008         	
  5360                           l887:
  5361  00109E                     	line	19
  5362                           	
  5363                           l1618:
  5364  00109E                     	decf	((c:memset@n)),c
  5365  00109E  0609               	btfss	status,0
  5366  0010A0  A0D8               	decf	((c:memset@n+1)),c
  5367  0010A2  060A               		incf	((c:memset@n)),c,w
  5368  0010A4  2809               	bnz	u1001
  5369  0010A6  E106               	incf	((c:memset@n+1)),c,w
  5370  0010A8  280A               	btfss	status,2
  5371  0010AA  A4D8               	goto	u1001
  5372  0010AC  EF5A  F008         	goto	u1000
  5373  0010B0  EF5C  F008         
  5374                           u1001:
  5375  0010B4                     	goto	l1614
  5376  0010B4  EF45  F008         u1000:
  5377  0010B8                     	goto	l890
  5378  0010B8  EF5E  F008         	
  5379                           l889:
  5380  0010BC                     	line	22
  5381                           ;	Return value of _memset is never used
  5382                           	
  5383                           l890:
  5384  0010BC                     	return	;funcret
  5385  0010BC  0012               	opt stack 0
  5386                           GLOBAL	__end_of_memset
  5387                           	__end_of_memset:
  5388  0010BE                     	signat	_memset,12410
  5389                           	global	_UART_Init
  5390                           
  5391 ;; *************** function _UART_Init *****************
  5392 ;; Defined at:
  5393 ;;		line 27 in file "uart.h"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0
  5407 ;;      Params:         0       0
  5408 ;;      Locals:         0       0
  5409 ;;      Temps:          0       0
  5410 ;;      Totals:         0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_main
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5421                           	file	"uart.h"
  5422                           	line	27
  5423                           global __ptext19
  5424                           __ptext19:
  5425  0011D2                     psect	text19
  5426                           	file	"uart.h"
  5427                           	line	27
  5428                           	global	__size_of_UART_Init
  5429                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  5430  0000                     	
  5431                           _UART_Init:
  5432  0011D2                     ;incstack = 0
  5433                           	opt	stack 29
  5434                           	line	29
  5435                           	
  5436                           l1216:
  5437  0011D2                     ;uart.h: 29: PIE1bits.RCIE = 0b1;
  5438                           	bsf	((c:3997)),c,5	;volatile
  5439  0011D2  8A9D               	line	30
  5440                           ;uart.h: 30: INTCONbits.PEIE = 0b1;
  5441                           	bsf	((c:4082)),c,6	;volatile
  5442  0011D4  8CF2               	line	31
  5443                           ;uart.h: 31: INTCONbits.GIE = 0b1;
  5444                           	bsf	((c:4082)),c,7	;volatile
  5445  0011D6  8EF2               	line	34
  5446                           ;uart.h: 34: RCSTAbits.SPEN = 0b1;
  5447                           	bsf	((c:4011)),c,7	;volatile
  5448  0011D8  8EAB               	line	35
  5449                           ;uart.h: 35: RCSTAbits.RX9 = 0b0;
  5450                           	bcf	((c:4011)),c,6	;volatile
  5451  0011DA  9CAB               	line	36
  5452                           ;uart.h: 36: RCSTAbits.CREN = 0b1;
  5453                           	bsf	((c:4011)),c,4	;volatile
  5454  0011DC  88AB               	line	38
  5455                           ;uart.h: 38: TXSTAbits.TX9 = 0b0;
  5456                           	bcf	((c:4012)),c,6	;volatile
  5457  0011DE  9CAC               	line	39
  5458                           ;uart.h: 39: TXSTAbits.SYNC = 0b0;
  5459                           	bcf	((c:4012)),c,4	;volatile
  5460  0011E0  98AC               	line	40
  5461                           ;uart.h: 40: TXSTAbits.BRGH = 0b0;
  5462                           	bcf	((c:4012)),c,2	;volatile
  5463  0011E2  94AC               	line	41
  5464                           ;uart.h: 41: TXSTAbits.TXEN = 0b1;
  5465                           	bsf	((c:4012)),c,5	;volatile
  5466  0011E4  8AAC               	line	43
  5467                           ;uart.h: 43: BAUDCONbits.BRG16 = 0b0;
  5468                           	bcf	((c:4024)),c,3	;volatile
  5469  0011E6  96B8               	line	44
  5470                           ;uart.h: 44: BAUDCONbits.ABDEN = 0b0;
  5471                           	bcf	((c:4024)),c,0	;volatile
  5472  0011E8  90B8               	line	45
  5473                           	
  5474                           l1218:
  5475  0011EA                     ;uart.h: 45: SPBRG = 51;
  5476                           	movlw	low(033h)
  5477  0011EA  0E33               	movwf	((c:4015)),c	;volatile
  5478  0011EC  6EAF               	line	46
  5479                           	
  5480                           l123:
  5481  0011EE                     	return	;funcret
  5482  0011EE  0012               	opt stack 0
  5483                           GLOBAL	__end_of_UART_Init
  5484                           	__end_of_UART_Init:
  5485  0011F0                     	signat	_UART_Init,89
  5486                           	global	_IC_Init
  5487                           
  5488 ;; *************** function _IC_Init *****************
  5489 ;; Defined at:
  5490 ;;		line 2 in file "ic.h"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		None
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0
  5504 ;;      Params:         0       0
  5505 ;;      Locals:         0       0
  5506 ;;      Temps:          0       0
  5507 ;;      Totals:         0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           psect	text20,class=CODE,space=0,reloc=2,group=0
  5518                           	file	"ic.h"
  5519                           	line	2
  5520                           global __ptext20
  5521                           __ptext20:
  5522  0010F6                     psect	text20
  5523                           	file	"ic.h"
  5524                           	line	2
  5525                           	global	__size_of_IC_Init
  5526                           	__size_of_IC_Init	equ	__end_of_IC_Init-_IC_Init
  5527  0000                     	
  5528                           _IC_Init:
  5529  0010F6                     ;incstack = 0
  5530                           	opt	stack 29
  5531                           	line	4
  5532                           	
  5533                           l1214:
  5534  0010F6                     ;ic.h: 4: TRISAbits.RA0 = 0b0;
  5535                           	bcf	((c:3986)),c,0	;volatile
  5536  0010F6  9092               	line	5
  5537                           ;ic.h: 5: TRISAbits.RA1 = 0b1;
  5538                           	bsf	((c:3986)),c,1	;volatile
  5539  0010F8  8292               	line	6
  5540                           ;ic.h: 6: TRISAbits.RA2 = 0b1;
  5541                           	bsf	((c:3986)),c,2	;volatile
  5542  0010FA  8492               	line	7
  5543                           ;ic.h: 7: TRISAbits.RA3 = 0b1;
  5544                           	bsf	((c:3986)),c,3	;volatile
  5545  0010FC  8692               	line	8
  5546                           ;ic.h: 8: TRISAbits.RA4 = 0b1;
  5547                           	bsf	((c:3986)),c,4	;volatile
  5548  0010FE  8892               	line	10
  5549                           ;ic.h: 10: TRISAbits.RA6 = 0b1;
  5550                           	bsf	((c:3986)),c,6	;volatile
  5551  001100  8C92               	line	11
  5552                           ;ic.h: 11: TRISAbits.RA7 = 0b1;
  5553                           	bsf	((c:3986)),c,7	;volatile
  5554  001102  8E92               	line	13
  5555                           ;ic.h: 13: TRISBbits.RB0 = 0b0;
  5556                           	bcf	((c:3987)),c,0	;volatile
  5557  001104  9093               	line	14
  5558                           ;ic.h: 14: TRISBbits.RB1 = 0b0;
  5559                           	bcf	((c:3987)),c,1	;volatile
  5560  001106  9293               	line	15
  5561                           ;ic.h: 15: TRISBbits.RB2 = 0b1;
  5562                           	bsf	((c:3987)),c,2	;volatile
  5563  001108  8493               	line	16
  5564                           ;ic.h: 16: TRISBbits.RB3 = 0b0;
  5565                           	bcf	((c:3987)),c,3	;volatile
  5566  00110A  9693               	line	17
  5567                           ;ic.h: 17: TRISBbits.RB4 = 0b0;
  5568                           	bcf	((c:3987)),c,4	;volatile
  5569  00110C  9893               	line	18
  5570                           ;ic.h: 18: TRISBbits.RB5 = 0b0;
  5571                           	bcf	((c:3987)),c,5	;volatile
  5572  00110E  9A93               	line	21
  5573                           ;ic.h: 21: ADCON1bits.PCFG3 = 0b0;
  5574                           	bcf	((c:4033)),c,3	;volatile
  5575  001110  96C1               	line	22
  5576                           ;ic.h: 22: ADCON1bits.PCFG2 = 0b1;
  5577                           	bsf	((c:4033)),c,2	;volatile
  5578  001112  84C1               	line	23
  5579                           ;ic.h: 23: ADCON1bits.PCFG1 = 0b1;
  5580                           	bsf	((c:4033)),c,1	;volatile
  5581  001114  82C1               	line	24
  5582                           ;ic.h: 24: ADCON1bits.PCFG0 = 0b1;
  5583                           	bsf	((c:4033)),c,0	;volatile
  5584  001116  80C1               	line	27
  5585                           ;ic.h: 27: OSCCONbits.IRCF0 = 0b1;
  5586                           	bsf	((c:4051)),c,4	;volatile
  5587  001118  88D3               	line	28
  5588                           ;ic.h: 28: OSCCONbits.IRCF1 = 0b1;
  5589                           	bsf	((c:4051)),c,5	;volatile
  5590  00111A  8AD3               	line	29
  5591                           ;ic.h: 29: OSCCONbits.IRCF2 = 0b1;
  5592                           	bsf	((c:4051)),c,6	;volatile
  5593  00111C  8CD3               	line	32
  5594                           ;ic.h: 32: OSCTUNEbits.PLLEN = 1;
  5595                           	bsf	((c:3995)),c,6	;volatile
  5596  00111E  8C9B               	line	34
  5597                           ;ic.h: 34: T0CONbits.TMR0ON = 0;
  5598                           	bcf	((c:4053)),c,7	;volatile
  5599  001120  9ED5               	line	37
  5600                           ;ic.h: 37: LATBbits.LATB0 = 0b0;
  5601                           	bcf	((c:3978)),c,0	;volatile
  5602  001122  908A               	line	38
  5603                           ;ic.h: 38: LATBbits.LATB1 = 0b0;
  5604                           	bcf	((c:3978)),c,1	;volatile
  5605  001124  928A               	line	40
  5606                           ;ic.h: 40: LATBbits.LATB4 = 0b0;
  5607                           	bcf	((c:3978)),c,4	;volatile
  5608  001126  988A               	line	41
  5609                           ;ic.h: 41: LATBbits.LATB5 = 0b0;
  5610                           	bcf	((c:3978)),c,5	;volatile
  5611  001128  9A8A               	line	42
  5612                           	
  5613                           l92:
  5614  00112A                     	return	;funcret
  5615  00112A  0012               	opt stack 0
  5616                           GLOBAL	__end_of_IC_Init
  5617                           	__end_of_IC_Init:
  5618  00112C                     	signat	_IC_Init,89
  5619                           	global	_ADC_Init
  5620                           
  5621 ;; *************** function _ADC_Init *****************
  5622 ;; Defined at:
  5623 ;;		line 8 in file "adc.h"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		None
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0
  5637 ;;      Params:         0       0
  5638 ;;      Locals:         0       0
  5639 ;;      Temps:          0       0
  5640 ;;      Totals:         0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    1
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_main
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           psect	text21,class=CODE,space=0,reloc=2,group=0
  5651                           	file	"adc.h"
  5652                           	line	8
  5653                           global __ptext21
  5654                           __ptext21:
  5655  0011F0                     psect	text21
  5656                           	file	"adc.h"
  5657                           	line	8
  5658                           	global	__size_of_ADC_Init
  5659                           	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  5660  0000                     	
  5661                           _ADC_Init:
  5662  0011F0                     ;incstack = 0
  5663                           	opt	stack 29
  5664                           	line	11
  5665                           	
  5666                           l1212:
  5667  0011F0                     ;adc.h: 11: ADCON0bits.CHS0 = 0b1;
  5668                           	bsf	((c:4034)),c,2	;volatile
  5669  0011F0  84C2               	line	12
  5670                           ;adc.h: 12: ADCON0bits.CHS1 = 0b1;
  5671                           	bsf	((c:4034)),c,3	;volatile
  5672  0011F2  86C2               	line	18
  5673                           ;adc.h: 18: ADCON1bits.VCFG0 = 0b0;
  5674                           	bcf	((c:4033)),c,4	;volatile
  5675  0011F4  98C1               	line	21
  5676                           ;adc.h: 21: ADCON1bits.PCFG3 = 0b0;
  5677                           	bcf	((c:4033)),c,3	;volatile
  5678  0011F6  96C1               	line	24
  5679                           ;adc.h: 24: ADCON2bits.ADFM = 0b1;
  5680                           	bsf	((c:4032)),c,7	;volatile
  5681  0011F8  8EC0               	line	27
  5682                           ;adc.h: 27: ADCON2bits.ACQT2 = 0b1;
  5683                           	bsf	((c:4032)),c,5	;volatile
  5684  0011FA  8AC0               	line	28
  5685                           ;adc.h: 28: ADCON2bits.ACQT1 = 0b0;
  5686                           	bcf	((c:4032)),c,4	;volatile
  5687  0011FC  98C0               	line	29
  5688                           ;adc.h: 29: ADCON2bits.ACQT1 = 0b0;
  5689                           	bcf	((c:4032)),c,4	;volatile
  5690  0011FE  98C0               	line	32
  5691                           ;adc.h: 32: ADCON2bits.ADCS2 = 0b0;
  5692                           	bcf	((c:4032)),c,2	;volatile
  5693  001200  94C0               	line	33
  5694                           ;adc.h: 33: ADCON2bits.ADCS1 = 0b0;
  5695                           	bcf	((c:4032)),c,1	;volatile
  5696  001202  92C0               	line	34
  5697                           ;adc.h: 34: ADCON2bits.ADCS0 = 0b0;
  5698                           	bcf	((c:4032)),c,0	;volatile
  5699  001204  90C0               	line	35
  5700                           	
  5701                           l83:
  5702  001206                     	return	;funcret
  5703  001206  0012               	opt stack 0
  5704                           GLOBAL	__end_of_ADC_Init
  5705                           	__end_of_ADC_Init:
  5706  001208                     	signat	_ADC_Init,89
  5707                           	global	_UART_add_buffer
  5708                           
  5709 ;; *************** function _UART_add_buffer *****************
  5710 ;; Defined at:
  5711 ;;		line 110 in file "uart.h"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0
  5725 ;;      Params:         0       0
  5726 ;;      Locals:         0       0
  5727 ;;      Temps:          4       0
  5728 ;;      Totals:         4       0
  5729 ;;Total ram usage:        4 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		Interrupt level 2
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           psect	intcode,class=CODE,space=0,reloc=2
  5738                           global __pintcode
  5739                           __pintcode:
  5740  000008                     psect	intcode
  5741                           	file	"uart.h"
  5742                           	line	110
  5743                           	global	__size_of_UART_add_buffer
  5744                           	__size_of_UART_add_buffer	equ	__end_of_UART_add_buffer-_UART_add_buffer
  5745  0000                     	
  5746                           _UART_add_buffer:
  5747  000008                     ;incstack = 0
  5748                           	opt	stack 26
  5749                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  5750  000008  824B               	movff	fsr2l+0,??_UART_add_buffer+0
  5751  00000A  CFD9 F001          	movff	fsr2h+0,??_UART_add_buffer+1
  5752  00000E  CFDA F002          	movff	prodl+0,??_UART_add_buffer+2
  5753  000012  CFF3 F003          	movff	prodh+0,??_UART_add_buffer+3
  5754  000016  CFF4 F004          	line	113
  5755                           	
  5756                           i2l1286:
  5757  00001A                     ;uart.h: 113: LATBbits.LATB3 = 1;
  5758                           	bsf	((c:3978)),c,3	;volatile
  5759  00001A  868A               	line	114
  5760                           ;uart.h: 114: if (PIR1bits.RCIF) {
  5761                           	btfss	((c:3998)),c,5	;volatile
  5762  00001C  AA9E               	goto	i2u39_41
  5763  00001E  EF13  F000         	goto	i2u39_40
  5764  000022  EF15  F000         i2u39_41:
  5765  000026                     	goto	i2l158
  5766  000026  EF32  F000         i2u39_40:
  5767  00002A                     	line	115
  5768                           	
  5769                           i2l1288:
  5770  00002A                     ;uart.h: 115: UART_buffer[UART_Buffer_Ptr] = RCREG;
  5771                           	movf	((c:_UART_Buffer_Ptr)),c,w
  5772  00002A  5041               	mullw	01h
  5773  00002C  0D01               	movlw	low(_UART_buffer)
  5774  00002E  0E42               	addwf	(prodl),c,w
  5775  000030  24F3               	movwf	c:fsr2l
  5776  000032  6ED9               	movlw	high(_UART_buffer)
  5777  000034  0E00               	addwfc	prod+1,w
  5778  000036  20F4               	movwf	1+c:fsr2l
  5779  000038  6EDA               	movff	(c:4014),indf2	;volatile
  5780  00003A  CFAE FFDF          
  5781                           	line	116
  5782                           	
  5783                           i2l1290:
  5784  00003E                     ;uart.h: 116: received_char++;
  5785                           	incf	((c:_received_char)),c
  5786  00003E  2A40               	line	117
  5787                           	
  5788                           i2l1292:
  5789  000040                     ;uart.h: 117: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr + (unsign
                                 ed char)1);
  5790                           	incf	((c:_UART_Buffer_Ptr)),c,w
  5791  000040  2841               	movwf	((c:_UART_Buffer_Ptr)),c
  5792  000042  6E41               	line	118
  5793                           	
  5794                           i2l1294:
  5795  000044                     ;uart.h: 118: if (UART_Buffer_Ptr == 8)
  5796                           		movlw	8
  5797  000044  0E08               	xorwf	((c:_UART_Buffer_Ptr)),c,w
  5798  000046  1841               	btfss	status,2
  5799  000048  A4D8               	goto	i2u40_41
  5800  00004A  EF29  F000         	goto	i2u40_40
  5801  00004E  EF2B  F000         
  5802                           i2u40_41:
  5803  000052                     	goto	i2l1298
  5804  000052  EF2F  F000         i2u40_40:
  5805  000056                     	line	119
  5806                           	
  5807                           i2l1296:
  5808  000056                     ;uart.h: 119: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr - (unsign
                                 ed char)1);
  5809                           	decf	((c:_UART_Buffer_Ptr)),c,w
  5810  000056  0441               	movwf	((c:_UART_Buffer_Ptr)),c
  5811  000058  6E41               	goto	i2l1298
  5812  00005A  EF2F  F000         	
  5813                           i2l157:
  5814  00005E                     	line	121
  5815                           	
  5816                           i2l1298:
  5817  00005E                     ;uart.h: 121: PIR1bits.RCIF = 0;
  5818                           	bcf	((c:3998)),c,5	;volatile
  5819  00005E  9A9E               	goto	i2l158
  5820  000060  EF32  F000         	line	122
  5821                           	
  5822                           i2l156:
  5823  000064                     	line	125
  5824                           	
  5825                           i2l158:
  5826  000064                     	movff	??_UART_add_buffer+3,prodh+0
  5827  000064  C004  FFF4         	movff	??_UART_add_buffer+2,prodl+0
  5828  000068  C003  FFF3         	movff	??_UART_add_buffer+1,fsr2h+0
  5829  00006C  C002  FFDA         	movff	??_UART_add_buffer+0,fsr2l+0
  5830  000070  C001  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5831  000074  924B               	retfie f
  5832  000076  0011               	opt stack 0
  5833                           GLOBAL	__end_of_UART_add_buffer
  5834                           	__end_of_UART_add_buffer:
  5835  000078                     	signat	_UART_add_buffer,89
  5836                           psect	smallconst
  5837                           	db 0	; dummy byte at the end
  5838  0001E0  00                 	global	__smallconst
  5839                           	global	__mediumconst
  5840                           	GLOBAL	__activetblptr
  5841                           __activetblptr	EQU	2
  5842  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5843                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5844                           	GLOBAL	__Lrparam
  5845                           	FNCONF	rparam,??,?
  5846                           	GLOBAL	___rparam_used
  5847                           	___rparam_used EQU 1
  5848  0000                     	GLOBAL	___param_bank
  5849                           	___param_bank EQU 0
  5850  0000                     GLOBAL	__Lparam, __Hparam
  5851                           GLOBAL	__Lrparam, __Hrparam
  5852                           __Lparam	EQU	__Lrparam
  5853  0000                     __Hparam	EQU	__Hrparam
  5854  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  5855                           	global	btemp
  5856                           btemp:
  5857  00004B                     	ds	1
  5858  00004B                     	global	int$flags
  5859                           	int$flags	set btemp
  5860  0000                     	global	wtemp8
  5861                           	wtemp8 set btemp+1
  5862  0000                     	global	ttemp5
  5863                           	ttemp5 set btemp+1
  5864  0000                     	global	ttemp6
  5865                           	ttemp6 set btemp+4
  5866  0000                     	global	ttemp7
  5867                           	ttemp7 set btemp+8
  5868  0000                     	end


Data Sizes:
    Strings     223
    Constant    0
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      74
    BANK0           128      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), 
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 

    memset@p1	PTR void  size(2) Largest target is 8
		 -> UART_buffer(COMRAM[8]), 

    memset@p	PTR unsigned char  size(2) Largest target is 8
		 -> UART_buffer(COMRAM[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), UART_buffer(COMRAM[8]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 8
		 -> UART_buffer(COMRAM[8]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
		 -> STR_30(CODE[13]), STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), 
		 -> STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), 
		 -> STR_2(CODE[6]), STR_1(CODE[5]), send_Status@buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_send_Status
    _strstr->_strncmp
    _strncmp->_strlen
    _send_Status->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_Write_Text->_UART_Write_byte
    _ADC_Get->_delay_ms
    _delay_s->_delay_ms
    _UART_clean_buffer->_memset

Critical Paths under _UART_add_buffer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_add_buffer in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11025
                                             46 COMRAM     4     4      0
                           _ADC_Init
                            _IC_Init
                          _UART_Init
                    _UART_Write_Text
                  _UART_clean_buffer
                           _delay_ms
                            _delay_s
                        _send_Status
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    3377
                                             19 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     362
                                             10 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _send_Status                                         18    18      0    4424
                                             28 COMRAM    18    18      0
                            _ADC_Get
                    _UART_Write_Text
                            ___lldiv
                             ___lmul
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             20 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                             11 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      7     5      2    1268
                                              5 COMRAM     7     5      2
                    _UART_Write_byte
 ---------------------------------------------------------------------------------
 (3) _UART_Write_byte                                      1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get                                              6     4      2     653
                                              7 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     956
                                              7 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             3     1      2     630
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_clean_buffer                                    0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IC_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _UART_add_buffer                                      4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IC_Init
   _UART_Init
   _UART_Write_Text
     _UART_Write_byte
   _UART_clean_buffer
     _memset
   _delay_ms
   _delay_s
     _delay_ms
   _send_Status
     _ADC_Get
       _delay_ms
     _UART_Write_Text
       _UART_Write_byte
     ___lldiv
     ___lmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _UART_add_buffer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      4A       1       58.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       5        0.0%
DATA                 0      0      4A       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 26 21:39:53 2018

                        l71 10D6                          l72 10C2                          l80 115E  
                        l73 10F4                          l74 10F4                          l83 1206  
                        l92 112A                          l77 1140                          l78 1130  
                        l86 104A                          l79 115E                          l87 104A  
                        l88 105C                          l89 107C                          u80 11C8  
                        u81 11C4                 __CFG_BORV$3 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                         l200 0804                         l201 080A  
                       l202 08AA                         l123 11EE                         l132 0D80  
                       l220 0ED6                         l204 0868                         l133 0D44  
                       l221 0EF8                         l141 0966                         l205 088E  
                       l126 11BA                         l134 0DC0                         l222 0F22  
                       l150 0A36                         l142 0976                         l206 08AE  
                       l127 11BA                         l135 0DC0                         l223 0F32  
                       l151 0A36                         l143 0996                         l207 08B2  
                       l128 11CC                         l240 0CAE                         l144 09A6  
                       l208 08B2                         l129 11D0                         l241 0CD0  
                       l145 09C6                         l138 11B2                         l242 0CD4  
                       l146 09D6                         l170 02C2                         l243 0D12  
                       l147 09F6                         l171 02C6                         l244 0D26  
                       l148 0A06                         l180 050C                         l172 0338  
                       l245 0D36                         l149 0A26                         l173 0696  
                       l181 0686                         l238 0D26                         l190 07C8  
                       l182 0596                         l174 03AA                         l239 0CBE  
                       l191 0782                         l175 0692                         l183 0682  
                       l192 077E                         l184 0608                         l176 0428  
                       l193 0772                         l177 068E                         l185 067E  
                       l169 0296                         l194 076E                         l186 067A  
                       l178 049A                         l195 077A                         l187 06AC  
                       l179 068A                         l700 0EB8                         l196 07C4  
                       l188 06B4                         l701 0E70                         l197 07D2  
                       l189 07CC                         l702 0E64                         l198 07E8  
                       l703 0E82                         l199 07EE                         l704 0E86  
                       l705 0EA8                         l706 0EB8                         l707 0EC0  
                       l900 0B12                         l901 0B5C                         l910 0F8A  
                       l902 0BC6                         l911 0F7E                         l920 0C54  
                       l904 0BB6                         l921 0BCC                         l905 0BBA  
                       l690 0E40                         l914 0FA0                         l922 0C48  
                       l691 0DF0                         l915 0F98                         l692 0DE4  
                       l908 0F34                         l916 0FC0                         l924 0C10  
                       l693 0E02                         l909 0F5E                         l917 0FE0  
                       l925 0C7E                         l694 0E06                         l926 0C72  
                       l695 0E30                         l696 0E40                         l880 0A7A  
                       l697 0E48                         l881 0A90                         l890 10BC  
                       l882 0AD8                         l883 0B04                         l875 1014  
                       l884 0B0C                         l876 1034                         l887 109E  
                       l879 0A44                         l888 108A                         l889 10BC  
                       l899 0B88                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
                       u900 0E7E                         u901 0E7A                         u910 0E9C  
                       u911 0E98                         u920 10F0                         u921 10EC  
                       u930 0A76                         u931 0A72                         u860 0DDC  
                       u940 0AD4                         u861 0DD8                         u941 0AD0  
                       u870 0DFE                         u950 0B00                         u871 0DFA  
                       u951 0AFC                         u960 1058                         u880 0E22  
                       u961 1054                         u881 0E1E                         u970 0D70  
                       u890 0E5C                         u891 0E58                         u980 0DAC  
                       u990 0DBC                         u991 0DB8                         u977 0D66  
                       u987 0DA2  _Status_Alarm_Triggered_old 003A             __end_of_ADC_Get 107E  
                       prod 000FF3                         wreg 000FE8           _UART_clean_buffer 118C  
              __CFG_WDT$OFF 000000                        l1212 11F0                        l1214 10F6  
                      l1216 11D2                        l1056 11B6                        l1218 11EA  
                      l1058 11CC                        l1600 107C                        l1520 0DE4  
                      l1610 0D80                        l1602 0D38                        l1530 0E2A  
                      l1522 0DF0                        l1514 0DC2                        l1612 107E  
                      l1604 0D44                        l1532 0E30                        l1524 0E06  
                      l1516 0DCA                        l1540 0E64                        l1620 0FE2  
                      l1700 0F7E                        l1614 108A                        l1710 118C  
                      l1606 0D72                        l1534 0E36                        l1526 0E0C  
                      l1518 0DDC                        l1550 0EAE                        l1542 0E70  
                      l1630 1034                        l1622 0FF8                        l1702 0F8A  
                      l1616 1096                        l1712 11A8                        l1552 10BE  
                      l1704 112C                        l1608 0D78                        l1640 0F02  
                      l1632 0EC2                        l1528 0E22                        l1544 0E86  
                      l1536 0E4A                        l1560 0A44                        l1624 1004  
                      l1720 091E                        l1800 0222                        l1618 109E  
                      l1714 11AC                        l1554 10C2                        l1706 1130  
                      l1650 0CBE                        l1642 0C80                        l1634 0ED6  
                      l1546 0E9C                        l1538 0E5C                        l1570 0A90  
                      l1562 0A60                        l1626 1008                        l1730 0976  
                      l1722 093A                        l1810 0236                        l1802 0224  
                      l1716 11B0                        l1556 10D6                        l1708 1140  
                      l1660 0D12                        l1652 0CD4                        l1644 0C90  
                      l1636 0EE4                        l1548 0EA8                        l1580 0AE8  
                      l1572 0AA8                        l1564 0A64                        l1628 1014  
                      l1740 09C6                        l1732 0986                        l1724 0946  
                      l1900 06B4                        l1820 025E                        l1812 0242  
                      l1804 0226                        l1590 1038                        l1662 0D1C  
                      l1654 0CDE                        l1646 0CA6                        l1638 0EF8  
                      l1582 0AEE                        l1574 0AC4                        l1566 0A7A  
                      l1558 0A38                        l1750 0A16                        l1742 09D6  
                      l1734 0996                        l1726 0956                        l1718 08B6  
                      l1670 0FC0                        l1910 0726                        l1902 0700  
                      l1830 029E                        l1822 026A                        l1814 0244  
                      l1806 0232                        l1592 1044                        l1656 0CFC  
                      l1648 0CAE                        l1584 0B04                        l1576 0AD4  
                      l1568 0A86                        l1752 0A26                        l1744 09E6  
                      l1736 09A6                        l1728 0966                        l1672 0FE0  
                      l1664 0F8C                        l1680 0C10                        l1760 0B58  
                      l1920 0772                        l1912 0734                        l1904 0702  
                      l1840 0338                        l1832 02A2                        l1824 0272  
                      l1816 0246                        l1808 0234             __end_of_IC_Init 112C  
                      l1594 105C                        l1658 0D0C                        l1586 0B0C  
                      l1578 0ADC                        l1746 09F6                        l1738 09B6  
                      l1666 0F98                        l1690 0C7E                        l1682 0C44  
                      l1674 0BC8                        l1770 0BC6                        l1762 0B5C  
                      l1754 0B0E                        l1930 0796                        l1922 0774  
                      l1914 0746                        l1906 0712                        l1850 0414  
                      l1842 039E                        l1826 0292                        l1834 02C6  
                      l1818 0252                        l1596 106E                        l1588 1036  
                      l1748 0A06                        l1692 0F34                        l1668 0FA0  
                      l1684 0C48                        l1676 0BCC                        l1756 0B12  
                      l1764 0B88                        l1940 07A4                        l1932 0798  
                      l1916 075A                        l1924 0782                        l1908 0716  
                      l1860 048E                        l1852 0418                        l1844 03A2  
                      l1836 032C                        l1828 029A                        l1780 01F0  
                      l1772 01E2                        l1598 1070                        l1694 0F4E  
                      l1678 0BE4                        l1686 0C54                        l1766 0B9A  
                      l1758 0B4C                        l1950 07E2                        l1942 07A6  
                      l1934 079A                        l1926 078A                        l1918 075E  
                      l1870 050C                        l1862 0492                        l1854 041C  
                      l1846 03AA                        l1838 0330                        l1790 0204  
                      l1782 01FC                        l1774 01E6                        l1696 0F5A  
                      l1688 0C72                        l1768 0BBA                        l1960 082E  
                      l1952 07EE                        l1944 07B2                        l1936 07A0  
                      l1928 0794                        l1880 0586                        l1872 0572  
                      l1864 049A                        l1856 0420                        l1848 0410  
                      l1792 0210                        l1784 01FE                        l1776 01EA  
                      l1698 0F5E                        l1970 087C                        l1962 0840  
                      l1954 07FE                        l1946 07B4                        l1938 07A2  
                      l1890 066E                        l1874 0576                        l1882 0596  
                      l1866 0500                        l1858 0428                        l1794 0212  
                      l1786 0200                        l1778 01EE                        l1980 089A  
                      l1972 0888                        l1964 0852                        l1956 080A  
                      l1948 07D2                        l1892 0672                        l1884 05FC  
                      l1876 0578                        l1868 0504                        l1796 0214  
                      l1788 0202                        l1982 089E                        l1974 088E  
                      l1958 081C                        l1966 0868                        l1886 0600  
                      l1878 0584                        l1894 0696                        l1798 0216  
                      l1984 08A2                        l1976 0892                        l1968 087A  
                      l1896 06A4                        l1888 0608                        l1978 0896  
                      l1898 06AC                        STR_1 01CF                        STR_2 01C9  
                      STR_3 01D0                        STR_4 01CA                        STR_5 01D8  
                      STR_6 01DC                        STR_7 01D0                        STR_8 01CA  
                      STR_9 0136                        u1000 10B8                        u1001 10B4  
                      u1010 0FF8                        u1011 0FF4                        u1020 0EE4  
                      u1100 0C6E                        u1021 0EE0                        u1101 0C6A  
                      u1030 0F22                        u1110 0F4E                        u1031 0F1E  
                      u1111 0F4A                        u1040 0CA6                        u1120 0F7A  
                      u1200 0B9A                        u1041 0CA2                        u1121 0F76  
                      u1201 0B96                        u1130 115A                        u1050 0CCC  
                      u1210 0BB2                        u1131 1156                        u1051 0CC8  
                      u1211 0BAE                        u1060 0CFC                        u1140 0956  
                      u1300 03D2                        u1220 028E                        u1061 0CF8  
                      u1141 0952                        u1301 03CC                        u1221 028A  
                      u1150 0986                        u1070 0FBC                        u1310 03FE  
                      u1302 03D4                        u1230 02BE                        u1151 0982  
                      u1071 0FB8                        u1311 03F8                        u1231 02BA  
                      u1160 09B6                        u1080 0BE4                        u1400 0560  
                      u1320 0410                        u1312 0400                        u1240 02EE  
                      u1161 09B2                        u1081 0BE0                        u1401 055A  
                      u1321 040C                        u1241 02E8                        u1170 09E6  
                      u1090 0C0C                        u1410 0572                        u1402 0562  
                      u1330 0450                        u1250 031A                        u1242 02F0  
                      u1171 09E2                        u1091 0C08                        u1411 056E  
                      u1331 044A                        u1251 0314                        u1180 0A16  
                      u1500 06D0                        u1420 05BE                        u1340 047C  
                      u1332 0452                        u1260 032C                        u1252 031C  
                      u1181 0A12                        u1421 05B8                        u1341 0476  
                      u1261 0328                        u1190 0B4C                        u1510 06E6  
                      u1430 05EA                        u1422 05C0                        u1350 048E  
                      u1342 047E                        u1270 0360                        u1191 0B48  
                      u1511 06E0                        u1431 05E4                        u1351 048A  
                      u1271 035A                        u1600 07FE                        u1520 06E8  
                      u1440 05FC                        u1432 05EC                        u1360 04C2  
                      u1280 038C                        u1272 0362                        u1601 07FA  
                      u1441 05F8                        u1361 04BC                        u1281 0386  
                      u1610 081C                        u1530 0700                        u1450 0630  
                      u1370 04EE                        u1362 04C4                        u1290 039E  
                      u1282 038E                        u1611 0818                        u1531 06FC  
                      u1451 062A                        u1371 04E8                        u1291 039A  
                      u1620 082E                        u1540 0712                        u1460 065C  
                      u1452 0632                        u1380 0500                        u1372 04F0  
                      u1621 082A                        u1541 070E                        u1461 0656  
                      u1381 04FC                        u1630 0840                        u1550 0726  
                      u1470 066E                        u1462 065E                        u1390 0534  
                      u1631 083C                        u1551 0722                        u1471 066A  
                      u1391 052E                        u1640 0852                        u1560 0734  
                      u1480 06A4                        u1392 0536                        u1641 084E  
                      u1561 0730                        u1481 06A0                        u1650 0864  
                      u1570 0746                        u1490 06CE                        u1651 0860  
                      u1571 0742                        u1491 06C8                        u1660 087A  
                      u1580 075A                        u1661 0876                        u1581 0756  
                      u1590 07E2                        u1591 07DE                        u1677 10C8  
                      _TRMT 007D61          ?_UART_clean_buffer 0001               __CFG_BOR$BOHW 000000  
         __CFG_T1OSCMX$HIGH 000000      _Status_Alarm_Triggered 003F                        _main 01E2  
                      _itoa 0FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 004B                        _utoa 0A38  
          __end_of_ADC_Init 1208                        prodh 000FF4                        prodl 000FF3  
                      start 0078               __CFG_IESO$OFF 000000         ??_UART_clean_buffer 000D  
              ___param_bank 000000     __end_of_UART_add_buffer 0078     __end_of_UART_Write_Text 0DC2  
   __end_of_UART_Write_byte 11D2                       ?_main 0001                       ?_itoa 0015  
                     STR_10 01D4                       STR_11 0110                       STR_20 014B  
                     STR_12 011E                       STR_21 0154                       STR_13 0101  
                     STR_14 01B7                       STR_22 0181                       STR_30 012C  
                     STR_15 01C0                       STR_23 018A                       STR_24 01A5  
                     STR_16 0193                       STR_25 01AE                       STR_17 019C  
                     STR_26 016F                       STR_18 015D                       STR_27 0178  
                     STR_19 0166                       STR_28 0139                       STR_29 0142  
           __end_of___lldiv 0D38                       ?_utoa 000C             __end_of___lwdiv 0E4A  
           __end_of___lwmod 0EC2                       i2l156 0064                       i2l157 005E  
                     i2l158 0064                       _RCREG 000FAE                       _TMR0H 000FD7  
                     _TMR0L 000FD6                       _SPBRG 000FAF                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000             __end_of_delay_s 1160               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000         ___lmul@multiplicand 0009   __end_of_UART_clean_buffer 11B4  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
        __size_of_UART_Init 001E               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       _trash 0033  
                     main@i 0031                       tablat 000FF5                       ttemp5 004C  
                     ttemp6 004F                       ttemp7 0053                       utoa@c 0014  
                     utoa@v 0012                       status 000FD8                       wtemp8 004C  
           __end_of_strncmp 0C80             delay_s@repeat_3 0008              __CFG_MCLRE$OFF 000000  
           __initialization 1160              __CFG_HPOL$HIGH 000000                __end_of_main 08B6  
              __end_of_itoa 1036                __end_of_utoa 0B0E                   ??_ADC_Get 000A  
            __CFG_LPOL$HIGH 000000                      ??_main 002F                      ??_itoa 001B  
                    ??_utoa 0012               __activetblptr 000002                   ??_IC_Init 0005  
              ?_send_Status 0001                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    i2l1290 003E                      i2l1292 0040                      i2l1294 0044  
                    i2l1286 001A                      i2l1296 0056                      i2l1288 002A  
                    i2l1298 005E                      _TMR0IF 007F92            __end_of_delay_ms 10F6  
            __CFG_XINST$OFF 000000           __end_of_UART_Init 11F0                      ___lmul 0EC2  
          ?_UART_add_buffer 0001              __CFG_STVREN$ON 000000            ?_UART_Write_Text 0006  
                 ??___lldiv 000D                   ??___lwdiv 0009                   ??___lwmod 0009  
          ?_UART_Write_byte 0001                      _memset 107E                      clear_0 1178  
         send_Status@buffer 001D                   ??_delay_s 000A                      _strchr 0F34  
                    _strlen 0F8C                      _strstr 0B0E                      itoa@cp 001B  
              __pdataCOMRAM 004A                   ?_ADC_Init 0001                __mediumconst 0000  
__size_of_UART_clean_buffer 0028                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_strncmp 0011                  __accesstop 0080  
   __end_of__initialization 117E             __CFG_FLTAMX$RA5 000000               ___rparam_used 000001  
            __pcstackCOMRAM 0001             __CFG_OSC$INTIO2 000000                  ??_ADC_Init 0005  
                   ?___lmul 0005                     ?_memset 0005              ___lmul@product 000D  
                   _ADC_Get 1036                     ?_strchr 0005                     ?_strlen 0005  
                   ?_strstr 0014            __CFG_BBSIZ$BB256 000000                     _IC_Init 10F6  
                 ?_delay_ms 0005                     i2u40_40 0056                     i2u40_41 0052  
                   i2u39_40 002A                     i2u39_41 0026        __size_of_send_Status 0182  
                _cycleAlarm 004A             __CFG_PWMPIN$OFF 000000            delay_ms@repeat_2 0005  
                   __Hparam 0000                     __Lparam 0000             __size_of___lmul 0072  
                   ___lldiv 0C80       UART_Write_Text@toSend 000A                     ___lwdiv 0DC2  
                   ___lwmod 0E4A                __psmallconst 0100                     __pcinit 1160  
           __size_of_memset 0040                     _delay_s 112C                     __ramtop 0100  
                   __ptext0 01E2                     __ptext1 0B0E                     __ptext2 0BC8  
                   __ptext3 0F8C                     __ptext4 0F34                     __ptext5 08B6  
                   __ptext6 0FE2                     __ptext7 0A38                     __ptext8 0E4A  
                   __ptext9 0DC2                   _T0CONbits 000FD5             __size_of_strchr 0058  
           __size_of_strlen 0056             __size_of_strstr 00BA                  ??_delay_ms 0007  
             _received_char 0040                     _strncmp 0BC8        end_of_initialization 117E  
                   itoa@buf 0015                     memset@c 0007                     itoa@val 0017  
                   memset@n 0009                     memset@p 000B               __Lmediumconst 0000  
           ___lldiv@divisor 0009              ADC_Get@advalue 000C             ___lldiv@counter 0011  
                 _RCSTAbits 000FAB                     postinc0 000FEE                     postinc2 000FDE  
                   utoa@buf 000C                     utoa@val 000E                     strlen@s 0005  
                 _UART_Init 11D2                   _PORTAbits 000F80                   _PORTBbits 000F81  
      _Status_Alarm_Enabled 003E                   _TRISAbits 000F92                   _TRISBbits 000F93  
         __size_of_ADC_Init 0018                   _TXSTAbits 000FAC              __end_of___lmul 0F34  
               _BAUDCONbits 000FB8                  ?_UART_Init 0001               __pidataCOMRAM 1208  
            __end_of_memset 10BE    __size_of_UART_add_buffer 0070    __size_of_UART_Write_Text 008A  
            __end_of_strchr 0F8C              __end_of_strlen 0FE2              __end_of_strstr 0BC8  
       start_initialization 1160    __size_of_UART_Write_byte 001E                    ??___lmul 000D  
                  ??_memset 000B                    ?_ADC_Get 0008         _Status_Ac_power_old 0038  
                  ??_strchr 0009                    ??_strlen 0007                    ??_strstr 0018  
               __pbssCOMRAM 0033                    ?_IC_Init 0001           __size_of_delay_ms 0038  
          ___lwdiv@dividend 0005           _cycleAlarmCounter 0034                   __pintcode 0008  
                  ?___lldiv 0005                    ?___lwdiv 0005                    ?___lwmod 0005  
               ??_UART_Init 0005                    ?_delay_s 0008                 __smallconst 0100  
             ??_send_Status 001D                    _ADC_Init 11F0            ___lwdiv@quotient 0009  
                  ?_strncmp 000B           ??_UART_add_buffer 0001           ??_UART_Write_Text 0008  
         ??_UART_Write_byte 0005                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          __size_of_ADC_Get 0048                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
                _ADCON2bits 000FC0            __size_of_IC_Init 0036             _UART_Buffer_Ptr 0041  
         ___lmul@multiplier 0005         __end_of_send_Status 0A38            _Status_Extra_old 0036  
                  __Hrparam 0000                    __Lrparam 0000            _Status_Siren_old 0037  
           send_Status@temp 0027            __size_of___lldiv 00B8            __size_of___lwdiv 0088  
          __size_of___lwmod 0078            __size_of_delay_s 0034                    _allArmed 0035  
                  _delay_ms 10BE         send_Status@adcValue 002B             ___lwdiv@divisor 0007  
           ___lwdiv@counter 000B                    __ptext10 0EC2                    __ptext11 0C80  
                  __ptext20 10F6                    __ptext12 0D38                    __ptext21 11F0  
                  __ptext13 11B4                    __ptext14 1036                    __ptext15 112C  
                  __ptext16 10BE                    __ptext17 118C                    __ptext18 107E  
                  __ptext19 11D2         send_Status@batValue 002D            __size_of_strncmp 00B8  
           _Status_Ac_power 003D         UART_Write_Text@text 0006               __size_of_main 06D4  
             __size_of_itoa 0054               __size_of_utoa 00D6                  strncmp@len 000F  
                  int$flags 004B    _Status_Alarm_Enabled_old 0039                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                 _send_Status 08B6                    itoa@base 0019  
                  memset@p1 0005                    intlevel2 0000                   strchr@chr 0007  
          ___lwmod@dividend 0005                   strchr@ptr 0005            ___lldiv@dividend 0005  
                 strncmp@s1 000B                   strncmp@s2 000D                  _OSCCONbits 000FD3  
       UART_Write_byte@data 0005                 _UART_buffer 0042                    utoa@base 0010  
           _UART_add_buffer 0008             _UART_Write_Text 0D38             _UART_Write_byte 11B4  
          ___lldiv@quotient 000D             ___lwmod@divisor 0007                    strlen@cp 0009  
           ___lwmod@counter 0009                    strstr@s1 0014                    strstr@s2 0016  
          UART_Write_Text@i 000B                _Status_Extra 003B                _Status_Siren 003C  
