

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Sep 13 16:33:05 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F1330 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   112                           OVDCONS equ 0F82h ;# 
   113  0000                     # 552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   114                           OVDCOND equ 0F83h ;# 
   115  0000                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   116                           DTCON equ 0F84h ;# 
   117  0000                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   118                           PWMCON1 equ 0F85h ;# 
   119  0000                     # 752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   120                           PWMCON0 equ 0F86h ;# 
   121  0000                     # 818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   122                           SEVTCMPH equ 0F87h ;# 
   123  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   124                           SEVTCMPL equ 0F88h ;# 
   125  0000                     # 858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   126                           LATA equ 0F89h ;# 
   127  0000                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   128                           LATB equ 0F8Ah ;# 
   129  0000                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   130                           FLTCONFIG equ 0F8Bh ;# 
   131  0000                     # 1121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   132                           PDC2H equ 0F8Ch ;# 
   133  0000                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   134                           PDC2L equ 0F8Dh ;# 
   135  0000                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   136                           PDC1H equ 0F8Eh ;# 
   137  0000                     # 1181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   138                           PDC1L equ 0F8Fh ;# 
   139  0000                     # 1201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   140                           PDC0H equ 0F90h ;# 
   141  0000                     # 1221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   142                           PDC0L equ 0F91h ;# 
   143  0000                     # 1241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   144                           TRISA equ 0F92h ;# 
   145  0000                     # 1246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   146                           DDRA equ 0F92h ;# 
   147  0000                     # 1463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   148                           TRISB equ 0F93h ;# 
   149  0000                     # 1468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   150                           DDRB equ 0F93h ;# 
   151  0000                     # 1685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   152                           PTPERH equ 0F95h ;# 
   153  0000                     # 1705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   154                           PTPERL equ 0F96h ;# 
   155  0000                     # 1725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   156                           PTMRH equ 0F97h ;# 
   157  0000                     # 1745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   158                           PTMRL equ 0F98h ;# 
   159  0000                     # 1765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   160                           PTCON1 equ 0F99h ;# 
   161  0000                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   162                           PTCON0 equ 0F9Ah ;# 
   163  0000                     # 1874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   164                           OSCTUNE equ 0F9Bh ;# 
   165  0000                     # 1939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   166                           PIE1 equ 0F9Dh ;# 
   167  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   168                           PIR1 equ 0F9Eh ;# 
   169  0000                     # 2081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   170                           IPR1 equ 0F9Fh ;# 
   171  0000                     # 2152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   172                           PIE2 equ 0FA0h ;# 
   173  0000                     # 2187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   174                           PIR2 equ 0FA1h ;# 
   175  0000                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   176                           IPR2 equ 0FA2h ;# 
   177  0000                     # 2257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   178                           PIE3 equ 0FA3h ;# 
   179  0000                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   180                           PIR3 equ 0FA4h ;# 
   181  0000                     # 2326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   182                           IPR3 equ 0FA5h ;# 
   183  0000                     # 2356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   184                           EECON1 equ 0FA6h ;# 
   185  0000                     # 2422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   186                           EECON2 equ 0FA7h ;# 
   187  0000                     # 2429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   188                           EEDATA equ 0FA8h ;# 
   189  0000                     # 2436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   190                           EEADR equ 0FA9h ;# 
   191  0000                     # 2443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   192                           RCSTA equ 0FABh ;# 
   193  0000                     # 2448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   194                           RCSTA1 equ 0FABh ;# 
   195  0000                     # 2653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   196                           TXSTA equ 0FACh ;# 
   197  0000                     # 2658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   198                           TXSTA1 equ 0FACh ;# 
   199  0000                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   200                           TXREG equ 0FADh ;# 
   201  0000                     # 2914 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   202                           TXREG1 equ 0FADh ;# 
   203  0000                     # 2921 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   204                           RCREG equ 0FAEh ;# 
   205  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   206                           RCREG1 equ 0FAEh ;# 
   207  0000                     # 2933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   208                           SPBRG equ 0FAFh ;# 
   209  0000                     # 2938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   210                           SPBRG1 equ 0FAFh ;# 
   211  0000                     # 2945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   212                           SPBRGH equ 0FB0h ;# 
   213  0000                     # 2952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   214                           CMCON equ 0FB4h ;# 
   215  0000                     # 3038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   216                           CVRCON equ 0FB5h ;# 
   217  0000                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   218                           BAUDCON equ 0FB8h ;# 
   219  0000                     # 3114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   220                           BAUDCTL equ 0FB8h ;# 
   221  0000                     # 3289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   222                           ADCON2 equ 0FC0h ;# 
   223  0000                     # 3360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   224                           ADCON1 equ 0FC1h ;# 
   225  0000                     # 3433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   226                           ADCON0 equ 0FC2h ;# 
   227  0000                     # 3554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   228                           ADRES equ 0FC3h ;# 
   229  0000                     # 3561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   230                           ADRESL equ 0FC3h ;# 
   231  0000                     # 3568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   232                           ADRESH equ 0FC4h ;# 
   233  0000                     # 3575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   234                           T1CON equ 0FCDh ;# 
   235  0000                     # 3680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   236                           TMR1 equ 0FCEh ;# 
   237  0000                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   238                           TMR1L equ 0FCEh ;# 
   239  0000                     # 3694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   240                           TMR1H equ 0FCFh ;# 
   241  0000                     # 3701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   242                           RCON equ 0FD0h ;# 
   243  0000                     # 3834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   244                           WDTCON equ 0FD1h ;# 
   245  0000                     # 3862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   246                           LVDCON equ 0FD2h ;# 
   247  0000                     # 3927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   248                           OSCCON equ 0FD3h ;# 
   249  0000                     # 4010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   250                           T0CON equ 0FD5h ;# 
   251  0000                     # 4089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   252                           TMR0 equ 0FD6h ;# 
   253  0000                     # 4096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   254                           TMR0L equ 0FD6h ;# 
   255  0000                     # 4103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   256                           TMR0H equ 0FD7h ;# 
   257  0000                     # 4110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   258                           STATUS equ 0FD8h ;# 
   259  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   260                           FSR2 equ 0FD9h ;# 
   261  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   262                           FSR2L equ 0FD9h ;# 
   263  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   264                           FSR2H equ 0FDAh ;# 
   265  0000                     # 4202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   266                           PLUSW2 equ 0FDBh ;# 
   267  0000                     # 4209 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   268                           PREINC2 equ 0FDCh ;# 
   269  0000                     # 4216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   270                           POSTDEC2 equ 0FDDh ;# 
   271  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   272                           POSTINC2 equ 0FDEh ;# 
   273  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   274                           INDF2 equ 0FDFh ;# 
   275  0000                     # 4237 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   276                           BSR equ 0FE0h ;# 
   277  0000                     # 4244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   278                           FSR1 equ 0FE1h ;# 
   279  0000                     # 4251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   280                           FSR1L equ 0FE1h ;# 
   281  0000                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   282                           FSR1H equ 0FE2h ;# 
   283  0000                     # 4265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   284                           PLUSW1 equ 0FE3h ;# 
   285  0000                     # 4272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   286                           PREINC1 equ 0FE4h ;# 
   287  0000                     # 4279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   288                           POSTDEC1 equ 0FE5h ;# 
   289  0000                     # 4286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   290                           POSTINC1 equ 0FE6h ;# 
   291  0000                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   292                           INDF1 equ 0FE7h ;# 
   293  0000                     # 4300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   294                           WREG equ 0FE8h ;# 
   295  0000                     # 4312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   296                           FSR0 equ 0FE9h ;# 
   297  0000                     # 4319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   298                           FSR0L equ 0FE9h ;# 
   299  0000                     # 4326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   300                           FSR0H equ 0FEAh ;# 
   301  0000                     # 4333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   302                           PLUSW0 equ 0FEBh ;# 
   303  0000                     # 4340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   304                           PREINC0 equ 0FECh ;# 
   305  0000                     # 4347 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   306                           POSTDEC0 equ 0FEDh ;# 
   307  0000                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   308                           POSTINC0 equ 0FEEh ;# 
   309  0000                     # 4361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   310                           INDF0 equ 0FEFh ;# 
   311  0000                     # 4368 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   312                           INTCON3 equ 0FF0h ;# 
   313  0000                     # 4480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   314                           INTCON2 equ 0FF1h ;# 
   315  0000                     # 4567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   316                           INTCON equ 0FF2h ;# 
   317  0000                     # 4684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   318                           PROD equ 0FF3h ;# 
   319  0000                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   320                           PRODL equ 0FF3h ;# 
   321  0000                     # 4698 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   322                           PRODH equ 0FF4h ;# 
   323  0000                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   324                           TABLAT equ 0FF5h ;# 
   325  0000                     # 4714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   326                           TBLPTR equ 0FF6h ;# 
   327  0000                     # 4721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   328                           TBLPTRL equ 0FF6h ;# 
   329  0000                     # 4728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   330                           TBLPTRH equ 0FF7h ;# 
   331  0000                     # 4735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   332                           TBLPTRU equ 0FF8h ;# 
   333  0000                     # 4744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   334                           PCLAT equ 0FF9h ;# 
   335  0000                     # 4751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   336                           PC equ 0FF9h ;# 
   337  0000                     # 4758 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   338                           PCL equ 0FF9h ;# 
   339  0000                     # 4765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   340                           PCLATH equ 0FFAh ;# 
   341  0000                     # 4772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   342                           PCLATU equ 0FFBh ;# 
   343  0000                     # 4779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   344                           STKPTR equ 0FFCh ;# 
   345  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   346                           TOS equ 0FFDh ;# 
   347  0000                     # 4860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   348                           TOSL equ 0FFDh ;# 
   349  0000                     # 4867 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   350                           TOSH equ 0FFEh ;# 
   351  0000                     # 4874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   352                           TOSU equ 0FFFh ;# 
   353  0000                     	FNCALL	_main,_ADC_Get
   354                           	FNCALL	_main,_ADC_Init
   355                           	FNCALL	_main,_UART_Init
   356                           	FNCALL	_main,_UART_Write_Text
   357                           	FNCALL	_main,_UART_clean_buffer
   358                           	FNCALL	_main,_delay_ms
   359                           	FNCALL	_main,_delay_s
   360                           	FNCALL	_main,_delay_us
   361                           	FNCALL	_main,_itoa
   362                           	FNCALL	_main,_strstr
   363                           	FNCALL	_strstr,_strchr
   364                           	FNCALL	_strstr,_strlen
   365                           	FNCALL	_strstr,_strncmp
   366                           	FNCALL	_itoa,_utoa
   367                           	FNCALL	_utoa,___lwdiv
   368                           	FNCALL	_utoa,___lwmod
   369                           	FNCALL	_delay_s,_delay_ms
   370                           	FNCALL	_UART_clean_buffer,_memset
   371                           	FNCALL	_UART_Write_Text,_UART_Write_byte
   372                           	FNCALL	_ADC_Get,_delay_ms
   373                           	FNROOT	_main
   374                           	FNCALL	intlevel2,_UART_add_buffer
   375                           	global	intlevel2
   376                           	FNROOT	intlevel2
   377                           	global	_AC_Power_OldStatus
   378                           	global	_Motion_2_OldStatus
   379                           	global	_Motion_1_OldStatus
   380                           	global	_UART_Buffer_Ptr
   381                           	global	_UART_buffer
   382                           	global	_PORTAbits
   383                           _PORTAbits	set	0xF80
   384  0000                     	global	_PORTBbits
   385                           _PORTBbits	set	0xF81
   386  0000                     	global	_LATAbits
   387                           _LATAbits	set	0xF89
   388  0000                     	global	_LATBbits
   389                           _LATBbits	set	0xF8A
   390  0000                     	global	_OSCTUNEbits
   391                           _OSCTUNEbits	set	0xF9B
   392  0000                     	global	_OSCCONbits
   393                           _OSCCONbits	set	0xFD3
   394  0000                     	global	_TRISBbits
   395                           _TRISBbits	set	0xF93
   396  0000                     	global	_TRISAbits
   397                           _TRISAbits	set	0xF92
   398  0000                     	global	_ADRESL
   399                           _ADRESL	set	0xFC3
   400  0000                     	global	_ADRESH
   401                           _ADRESH	set	0xFC4
   402  0000                     	global	_ADCON2bits
   403                           _ADCON2bits	set	0xFC0
   404  0000                     	global	_ADCON1bits
   405                           _ADCON1bits	set	0xFC1
   406  0000                     	global	_ADCON0bits
   407                           _ADCON0bits	set	0xFC2
   408  0000                     	global	_RCREG
   409                           _RCREG	set	0xFAE
   410  0000                     	global	_PIR1bits
   411                           _PIR1bits	set	0xF9E
   412  0000                     	global	_TXREG
   413                           _TXREG	set	0xFAD
   414  0000                     	global	_SPBRG
   415                           _SPBRG	set	0xFAF
   416  0000                     	global	_BAUDCONbits
   417                           _BAUDCONbits	set	0xFB8
   418  0000                     	global	_TXSTAbits
   419                           _TXSTAbits	set	0xFAC
   420  0000                     	global	_RCSTAbits
   421                           _RCSTAbits	set	0xFAB
   422  0000                     	global	_INTCONbits
   423                           _INTCONbits	set	0xFF2
   424  0000                     	global	_PIE1bits
   425                           _PIE1bits	set	0xF9D
   426  0000                     	global	_TRMT
   427                           _TRMT	set	0x7D61
   428  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   429                           global __psmallconst
   430                           __psmallconst:
   431  000100                     	db	0
   432  000100  00                 	
   433                           STR_10:
   434  000101                     	db	77	;'M'
   435  000101  4D                 	db	79	;'O'
   436  000102  4F                 	db	84	;'T'
   437  000103  54                 	db	73	;'I'
   438  000104  49                 	db	79	;'O'
   439  000105  4F                 	db	78	;'N'
   440  000106  4E                 	db	32
   441  000107  20                 	db	49	;'1'
   442  000108  31                 	db	32
   443  000109  20                 	db	78	;'N'
   444  00010A  4E                 	db	79	;'O'
   445  00010B  4F                 	db	32
   446  00010C  20                 	db	77	;'M'
   447  00010D  4D                 	db	79	;'O'
   448  00010E  4F                 	db	86	;'V'
   449  00010F  56                 	db	69	;'E'
   450  000110  45                 	db	77	;'M'
   451  000111  4D                 	db	69	;'E'
   452  000112  45                 	db	78	;'N'
   453  000113  4E                 	db	84	;'T'
   454  000114  54                 	db	10
   455  000115  0A                 	db	0
   456  000116  00                 	
   457                           STR_12:
   458  000117                     	db	77	;'M'
   459  000117  4D                 	db	79	;'O'
   460  000118  4F                 	db	84	;'T'
   461  000119  54                 	db	73	;'I'
   462  00011A  49                 	db	79	;'O'
   463  00011B  4F                 	db	78	;'N'
   464  00011C  4E                 	db	32
   465  00011D  20                 	db	50	;'2'
   466  00011E  32                 	db	32
   467  00011F  20                 	db	110	;'n'
   468  000120  6E                 	db	111	;'o'
   469  000121  6F                 	db	32
   470  000122  20                 	db	109	;'m'
   471  000123  6D                 	db	111	;'o'
   472  000124  6F                 	db	118	;'v'
   473  000125  76                 	db	101	;'e'
   474  000126  65                 	db	109	;'m'
   475  000127  6D                 	db	101	;'e'
   476  000128  65                 	db	110	;'n'
   477  000129  6E                 	db	116	;'t'
   478  00012A  74                 	db	10
   479  00012B  0A                 	db	0
   480  00012C  00                 	
   481                           STR_9:
   482  00012D                     	db	77	;'M'
   483  00012D  4D                 	db	79	;'O'
   484  00012E  4F                 	db	84	;'T'
   485  00012F  54                 	db	73	;'I'
   486  000130  49                 	db	79	;'O'
   487  000131  4F                 	db	78	;'N'
   488  000132  4E                 	db	32
   489  000133  20                 	db	49	;'1'
   490  000134  31                 	db	32
   491  000135  20                 	db	68	;'D'
   492  000136  44                 	db	69	;'E'
   493  000137  45                 	db	84	;'T'
   494  000138  54                 	db	69	;'E'
   495  000139  45                 	db	67	;'C'
   496  00013A  43                 	db	84	;'T'
   497  00013B  54                 	db	69	;'E'
   498  00013C  45                 	db	68	;'D'
   499  00013D  44                 	db	10
   500  00013E  0A                 	db	0
   501  00013F  00                 	
   502                           STR_11:
   503  000140                     	db	77	;'M'
   504  000140  4D                 	db	79	;'O'
   505  000141  4F                 	db	84	;'T'
   506  000142  54                 	db	73	;'I'
   507  000143  49                 	db	79	;'O'
   508  000144  4F                 	db	78	;'N'
   509  000145  4E                 	db	32
   510  000146  20                 	db	50	;'2'
   511  000147  32                 	db	32
   512  000148  20                 	db	68	;'D'
   513  000149  44                 	db	69	;'E'
   514  00014A  45                 	db	84	;'T'
   515  00014B  54                 	db	69	;'E'
   516  00014C  45                 	db	67	;'C'
   517  00014D  43                 	db	84	;'T'
   518  00014E  54                 	db	69	;'E'
   519  00014F  45                 	db	68	;'D'
   520  000150  44                 	db	10
   521  000151  0A                 	db	0
   522  000152  00                 	
   523                           STR_2:
   524  000153                     	db	66	;'B'
   525  000153  42                 	db	65	;'A'
   526  000154  41                 	db	84	;'T'
   527  000155  54                 	db	45
   528  000156  2D                 	db	45
   529  000157  2D                 	db	45
   530  000158  2D                 	db	45
   531  000159  2D                 	db	45
   532  00015A  2D                 	db	45
   533  00015B  2D                 	db	45
   534  00015C  2D                 	db	45
   535  00015D  2D                 	db	45
   536  00015E  2D                 	db	45
   537  00015F  2D                 	db	45
   538  000160  2D                 	db	45
   539  000161  2D                 	db	45
   540  000162  2D                 	db	0
   541  000163  00                 	
   542                           STR_1:
   543  000164                     	db	72	;'H'
   544  000164  48                 	db	101	;'e'
   545  000165  65                 	db	108	;'l'
   546  000166  6C                 	db	108	;'l'
   547  000167  6C                 	db	111	;'o'
   548  000168  6F                 	db	32
   549  000169  20                 	db	87	;'W'
   550  00016A  57                 	db	111	;'o'
   551  00016B  6F                 	db	114	;'r'
   552  00016C  72                 	db	108	;'l'
   553  00016D  6C                 	db	100	;'d'
   554  00016E  64                 	db	10
   555  00016F  0A                 	db	0
   556  000170  00                 	
   557                           STR_3:
   558  000171                     	db	65	;'A'
   559  000171  41                 	db	68	;'D'
   560  000172  44                 	db	67	;'C'
   561  000173  43                 	db	32
   562  000174  20                 	db	86	;'V'
   563  000175  56                 	db	65	;'A'
   564  000176  41                 	db	76	;'L'
   565  000177  4C                 	db	85	;'U'
   566  000178  55                 	db	69	;'E'
   567  000179  45                 	db	58	;':'
   568  00017A  3A                 	db	0
   569  00017B  00                 	
   570                           STR_13:
   571  00017C                     	db	65	;'A'
   572  00017C  41                 	db	67	;'C'
   573  00017D  43                 	db	32
   574  00017E  20                 	db	80	;'P'
   575  00017F  50                 	db	79	;'O'
   576  000180  4F                 	db	87	;'W'
   577  000181  57                 	db	69	;'E'
   578  000182  45                 	db	82	;'R'
   579  000183  52                 	db	10
   580  000184  0A                 	db	0
   581  000185  00                 	
   582                           STR_14:
   583  000186                     	db	68	;'D'
   584  000186  44                 	db	67	;'C'
   585  000187  43                 	db	32
   586  000188  20                 	db	80	;'P'
   587  000189  50                 	db	79	;'O'
   588  00018A  4F                 	db	87	;'W'
   589  00018B  57                 	db	69	;'E'
   590  00018C  45                 	db	82	;'R'
   591  00018D  52                 	db	10
   592  00018E  0A                 	db	0
   593  00018F  00                 	
   594                           STR_8:
   595  000190                     	db	76	;'L'
   596  000190  4C                 	db	69	;'E'
   597  000191  45                 	db	68	;'D'
   598  000192  44                 	db	32
   599  000193  20                 	db	79	;'O'
   600  000194  4F                 	db	70	;'F'
   601  000195  46                 	db	70	;'F'
   602  000196  46                 	db	10
   603  000197  0A                 	db	0
   604  000198  00                 	
   605                           STR_6:
   606  000199                     	db	76	;'L'
   607  000199  4C                 	db	69	;'E'
   608  00019A  45                 	db	68	;'D'
   609  00019B  44                 	db	32
   610  00019C  20                 	db	79	;'O'
   611  00019D  4F                 	db	78	;'N'
   612  00019E  4E                 	db	10
   613  00019F  0A                 	db	0
   614  0001A0  00                 	
   615                           STR_7:
   616  0001A1                     	db	76	;'L'
   617  0001A1  4C                 	db	69	;'E'
   618  0001A2  45                 	db	68	;'D'
   619  0001A3  44                 	db	79	;'O'
   620  0001A4  4F                 	db	70	;'F'
   621  0001A5  46                 	db	70	;'F'
   622  0001A6  46                 	db	0
   623  0001A7  00                 	
   624                           STR_5:
   625  0001A8                     	db	76	;'L'
   626  0001A8  4C                 	db	69	;'E'
   627  0001A9  45                 	db	68	;'D'
   628  0001AA  44                 	db	79	;'O'
   629  0001AB  4F                 	db	78	;'N'
   630  0001AC  4E                 	db	0
   631  0001AD  00                 STR_4	equ	STR_9+17
   632  0000                     ; #config settings
   633                           global __CFG_OSC$INTIO2
   634                           __CFG_OSC$INTIO2 equ 0x0
   635  0000                     global __CFG_FCMEN$OFF
   636                           __CFG_FCMEN$OFF equ 0x0
   637  0000                     global __CFG_IESO$OFF
   638                           __CFG_IESO$OFF equ 0x0
   639  0000                     global __CFG_PWRT$OFF
   640                           __CFG_PWRT$OFF equ 0x0
   641  0000                     global __CFG_BOR$BOHW
   642                           __CFG_BOR$BOHW equ 0x0
   643  0000                     global __CFG_BORV$3
   644                           __CFG_BORV$3 equ 0x0
   645  0000                     global __CFG_WDT$OFF
   646                           __CFG_WDT$OFF equ 0x0
   647  0000                     global __CFG_WDTPS$32768
   648                           __CFG_WDTPS$32768 equ 0x0
   649  0000                     global __CFG_PWMPIN$OFF
   650                           __CFG_PWMPIN$OFF equ 0x0
   651  0000                     global __CFG_LPOL$HIGH
   652                           __CFG_LPOL$HIGH equ 0x0
   653  0000                     global __CFG_HPOL$HIGH
   654                           __CFG_HPOL$HIGH equ 0x0
   655  0000                     global __CFG_FLTAMX$RA5
   656                           __CFG_FLTAMX$RA5 equ 0x0
   657  0000                     global __CFG_T1OSCMX$HIGH
   658                           __CFG_T1OSCMX$HIGH equ 0x0
   659  0000                     global __CFG_MCLRE$OFF
   660                           __CFG_MCLRE$OFF equ 0x0
   661  0000                     global __CFG_STVREN$ON
   662                           __CFG_STVREN$ON equ 0x0
   663  0000                     global __CFG_BBSIZ$BB256
   664                           __CFG_BBSIZ$BB256 equ 0x0
   665  0000                     global __CFG_XINST$OFF
   666                           __CFG_XINST$OFF equ 0x0
   667  0000                     global __CFG_CP0$OFF
   668                           __CFG_CP0$OFF equ 0x0
   669  0000                     global __CFG_CP1$OFF
   670                           __CFG_CP1$OFF equ 0x0
   671  0000                     global __CFG_CPB$OFF
   672                           __CFG_CPB$OFF equ 0x0
   673  0000                     global __CFG_CPD$OFF
   674                           __CFG_CPD$OFF equ 0x0
   675  0000                     global __CFG_WRT0$OFF
   676                           __CFG_WRT0$OFF equ 0x0
   677  0000                     global __CFG_WRT1$OFF
   678                           __CFG_WRT1$OFF equ 0x0
   679  0000                     global __CFG_WRTC$OFF
   680                           __CFG_WRTC$OFF equ 0x0
   681  0000                     global __CFG_WRTB$OFF
   682                           __CFG_WRTB$OFF equ 0x0
   683  0000                     global __CFG_WRTD$OFF
   684                           __CFG_WRTD$OFF equ 0x0
   685  0000                     global __CFG_EBTR0$OFF
   686                           __CFG_EBTR0$OFF equ 0x0
   687  0000                     global __CFG_EBTR1$OFF
   688                           __CFG_EBTR1$OFF equ 0x0
   689  0000                     global __CFG_EBTRB$OFF
   690                           __CFG_EBTRB$OFF equ 0x0
   691  0000                     	file	"C:\Users\me\AppData\Local\Temp\s9no."
   692                           	line	#
   693                           psect	cinit,class=CODE,delta=1,reloc=2
   694                           global __pcinit
   695                           __pcinit:
   696  000AB2                     global start_initialization
   697                           start_initialization:
   698  000AB2                     
   699                           global __initialization
   700                           __initialization:
   701  000AB2                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   702                           global __pbssCOMRAM
   703                           __pbssCOMRAM:
   704  000029                     	global	_AC_Power_OldStatus
   705                           _AC_Power_OldStatus:
   706  000029                            ds      1
   707  000029                     	global	_Motion_2_OldStatus
   708                           _Motion_2_OldStatus:
   709  00002A                            ds      1
   710  00002A                     	global	_Motion_1_OldStatus
   711                           _Motion_1_OldStatus:
   712  00002B                            ds      1
   713  00002B                     	global	_UART_Buffer_Ptr
   714                           _UART_Buffer_Ptr:
   715  00002C                            ds      1
   716  00002C                     	global	_UART_buffer
   717                           _UART_buffer:
   718  00002D                            ds      16
   719  00002D                     	file	"C:\Users\me\AppData\Local\Temp\s9no."
   720                           	line	#
   721                           psect	cinit
   722                           ; Clear objects allocated to COMRAM (20 bytes)
   723                           	global __pbssCOMRAM
   724                           lfsr	0,__pbssCOMRAM
   725  000AB2  EE00  F029         movlw	20
   726  000AB6  0E14               clear_0:
   727  000AB8                     clrf	postinc0,c
   728  000AB8  6AEE               decf	wreg
   729  000ABA  06E8               bnz	clear_0
   730  000ABC  E1FD               psect cinit,class=CODE,delta=1
   731                           global end_of_initialization,__end_of__initialization
   732                           
   733                           ;End of C runtime variable initialization code
   734                           
   735                           end_of_initialization:
   736  000ABE                     __end_of__initialization:
   737  000ABE                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   738  000ABE  903D               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   739  000AC0  923D               	GLOBAL	__Lmediumconst
   740                           	movlw	low highword(__Lmediumconst)
   741  000AC2  0E00               	movwf	tblptru
   742  000AC4  6EF8               movlb 0
   743  000AC6  0100               goto _main	;jump to C main() function
   744  000AC8  EFD8  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   745                           global __pcstackCOMRAM
   746                           __pcstackCOMRAM:
   747  000001                     ?_UART_Init:	; 1 bytes @ 0x0
   748  000001                     ?_UART_Write_byte:	; 1 bytes @ 0x0
   749  000001                     ?_UART_clean_buffer:	; 1 bytes @ 0x0
   750  000001                     ?_UART_add_buffer:	; 1 bytes @ 0x0
   751  000001                     ??_UART_add_buffer:	; 1 bytes @ 0x0
   752  000001                     ?_ADC_Init:	; 1 bytes @ 0x0
   753  000001                     ?_main:	; 1 bytes @ 0x0
   754  000001                     	ds   4
   755  000001                     ?_delay_us:	; 1 bytes @ 0x4
   756  000005                     ?_delay_ms:	; 1 bytes @ 0x4
   757  000005                     ??_UART_Init:	; 1 bytes @ 0x4
   758  000005                     ??_UART_Write_byte:	; 1 bytes @ 0x4
   759  000005                     ??_ADC_Init:	; 1 bytes @ 0x4
   760  000005                     ?_memset:	; 2 bytes @ 0x4
   761  000005                     	global	?_strlen
   762                           ?_strlen:	; 2 bytes @ 0x4
   763  000005                     	global	?_strchr
   764                           ?_strchr:	; 2 bytes @ 0x4
   765  000005                     	global	?___lwdiv
   766                           ?___lwdiv:	; 2 bytes @ 0x4
   767  000005                     	global	?___lwmod
   768                           ?___lwmod:	; 2 bytes @ 0x4
   769  000005                     	global	UART_Write_byte@data
   770                           UART_Write_byte@data:	; 1 bytes @ 0x4
   771  000005                     	global	delay_us@repeat_1
   772                           delay_us@repeat_1:	; 2 bytes @ 0x4
   773  000005                     	global	delay_ms@repeat_2
   774                           delay_ms@repeat_2:	; 2 bytes @ 0x4
   775  000005                     	global	___lwdiv@dividend
   776                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   777  000005                     	global	___lwmod@dividend
   778                           ___lwmod@dividend:	; 2 bytes @ 0x4
   779  000005                     	global	memset@p1
   780                           memset@p1:	; 2 bytes @ 0x4
   781  000005                     	global	strchr@ptr
   782                           strchr@ptr:	; 2 bytes @ 0x4
   783  000005                     	global	strlen@s
   784                           strlen@s:	; 2 bytes @ 0x4
   785  000005                     	ds   1
   786  000005                     ?_UART_Write_Text:	; 1 bytes @ 0x5
   787  000006                     	global	UART_Write_Text@text
   788                           UART_Write_Text@text:	; 2 bytes @ 0x5
   789  000006                     	ds   1
   790  000006                     ??_strlen:	; 1 bytes @ 0x6
   791  000007                     ??_delay_us:	; 1 bytes @ 0x6
   792  000007                     ??_delay_ms:	; 1 bytes @ 0x6
   793  000007                     	global	___lwdiv@divisor
   794                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   795  000007                     	global	___lwmod@divisor
   796                           ___lwmod@divisor:	; 2 bytes @ 0x6
   797  000007                     	global	memset@c
   798                           memset@c:	; 2 bytes @ 0x6
   799  000007                     	global	strchr@chr
   800                           strchr@chr:	; 2 bytes @ 0x6
   801  000007                     	ds   1
   802  000007                     ?_delay_s:	; 1 bytes @ 0x7
   803  000008                     ??_UART_Write_Text:	; 1 bytes @ 0x7
   804  000008                     	global	?_ADC_Get
   805                           ?_ADC_Get:	; 2 bytes @ 0x7
   806  000008                     	global	delay_s@repeat_3
   807                           delay_s@repeat_3:	; 2 bytes @ 0x7
   808  000008                     	ds   1
   809  000008                     ??_strchr:	; 1 bytes @ 0x8
   810  000009                     ??___lwdiv:	; 1 bytes @ 0x8
   811  000009                     ??___lwmod:	; 1 bytes @ 0x8
   812  000009                     	global	___lwmod@counter
   813                           ___lwmod@counter:	; 1 bytes @ 0x8
   814  000009                     	global	___lwdiv@quotient
   815                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   816  000009                     	global	memset@n
   817                           memset@n:	; 2 bytes @ 0x8
   818  000009                     	global	strlen@cp
   819                           strlen@cp:	; 2 bytes @ 0x8
   820  000009                     	ds   1
   821  000009                     ??_delay_s:	; 1 bytes @ 0x9
   822  00000A                     ??_ADC_Get:	; 1 bytes @ 0x9
   823  00000A                     	global	UART_Write_Text@i
   824                           UART_Write_Text@i:	; 2 bytes @ 0x9
   825  00000A                     	ds   1
   826  00000A                     ??_memset:	; 1 bytes @ 0xA
   827  00000B                     	global	?_strncmp
   828                           ?_strncmp:	; 2 bytes @ 0xA
   829  00000B                     	global	___lwdiv@counter
   830                           ___lwdiv@counter:	; 1 bytes @ 0xA
   831  00000B                     	global	memset@p
   832                           memset@p:	; 2 bytes @ 0xA
   833  00000B                     	global	strncmp@s1
   834                           strncmp@s1:	; 2 bytes @ 0xA
   835  00000B                     	ds   1
   836  00000B                     ?_utoa:	; 2 bytes @ 0xB
   837  00000C                     	global	ADC_Get@advalue
   838                           ADC_Get@advalue:	; 2 bytes @ 0xB
   839  00000C                     	global	utoa@buf
   840                           utoa@buf:	; 2 bytes @ 0xB
   841  00000C                     	ds   1
   842  00000C                     ??_UART_clean_buffer:	; 1 bytes @ 0xC
   843  00000D                     	global	strncmp@s2
   844                           strncmp@s2:	; 2 bytes @ 0xC
   845  00000D                     	ds   1
   846  00000D                     	global	utoa@val
   847                           utoa@val:	; 2 bytes @ 0xD
   848  00000E                     	ds   1
   849  00000E                     	global	strncmp@len
   850                           strncmp@len:	; 2 bytes @ 0xE
   851  00000F                     	ds   1
   852  00000F                     	global	utoa@base
   853                           utoa@base:	; 2 bytes @ 0xF
   854  000010                     	ds   1
   855  000010                     ??_strncmp:	; 1 bytes @ 0x10
   856  000011                     	ds   1
   857  000011                     ??_utoa:	; 1 bytes @ 0x11
   858  000012                     	global	utoa@v
   859                           utoa@v:	; 2 bytes @ 0x11
   860  000012                     	ds   2
   861  000012                     	global	?_strstr
   862                           ?_strstr:	; 2 bytes @ 0x13
   863  000014                     	global	utoa@c
   864                           utoa@c:	; 1 bytes @ 0x13
   865  000014                     	global	strstr@s1
   866                           strstr@s1:	; 2 bytes @ 0x13
   867  000014                     	ds   1
   868  000014                     ?_itoa:	; 2 bytes @ 0x14
   869  000015                     	global	itoa@buf
   870                           itoa@buf:	; 2 bytes @ 0x14
   871  000015                     	ds   1
   872  000015                     	global	strstr@s2
   873                           strstr@s2:	; 2 bytes @ 0x15
   874  000016                     	ds   1
   875  000016                     	global	itoa@val
   876                           itoa@val:	; 2 bytes @ 0x16
   877  000017                     	ds   1
   878  000017                     ??_strstr:	; 1 bytes @ 0x17
   879  000018                     	ds   1
   880  000018                     	global	itoa@base
   881                           itoa@base:	; 2 bytes @ 0x18
   882  000019                     	ds   2
   883  000019                     ??_itoa:	; 1 bytes @ 0x1A
   884  00001B                     	global	itoa@cp
   885                           itoa@cp:	; 2 bytes @ 0x1A
   886  00001B                     	ds   2
   887  00001B                     ??_main:	; 1 bytes @ 0x1C
   888  00001D                     	global	main@buffer
   889                           main@buffer:	; 10 bytes @ 0x1C
   890  00001D                     	ds   10
   891  00001D                     	global	main@adcValue
   892                           main@adcValue:	; 2 bytes @ 0x26
   893  000027                     	ds   2
   894  000027                     ;!
   895                           ;!Data Sizes:
   896                           ;!    Strings     173
   897                           ;!    Constant    0
   898                           ;!    Data        0
   899                           ;!    BSS         20
   900                           ;!    Persistent  0
   901                           ;!    Stack       0
   902                           ;!
   903                           ;!Auto Spaces:
   904                           ;!    Space          Size  Autos    Used
   905                           ;!    COMRAM          126     40      60
   906                           ;!    BANK0           128      0       0
   907                           
   908                           ;!
   909                           ;!Pointer List with Targets:
   910                           ;!
   911                           ;!    strncmp@s2	PTR const unsigned char  size(2) Largest target is 17
   912                           ;!		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 
   913                           ;!
   914                           ;!    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
   915                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   916                           ;!
   917                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 17
   918                           ;!		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 
   919                           ;!
   920                           ;!    strlen@cp	PTR const unsigned char  size(2) Largest target is 17
   921                           ;!		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 
   922                           ;!
   923                           ;!    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
   924                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   925                           ;!
   926                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 16
   927                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   928                           ;!
   929                           ;!    strstr@s2	PTR const unsigned char  size(2) Largest target is 17
   930                           ;!		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 
   931                           ;!
   932                           ;!    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
   933                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   934                           ;!
   935                           ;!    memset@p1	PTR void  size(2) Largest target is 16
   936                           ;!		 -> UART_buffer(COMRAM[16]), 
   937                           ;!
   938                           ;!    memset@p	PTR unsigned char  size(2) Largest target is 16
   939                           ;!		 -> UART_buffer(COMRAM[16]), 
   940                           ;!
   941                           ;!    utoa@buf	PTR unsigned char  size(2) Largest target is 10
   942                           ;!		 -> main@buffer(COMRAM[10]), 
   943                           ;!
   944                           ;!    sp__utoa	PTR unsigned char  size(2) Largest target is 10
   945                           ;!		 -> main@buffer(COMRAM[10]), 
   946                           ;!
   947                           ;!    itoa@buf	PTR unsigned char  size(2) Largest target is 10
   948                           ;!		 -> main@buffer(COMRAM[10]), 
   949                           ;!
   950                           ;!    itoa@cp	PTR unsigned char  size(2) Largest target is 10
   951                           ;!		 -> main@buffer(COMRAM[10]), 
   952                           ;!
   953                           ;!    sp__itoa	PTR unsigned char  size(2) Largest target is 10
   954                           ;!		 -> main@buffer(COMRAM[10]), 
   955                           ;!
   956                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 16
   957                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   958                           ;!
   959                           ;!    sp__memset	PTR void  size(2) Largest target is 16
   960                           ;!		 -> UART_buffer(COMRAM[16]), 
   961                           ;!
   962                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 22
   963                           ;!		 -> STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[22]), STR_11(CODE[19]), 
   964                           ;!		 -> STR_10(CODE[22]), STR_9(CODE[19]), STR_8(CODE[9]), STR_6(CODE[8]), 
   965                           ;!		 -> STR_4(CODE[2]), main@buffer(COMRAM[10]), STR_3(CODE[11]), STR_1(CODE[13]), 
   966                           ;!
   967                           
   968                           
   969                           ;!
   970                           ;!Critical Paths under _main in COMRAM
   971                           ;!
   972                           ;!    _main->_itoa
   973                           ;!    _strstr->_strncmp
   974                           ;!    _strncmp->_strlen
   975                           ;!    _itoa->_utoa
   976                           ;!    _utoa->___lwdiv
   977                           ;!    _delay_s->_delay_ms
   978                           ;!    _UART_clean_buffer->_memset
   979                           ;!    _UART_Write_Text->_UART_Write_byte
   980                           ;!    _ADC_Get->_delay_ms
   981                           ;!
   982                           ;!Critical Paths under _UART_add_buffer in COMRAM
   983                           ;!
   984                           ;!    None.
   985                           ;!
   986                           ;!Critical Paths under _main in BANK0
   987                           ;!
   988                           ;!    None.
   989                           ;!
   990                           ;!Critical Paths under _UART_add_buffer in BANK0
   991                           ;!
   992                           ;!    None.
   993                           
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   996 ;;
   997                           
   998                           ;!
   999                           ;!Call Graph Tables:
  1000                           ;!
  1001                           ;! ---------------------------------------------------------------------------------
  1002                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1003                           ;! ---------------------------------------------------------------------------------
  1004                           ;! (0) _main                                                12    12      0    5940
  1005                           ;!                                             28 COMRAM    12    12      0
  1006                           ;!                            _ADC_Get
  1007                           ;!                           _ADC_Init
  1008                           ;!                          _UART_Init
  1009                           ;!                    _UART_Write_Text
  1010                           ;!                  _UART_clean_buffer
  1011                           ;!                           _delay_ms
  1012                           ;!                            _delay_s
  1013                           ;!                           _delay_us
  1014                           ;!                               _itoa
  1015                           ;!                             _strstr
  1016                           ;! ---------------------------------------------------------------------------------
  1017                           ;! (1) _strstr                                               4     0      4    1401
  1018                           ;!                                             19 COMRAM     4     0      4
  1019                           ;!                             _strchr
  1020                           ;!                             _strlen
  1021                           ;!                            _strncmp
  1022                           ;! ---------------------------------------------------------------------------------
  1023                           ;! (2) _strncmp                                              9     3      6     362
  1024                           ;!                                             10 COMRAM     9     3      6
  1025                           ;!                             _strlen (ARG)
  1026                           ;! ---------------------------------------------------------------------------------
  1027                           ;! (2) _strlen                                               6     4      2     166
  1028                           ;!                                              4 COMRAM     6     4      2
  1029                           ;! ---------------------------------------------------------------------------------
  1030                           ;! (2) _strchr                                               5     1      4     240
  1031                           ;!                                              4 COMRAM     5     1      4
  1032                           ;! ---------------------------------------------------------------------------------
  1033                           ;! (1) _itoa                                                 8     2      6    1698
  1034                           ;!                                             20 COMRAM     8     2      6
  1035                           ;!                               _utoa
  1036                           ;! ---------------------------------------------------------------------------------
  1037                           ;! (2) _utoa                                                 9     3      6    1307
  1038                           ;!                                             11 COMRAM     9     3      6
  1039                           ;!                            ___lwdiv
  1040                           ;!                            ___lwmod
  1041                           ;! ---------------------------------------------------------------------------------
  1042                           ;! (3) ___lwmod                                              5     1      4     311
  1043                           ;!                                              4 COMRAM     5     1      4
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;! (3) ___lwdiv                                              7     3      4     466
  1046                           ;!                                              4 COMRAM     7     3      4
  1047                           ;! ---------------------------------------------------------------------------------
  1048                           ;! (1) _delay_us                                             2     0      2      98
  1049                           ;!                                              4 COMRAM     2     0      2
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;! (1) _delay_s                                              2     0      2     500
  1052                           ;!                                              7 COMRAM     2     0      2
  1053                           ;!                           _delay_ms
  1054                           ;! ---------------------------------------------------------------------------------
  1055                           ;! (1) _UART_clean_buffer                                    0     0      0     324
  1056                           ;!                             _memset
  1057                           ;! ---------------------------------------------------------------------------------
  1058                           ;! (2) _memset                                               8     2      6     324
  1059                           ;!                                              4 COMRAM     8     2      6
  1060                           ;! ---------------------------------------------------------------------------------
  1061                           ;! (1) _UART_Write_Text                                      6     4      2    1017
  1062                           ;!                                              5 COMRAM     6     4      2
  1063                           ;!                    _UART_Write_byte
  1064                           ;! ---------------------------------------------------------------------------------
  1065                           ;! (2) _UART_Write_byte                                      1     1      0      15
  1066                           ;!                                              4 COMRAM     1     1      0
  1067                           ;! ---------------------------------------------------------------------------------
  1068                           ;! (1) _UART_Init                                            0     0      0       0
  1069                           ;! ---------------------------------------------------------------------------------
  1070                           ;! (1) _ADC_Init                                             0     0      0       0
  1071                           ;! ---------------------------------------------------------------------------------
  1072                           ;! (1) _ADC_Get                                              6     4      2     425
  1073                           ;!                                              7 COMRAM     6     4      2
  1074                           ;!                           _delay_ms
  1075                           ;! ---------------------------------------------------------------------------------
  1076                           ;! (2) _delay_ms                                             3     1      2     402
  1077                           ;!                                              4 COMRAM     3     1      2
  1078                           ;! ---------------------------------------------------------------------------------
  1079                           ;! Estimated maximum stack depth 3
  1080                           ;! ---------------------------------------------------------------------------------
  1081                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1082                           ;! ---------------------------------------------------------------------------------
  1083                           ;! (4) _UART_add_buffer                                      4     4      0       0
  1084                           ;!                                              0 COMRAM     4     4      0
  1085                           ;! ---------------------------------------------------------------------------------
  1086                           ;! Estimated maximum stack depth 4
  1087                           ;! ---------------------------------------------------------------------------------
  1088                           ;!
  1089                           ;! Call Graph Graphs:
  1090                           ;!
  1091                           ;! _main (ROOT)
  1092                           ;!   _ADC_Get
  1093                           ;!     _delay_ms
  1094                           ;!   _ADC_Init
  1095                           ;!   _UART_Init
  1096                           ;!   _UART_Write_Text
  1097                           ;!     _UART_Write_byte
  1098                           ;!   _UART_clean_buffer
  1099                           ;!     _memset
  1100                           ;!   _delay_ms
  1101                           ;!   _delay_s
  1102                           ;!     _delay_ms
  1103                           ;!   _delay_us
  1104                           ;!   _itoa
  1105                           ;!     _utoa
  1106                           ;!       ___lwdiv
  1107                           ;!       ___lwmod
  1108                           ;!   _strstr
  1109                           ;!     _strchr
  1110                           ;!     _strlen
  1111                           ;!     _strncmp
  1112                           ;!       _strlen (ARG)
  1113                           ;!
  1114                           ;! _UART_add_buffer (ROOT)
  1115                           ;!
  1116                           
  1117                           ;! Address spaces:
  1118                           
  1119                           ;!Name               Size   Autos  Total    Cost      Usage
  1120                           ;!BIGRAM              FF      0       0       6        0.0%
  1121                           ;!EEDATA              80      0       0       0        0.0%
  1122                           ;!BITBANK0            80      0       0       3        0.0%
  1123                           ;!BANK0               80      0       0       4        0.0%
  1124                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1125                           ;!COMRAM              7E     28      3C       1       47.6%
  1126                           ;!BITSFR               0      0       0     200        0.0%
  1127                           ;!SFR                  0      0       0     200        0.0%
  1128                           ;!STACK                0      0       0       2        0.0%
  1129                           ;!NULL                 0      0       0       0        0.0%
  1130                           ;!ABS                  0      0      3C       5        0.0%
  1131                           ;!DATA                 0      0      3C       7        0.0%
  1132                           ;!CODE                 0      0       0       0        0.0%
  1133                           
  1134                           	global	_main
  1135                           
  1136 ;; *************** function _main *****************
  1137 ;; Defined at:
  1138 ;;		line 34 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  buffer         10   28[COMRAM] unsigned char [10]
  1143 ;;  adcValue        2   38[COMRAM] unsigned int 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0
  1153 ;;      Params:         0       0
  1154 ;;      Locals:        12       0
  1155 ;;      Temps:          0       0
  1156 ;;      Totals:        12       0
  1157 ;;Total ram usage:       12 bytes
  1158 ;; Hardware stack levels required when called:    4
  1159 ;; This function calls:
  1160 ;;		_ADC_Get
  1161 ;;		_ADC_Init
  1162 ;;		_UART_Init
  1163 ;;		_UART_Write_Text
  1164 ;;		_UART_clean_buffer
  1165 ;;		_delay_ms
  1166 ;;		_delay_s
  1167 ;;		_delay_us
  1168 ;;		_itoa
  1169 ;;		_strstr
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1175                           	file	"main.c"
  1176                           	line	34
  1177                           global __ptext0
  1178                           __ptext0:
  1179  0001B0                     psect	text0
  1180                           	file	"main.c"
  1181                           	line	34
  1182                           	global	__size_of_main
  1183                           	__size_of_main	equ	__end_of_main-_main
  1184  0000                     	
  1185                           _main:
  1186  0001B0                     ;incstack = 0
  1187                           	opt	stack 27
  1188                           	line	37
  1189                           	
  1190                           l1440:
  1191  0001B0                     ;main.c: 37: TRISAbits.RA0 = 0b0;
  1192                           	bcf	((c:3986)),c,0	;volatile
  1193  0001B0  9092               	line	38
  1194                           ;main.c: 38: TRISAbits.RA1 = 0b1;
  1195                           	bsf	((c:3986)),c,1	;volatile
  1196  0001B2  8292               	line	39
  1197                           ;main.c: 39: TRISAbits.RA2 = 0b1;
  1198                           	bsf	((c:3986)),c,2	;volatile
  1199  0001B4  8492               	line	40
  1200                           ;main.c: 40: TRISAbits.RA3 = 0b1;
  1201                           	bsf	((c:3986)),c,3	;volatile
  1202  0001B6  8692               	line	41
  1203                           ;main.c: 41: TRISAbits.RA4 = 0b1;
  1204                           	bsf	((c:3986)),c,4	;volatile
  1205  0001B8  8892               	line	43
  1206                           ;main.c: 43: TRISAbits.RA6 = 0b1;
  1207                           	bsf	((c:3986)),c,6	;volatile
  1208  0001BA  8C92               	line	44
  1209                           ;main.c: 44: TRISAbits.RA7 = 0b1;
  1210                           	bsf	((c:3986)),c,7	;volatile
  1211  0001BC  8E92               	line	46
  1212                           ;main.c: 46: TRISBbits.RB0 = 0b0;
  1213                           	bcf	((c:3987)),c,0	;volatile
  1214  0001BE  9093               	line	47
  1215                           ;main.c: 47: TRISBbits.RB1 = 0b0;
  1216                           	bcf	((c:3987)),c,1	;volatile
  1217  0001C0  9293               	line	48
  1218                           ;main.c: 48: TRISBbits.RB2 = 0b1;
  1219                           	bsf	((c:3987)),c,2	;volatile
  1220  0001C2  8493               	line	49
  1221                           ;main.c: 49: TRISBbits.RB3 = 0b0;
  1222                           	bcf	((c:3987)),c,3	;volatile
  1223  0001C4  9693               	line	50
  1224                           ;main.c: 50: TRISBbits.RB4 = 0b0;
  1225                           	bcf	((c:3987)),c,4	;volatile
  1226  0001C6  9893               	line	51
  1227                           ;main.c: 51: TRISBbits.RB5 = 0b0;
  1228                           	bcf	((c:3987)),c,5	;volatile
  1229  0001C8  9A93               	line	54
  1230                           ;main.c: 54: ADCON1bits.PCFG3 = 0b0;
  1231                           	bcf	((c:4033)),c,3	;volatile
  1232  0001CA  96C1               	line	55
  1233                           ;main.c: 55: ADCON1bits.PCFG2 = 0b1;
  1234                           	bsf	((c:4033)),c,2	;volatile
  1235  0001CC  84C1               	line	56
  1236                           ;main.c: 56: ADCON1bits.PCFG1 = 0b1;
  1237                           	bsf	((c:4033)),c,1	;volatile
  1238  0001CE  82C1               	line	57
  1239                           ;main.c: 57: ADCON1bits.PCFG0 = 0b1;
  1240                           	bsf	((c:4033)),c,0	;volatile
  1241  0001D0  80C1               	line	60
  1242                           ;main.c: 60: OSCCONbits.IRCF0 = 0b1;
  1243                           	bsf	((c:4051)),c,4	;volatile
  1244  0001D2  88D3               	line	61
  1245                           ;main.c: 61: OSCCONbits.IRCF1 = 0b1;
  1246                           	bsf	((c:4051)),c,5	;volatile
  1247  0001D4  8AD3               	line	62
  1248                           ;main.c: 62: OSCCONbits.IRCF2 = 0b1;
  1249                           	bsf	((c:4051)),c,6	;volatile
  1250  0001D6  8CD3               	line	65
  1251                           ;main.c: 65: OSCTUNEbits.PLLEN = 1;
  1252                           	bsf	((c:3995)),c,6	;volatile
  1253  0001D8  8C9B               	line	67
  1254                           	
  1255                           l1442:
  1256  0001DA                     ;main.c: 67: UART_Init();
  1257                           	call	_UART_Init	;wreg free
  1258  0001DA  EC4A  F005         	line	68
  1259                           	
  1260                           l1444:
  1261  0001DE                     ;main.c: 68: UART_clean_buffer();
  1262                           	call	_UART_clean_buffer	;wreg free
  1263  0001DE  EC2A  F005         	line	70
  1264                           	
  1265                           l1446:
  1266  0001E2                     ;main.c: 70: ADC_Init();
  1267                           	call	_ADC_Init	;wreg free
  1268  0001E2  EC66  F005         	line	76
  1269                           	
  1270                           l1448:
  1271  0001E6                     ;main.c: 76: LATBbits.LB0 = 0b0;
  1272                           	bcf	((c:3978)),c,0	;volatile
  1273  0001E6  908A               	line	77
  1274                           	
  1275                           l1450:
  1276  0001E8                     ;main.c: 77: LATBbits.LB1 = 0b0;
  1277                           	bcf	((c:3978)),c,1	;volatile
  1278  0001E8  928A               	line	79
  1279                           	
  1280                           l1452:
  1281  0001EA                     ;main.c: 79: LATAbits.LATA0 = 0;
  1282                           	bcf	((c:3977)),c,0	;volatile
  1283  0001EA  9089               	line	80
  1284                           	
  1285                           l1454:
  1286  0001EC                     ;main.c: 80: LATBbits.LATB3 = 0;
  1287                           	bcf	((c:3978)),c,3	;volatile
  1288  0001EC  968A               	line	81
  1289                           	
  1290                           l1456:
  1291  0001EE                     ;main.c: 81: delay_ms(1);
  1292                           	movlw	high(01h)
  1293  0001EE  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1294  0001F0  6E06               	movlw	low(01h)
  1295  0001F2  0E01               	movwf	((c:delay_ms@repeat_2)),c
  1296  0001F4  6E05               	call	_delay_ms	;wreg free
  1297  0001F6  ECDC  F004         	line	82
  1298                           	
  1299                           l1458:
  1300  0001FA                     ;main.c: 82: delay_s(1);
  1301                           	movlw	high(01h)
  1302  0001FA  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1303  0001FC  6E09               	movlw	low(01h)
  1304  0001FE  0E01               	movwf	((c:delay_s@repeat_3)),c
  1305  000200  6E08               	call	_delay_s	;wreg free
  1306  000202  ECF8  F004         	line	83
  1307                           	
  1308                           l1460:
  1309  000206                     ;main.c: 83: delay_us(1);
  1310                           	movlw	high(01h)
  1311  000206  0E00               	movwf	((c:delay_us@repeat_1+1)),c
  1312  000208  6E06               	movlw	low(01h)
  1313  00020A  0E01               	movwf	((c:delay_us@repeat_1)),c
  1314  00020C  6E05               	call	_delay_us	;wreg free
  1315  00020E  EC12  F005         	line	84
  1316                           	
  1317                           l1462:
  1318  000212                     ;main.c: 84: LATAbits.LATA0 = 1;
  1319                           	bsf	((c:3977)),c,0	;volatile
  1320  000212  8089               	line	85
  1321                           	
  1322                           l1464:
  1323  000214                     ;main.c: 85: LATBbits.LATB3 = 1;
  1324                           	bsf	((c:3978)),c,3	;volatile
  1325  000214  868A               	line	86
  1326                           	
  1327                           l1466:
  1328  000216                     ;main.c: 86: delay_ms(1);
  1329                           	movlw	high(01h)
  1330  000216  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1331  000218  6E06               	movlw	low(01h)
  1332  00021A  0E01               	movwf	((c:delay_ms@repeat_2)),c
  1333  00021C  6E05               	call	_delay_ms	;wreg free
  1334  00021E  ECDC  F004         	line	87
  1335                           	
  1336                           l1468:
  1337  000222                     ;main.c: 87: LATAbits.LATA0 = 0;
  1338                           	bcf	((c:3977)),c,0	;volatile
  1339  000222  9089               	line	88
  1340                           	
  1341                           l1470:
  1342  000224                     ;main.c: 88: LATBbits.LATB3 = 0;
  1343                           	bcf	((c:3978)),c,3	;volatile
  1344  000224  968A               	line	89
  1345                           	
  1346                           l1472:
  1347  000226                     ;main.c: 89: delay_ms(1);
  1348                           	movlw	high(01h)
  1349  000226  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1350  000228  6E06               	movlw	low(01h)
  1351  00022A  0E01               	movwf	((c:delay_ms@repeat_2)),c
  1352  00022C  6E05               	call	_delay_ms	;wreg free
  1353  00022E  ECDC  F004         	line	91
  1354                           	
  1355                           l1474:
  1356  000232                     ;main.c: 91: UART_Write_Text((unsigned char *) "Hello World\n");
  1357                           		movlw	low(STR_1)
  1358  000232  0E64               	movwf	((c:UART_Write_Text@text)),c
  1359  000234  6E06               	movlw	high(STR_1)
  1360  000236  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1361  000238  6E07               
  1362                           	call	_UART_Write_Text	;wreg free
  1363  00023A  EC98  F003         	goto	l1476
  1364  00023E  EF21  F001         	line	93
  1365                           ;main.c: 93: while (1) {
  1366                           	
  1367                           l121:
  1368  000242                     	line	95
  1369                           	
  1370                           l1476:
  1371  000242                     ;main.c: 95: if (strstr(UART_buffer, "BAT-------------") != (0)) {
  1372                           		movlw	low(_UART_buffer)
  1373  000242  0E2D               	movwf	((c:strstr@s1)),c
  1374  000244  6E14               	movlw	high(_UART_buffer)
  1375  000246  0E00               	movwf	((c:strstr@s1+1)),c
  1376  000248  6E15               
  1377                           		movlw	low(STR_2)
  1378  00024A  0E53               	movwf	((c:strstr@s2)),c
  1379  00024C  6E16               	movlw	high(STR_2)
  1380  00024E  0E01               	movwf	((c:strstr@s2+1)),c
  1381  000250  6E17               
  1382                           	call	_strstr	;wreg free
  1383  000252  EC9B  F002         	movf	(0+?_strstr),c,w
  1384  000256  5014               iorwf	(1+?_strstr),c,w
  1385  000258  1015               	btfsc	status,2
  1386  00025A  B4D8               	goto	u701
  1387  00025C  EF32  F001         	goto	u700
  1388  000260  EF34  F001         
  1389                           u701:
  1390  000264                     	goto	l1490
  1391  000264  EF5E  F001         u700:
  1392  000268                     	line	96
  1393                           	
  1394                           l1478:
  1395  000268                     ;main.c: 96: UART_clean_buffer();
  1396                           	call	_UART_clean_buffer	;wreg free
  1397  000268  EC2A  F005         	line	97
  1398                           	
  1399                           l1480:
  1400  00026C                     ;main.c: 97: UART_Write_Text((unsigned char *) "ADC VALUE:");
  1401                           		movlw	low(STR_3)
  1402  00026C  0E71               	movwf	((c:UART_Write_Text@text)),c
  1403  00026E  6E06               	movlw	high(STR_3)
  1404  000270  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1405  000272  6E07               
  1406                           	call	_UART_Write_Text	;wreg free
  1407  000274  EC98  F003         	line	100
  1408                           	
  1409                           l1482:
  1410  000278                     ;main.c: 98: unsigned char buffer[10];;main.c: 99: unsigned int adcValue;;main.c: 100: a
                                 dcValue = ADC_Get();
  1411                           	call	_ADC_Get	;wreg free
  1412  000278  EC98  F004         	movff	0+?_ADC_Get,(c:main@adcValue)
  1413  00027C  C008  F027         	movff	1+?_ADC_Get,(c:main@adcValue+1)
  1414  000280  C009  F028         	line	101
  1415                           	
  1416                           l1484:
  1417  000284                     ;main.c: 101: itoa(buffer, adcValue, 10);
  1418                           		movlw	low(main@buffer)
  1419  000284  0E1D               	movwf	((c:itoa@buf)),c
  1420  000286  6E15               	movlw	high(main@buffer)
  1421  000288  0E00               	movwf	((c:itoa@buf+1)),c
  1422  00028A  6E16               
  1423                           	movff	(c:main@adcValue),(c:itoa@val)
  1424  00028C  C027  F017         	movff	(c:main@adcValue+1),(c:itoa@val+1)
  1425  000290  C028  F018         	movlw	high(0Ah)
  1426  000294  0E00               	movwf	((c:itoa@base+1)),c
  1427  000296  6E1A               	movlw	low(0Ah)
  1428  000298  0E0A               	movwf	((c:itoa@base)),c
  1429  00029A  6E19               	call	_itoa	;wreg free
  1430  00029C  EC6E  F004         	line	102
  1431                           	
  1432                           l1486:
  1433  0002A0                     ;main.c: 102: UART_Write_Text(buffer);
  1434                           		movlw	low(main@buffer)
  1435  0002A0  0E1D               	movwf	((c:UART_Write_Text@text)),c
  1436  0002A2  6E06               	movlw	high(main@buffer)
  1437  0002A4  0E00               	movwf	((c:UART_Write_Text@text+1)),c
  1438  0002A6  6E07               
  1439                           	call	_UART_Write_Text	;wreg free
  1440  0002A8  EC98  F003         	line	103
  1441                           	
  1442                           l1488:
  1443  0002AC                     ;main.c: 103: UART_Write_Text((unsigned char *) "\n");
  1444                           		movlw	low(STR_4)
  1445  0002AC  0E3E               	movwf	((c:UART_Write_Text@text)),c
  1446  0002AE  6E06               	movlw	high(STR_4)
  1447  0002B0  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1448  0002B2  6E07               
  1449                           	call	_UART_Write_Text	;wreg free
  1450  0002B4  EC98  F003         	line	104
  1451                           ;main.c: 104: } else if (strstr(UART_buffer, "LEDON") != (0)) {
  1452                           	goto	l1506
  1453  0002B8  EF9E  F001         	
  1454                           l122:
  1455  0002BC                     	
  1456                           l1490:
  1457  0002BC                     		movlw	low(_UART_buffer)
  1458  0002BC  0E2D               	movwf	((c:strstr@s1)),c
  1459  0002BE  6E14               	movlw	high(_UART_buffer)
  1460  0002C0  0E00               	movwf	((c:strstr@s1+1)),c
  1461  0002C2  6E15               
  1462                           		movlw	low(STR_5)
  1463  0002C4  0EA8               	movwf	((c:strstr@s2)),c
  1464  0002C6  6E16               	movlw	high(STR_5)
  1465  0002C8  0E01               	movwf	((c:strstr@s2+1)),c
  1466  0002CA  6E17               
  1467                           	call	_strstr	;wreg free
  1468  0002CC  EC9B  F002         	movf	(0+?_strstr),c,w
  1469  0002D0  5014               iorwf	(1+?_strstr),c,w
  1470  0002D2  1015               	btfsc	status,2
  1471  0002D4  B4D8               	goto	u711
  1472  0002D6  EF6F  F001         	goto	u710
  1473  0002DA  EF71  F001         
  1474                           u711:
  1475  0002DE                     	goto	l1498
  1476  0002DE  EF7C  F001         u710:
  1477  0002E2                     	line	105
  1478                           	
  1479                           l1492:
  1480  0002E2                     ;main.c: 105: UART_clean_buffer();
  1481                           	call	_UART_clean_buffer	;wreg free
  1482  0002E2  EC2A  F005         	line	106
  1483                           	
  1484                           l1494:
  1485  0002E6                     ;main.c: 106: LATAbits.LATA0 = 1;
  1486                           	bsf	((c:3977)),c,0	;volatile
  1487  0002E6  8089               	line	107
  1488                           	
  1489                           l1496:
  1490  0002E8                     ;main.c: 107: UART_Write_Text((unsigned char *) "LED ON\n");
  1491                           		movlw	low(STR_6)
  1492  0002E8  0E99               	movwf	((c:UART_Write_Text@text)),c
  1493  0002EA  6E06               	movlw	high(STR_6)
  1494  0002EC  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1495  0002EE  6E07               
  1496                           	call	_UART_Write_Text	;wreg free
  1497  0002F0  EC98  F003         	line	108
  1498                           ;main.c: 108: } else if (strstr(UART_buffer, "LEDOFF") != (0)) {
  1499                           	goto	l1506
  1500  0002F4  EF9E  F001         	
  1501                           l124:
  1502  0002F8                     	
  1503                           l1498:
  1504  0002F8                     		movlw	low(_UART_buffer)
  1505  0002F8  0E2D               	movwf	((c:strstr@s1)),c
  1506  0002FA  6E14               	movlw	high(_UART_buffer)
  1507  0002FC  0E00               	movwf	((c:strstr@s1+1)),c
  1508  0002FE  6E15               
  1509                           		movlw	low(STR_7)
  1510  000300  0EA1               	movwf	((c:strstr@s2)),c
  1511  000302  6E16               	movlw	high(STR_7)
  1512  000304  0E01               	movwf	((c:strstr@s2+1)),c
  1513  000306  6E17               
  1514                           	call	_strstr	;wreg free
  1515  000308  EC9B  F002         	movf	(0+?_strstr),c,w
  1516  00030C  5014               iorwf	(1+?_strstr),c,w
  1517  00030E  1015               	btfsc	status,2
  1518  000310  B4D8               	goto	u721
  1519  000312  EF8D  F001         	goto	u720
  1520  000316  EF8F  F001         
  1521                           u721:
  1522  00031A                     	goto	l1506
  1523  00031A  EF9E  F001         u720:
  1524  00031E                     	line	109
  1525                           	
  1526                           l1500:
  1527  00031E                     ;main.c: 109: UART_clean_buffer();
  1528                           	call	_UART_clean_buffer	;wreg free
  1529  00031E  EC2A  F005         	line	110
  1530                           	
  1531                           l1502:
  1532  000322                     ;main.c: 110: LATAbits.LATA0 = 0;
  1533                           	bcf	((c:3977)),c,0	;volatile
  1534  000322  9089               	line	111
  1535                           	
  1536                           l1504:
  1537  000324                     ;main.c: 111: UART_Write_Text((unsigned char *) "LED OFF\n");
  1538                           		movlw	low(STR_8)
  1539  000324  0E90               	movwf	((c:UART_Write_Text@text)),c
  1540  000326  6E06               	movlw	high(STR_8)
  1541  000328  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1542  00032A  6E07               
  1543                           	call	_UART_Write_Text	;wreg free
  1544  00032C  EC98  F003         	goto	l1506
  1545  000330  EF9E  F001         	line	112
  1546                           	
  1547                           l126:
  1548  000334                     	goto	l1506
  1549  000334  EF9E  F001         	line	114
  1550                           	
  1551                           l125:
  1552  000338                     	goto	l1506
  1553  000338  EF9E  F001         	
  1554                           l123:
  1555  00033C                     	
  1556                           l1506:
  1557  00033C                     ;main.c: 112: };main.c: 114: if (PORTBbits.RB2 != Motion_1_OldStatus) {
  1558                           	btfsc	((c:3969)),c,2	;volatile
  1559  00033C  B481               	goto	u731
  1560  00033E  EFA3  F001         	goto	u730
  1561  000342  EFA6  F001         u731:
  1562  000346                     	movlw	1
  1563  000346  0E01               	goto	u736
  1564  000348  EFA7  F001         u730:
  1565  00034C                     	movlw	0
  1566  00034C  0E00               u736:
  1567  00034E                     	xorwf	((c:_Motion_1_OldStatus)),c,w
  1568  00034E  182B               	btfsc	status,2
  1569  000350  B4D8               	goto	u741
  1570  000352  EFAD  F001         	goto	u740
  1571  000356  EFAF  F001         u741:
  1572  00035A                     	goto	l1520
  1573  00035A  EFCE  F001         u740:
  1574  00035E                     	line	115
  1575                           	
  1576                           l1508:
  1577  00035E                     ;main.c: 115: Motion_1_OldStatus = PORTBbits.RB2;
  1578                           	movlw	0
  1579  00035E  0E00               	btfsc	((c:3969)),c,2	;volatile
  1580  000360  B481               	movlw	1
  1581  000362  0E01               	movwf	((c:_Motion_1_OldStatus)),c
  1582  000364  6E2B               	line	116
  1583                           	
  1584                           l1510:
  1585  000366                     ;main.c: 116: if (PORTBbits.RB2) {
  1586                           	btfss	((c:3969)),c,2	;volatile
  1587  000366  A481               	goto	u751
  1588  000368  EFB8  F001         	goto	u750
  1589  00036C  EFBA  F001         u751:
  1590  000370                     	goto	l1516
  1591  000370  EFC3  F001         u750:
  1592  000374                     	line	117
  1593                           	
  1594                           l1512:
  1595  000374                     ;main.c: 117: UART_Write_Text((unsigned char *) "MOTION 1 DETECTED\n");
  1596                           		movlw	low(STR_9)
  1597  000374  0E2D               	movwf	((c:UART_Write_Text@text)),c
  1598  000376  6E06               	movlw	high(STR_9)
  1599  000378  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1600  00037A  6E07               
  1601                           	call	_UART_Write_Text	;wreg free
  1602  00037C  EC98  F003         	line	118
  1603                           	
  1604                           l1514:
  1605  000380                     ;main.c: 118: LATBbits.LATB3 = 1;
  1606                           	bsf	((c:3978)),c,3	;volatile
  1607  000380  868A               	line	119
  1608                           ;main.c: 119: } else {
  1609                           	goto	l1520
  1610  000382  EFCE  F001         	
  1611                           l128:
  1612  000386                     	line	120
  1613                           	
  1614                           l1516:
  1615  000386                     ;main.c: 120: UART_Write_Text((unsigned char *) "MOTION 1 NO MOVEMENT\n");
  1616                           		movlw	low(STR_10)
  1617  000386  0E01               	movwf	((c:UART_Write_Text@text)),c
  1618  000388  6E06               	movlw	high(STR_10)
  1619  00038A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1620  00038C  6E07               
  1621                           	call	_UART_Write_Text	;wreg free
  1622  00038E  EC98  F003         	line	121
  1623                           	
  1624                           l1518:
  1625  000392                     ;main.c: 121: LATBbits.LATB3 = 0;
  1626                           	bcf	((c:3978)),c,3	;volatile
  1627  000392  968A               	goto	l1520
  1628  000394  EFCE  F001         	line	122
  1629                           	
  1630                           l129:
  1631  000398                     	goto	l1520
  1632  000398  EFCE  F001         	line	123
  1633                           	
  1634                           l127:
  1635  00039C                     	line	125
  1636                           	
  1637                           l1520:
  1638  00039C                     ;main.c: 122: };main.c: 123: };main.c: 125: if (PORTAbits.RA7 != Motion_2_OldStatus) {
  1639                           	btfsc	((c:3968)),c,7	;volatile
  1640  00039C  BE80               	goto	u761
  1641  00039E  EFD3  F001         	goto	u760
  1642  0003A2  EFD6  F001         u761:
  1643  0003A6                     	movlw	1
  1644  0003A6  0E01               	goto	u766
  1645  0003A8  EFD7  F001         u760:
  1646  0003AC                     	movlw	0
  1647  0003AC  0E00               u766:
  1648  0003AE                     	xorwf	((c:_Motion_2_OldStatus)),c,w
  1649  0003AE  182A               	btfsc	status,2
  1650  0003B0  B4D8               	goto	u771
  1651  0003B2  EFDD  F001         	goto	u770
  1652  0003B6  EFDF  F001         u771:
  1653  0003BA                     	goto	l1530
  1654  0003BA  EFFC  F001         u770:
  1655  0003BE                     	line	126
  1656                           	
  1657                           l1522:
  1658  0003BE                     ;main.c: 126: Motion_2_OldStatus = PORTAbits.RA7;
  1659                           	movlw	0
  1660  0003BE  0E00               	btfsc	((c:3968)),c,7	;volatile
  1661  0003C0  BE80               	movlw	1
  1662  0003C2  0E01               	movwf	((c:_Motion_2_OldStatus)),c
  1663  0003C4  6E2A               	line	127
  1664                           	
  1665                           l1524:
  1666  0003C6                     ;main.c: 127: if (PORTAbits.RA7) {
  1667                           	btfss	((c:3968)),c,7	;volatile
  1668  0003C6  AE80               	goto	u781
  1669  0003C8  EFE8  F001         	goto	u780
  1670  0003CC  EFEA  F001         u781:
  1671  0003D0                     	goto	l1528
  1672  0003D0  EFF2  F001         u780:
  1673  0003D4                     	line	128
  1674                           	
  1675                           l1526:
  1676  0003D4                     ;main.c: 128: UART_Write_Text((unsigned char *) "MOTION 2 DETECTED\n");
  1677                           		movlw	low(STR_11)
  1678  0003D4  0E40               	movwf	((c:UART_Write_Text@text)),c
  1679  0003D6  6E06               	movlw	high(STR_11)
  1680  0003D8  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1681  0003DA  6E07               
  1682                           	call	_UART_Write_Text	;wreg free
  1683  0003DC  EC98  F003         	line	129
  1684                           ;main.c: 129: } else {
  1685                           	goto	l1530
  1686  0003E0  EFFC  F001         	
  1687                           l131:
  1688  0003E4                     	line	130
  1689                           	
  1690                           l1528:
  1691  0003E4                     ;main.c: 130: UART_Write_Text((unsigned char *) "MOTION 2 no movement\n");
  1692                           		movlw	low(STR_12)
  1693  0003E4  0E17               	movwf	((c:UART_Write_Text@text)),c
  1694  0003E6  6E06               	movlw	high(STR_12)
  1695  0003E8  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1696  0003EA  6E07               
  1697                           	call	_UART_Write_Text	;wreg free
  1698  0003EC  EC98  F003         	goto	l1530
  1699  0003F0  EFFC  F001         	line	131
  1700                           	
  1701                           l132:
  1702  0003F4                     	goto	l1530
  1703  0003F4  EFFC  F001         	line	132
  1704                           	
  1705                           l130:
  1706  0003F8                     	line	134
  1707                           	
  1708                           l1530:
  1709  0003F8                     ;main.c: 131: };main.c: 132: };main.c: 134: if (PORTAbits.RA1 != AC_Power_OldStatus) {
  1710                           	btfsc	((c:3968)),c,1	;volatile
  1711  0003F8  B280               	goto	u791
  1712  0003FA  EF01  F002         	goto	u790
  1713  0003FE  EF04  F002         u791:
  1714  000402                     	movlw	1
  1715  000402  0E01               	goto	u796
  1716  000404  EF05  F002         u790:
  1717  000408                     	movlw	0
  1718  000408  0E00               u796:
  1719  00040A                     	xorwf	((c:_AC_Power_OldStatus)),c,w
  1720  00040A  1829               	btfsc	status,2
  1721  00040C  B4D8               	goto	u801
  1722  00040E  EF0B  F002         	goto	u800
  1723  000412  EF0D  F002         u801:
  1724  000416                     	goto	l1476
  1725  000416  EF21  F001         u800:
  1726  00041A                     	line	135
  1727                           	
  1728                           l1532:
  1729  00041A                     ;main.c: 135: AC_Power_OldStatus = PORTAbits.RA1;
  1730                           	movlw	0
  1731  00041A  0E00               	btfsc	((c:3968)),c,1	;volatile
  1732  00041C  B280               	movlw	1
  1733  00041E  0E01               	movwf	((c:_AC_Power_OldStatus)),c
  1734  000420  6E29               	line	136
  1735                           	
  1736                           l1534:
  1737  000422                     ;main.c: 136: if (PORTAbits.RA1) {
  1738                           	btfss	((c:3968)),c,1	;volatile
  1739  000422  A280               	goto	u811
  1740  000424  EF16  F002         	goto	u810
  1741  000428  EF18  F002         u811:
  1742  00042C                     	goto	l1538
  1743  00042C  EF20  F002         u810:
  1744  000430                     	line	137
  1745                           	
  1746                           l1536:
  1747  000430                     ;main.c: 137: UART_Write_Text((unsigned char *) "AC POWER\n");
  1748                           		movlw	low(STR_13)
  1749  000430  0E7C               	movwf	((c:UART_Write_Text@text)),c
  1750  000432  6E06               	movlw	high(STR_13)
  1751  000434  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1752  000436  6E07               
  1753                           	call	_UART_Write_Text	;wreg free
  1754  000438  EC98  F003         	line	138
  1755                           ;main.c: 138: } else {
  1756                           	goto	l1476
  1757  00043C  EF21  F001         	
  1758                           l134:
  1759  000440                     	line	139
  1760                           	
  1761                           l1538:
  1762  000440                     ;main.c: 139: UART_Write_Text((unsigned char *) "DC POWER\n");
  1763                           		movlw	low(STR_14)
  1764  000440  0E86               	movwf	((c:UART_Write_Text@text)),c
  1765  000442  6E06               	movlw	high(STR_14)
  1766  000444  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1767  000446  6E07               
  1768                           	call	_UART_Write_Text	;wreg free
  1769  000448  EC98  F003         	goto	l1476
  1770  00044C  EF21  F001         	line	140
  1771                           	
  1772                           l135:
  1773  000450                     	goto	l1476
  1774  000450  EF21  F001         	line	141
  1775                           	
  1776                           l133:
  1777  000454                     	goto	l1476
  1778  000454  EF21  F001         	line	142
  1779                           	
  1780                           l136:
  1781  000458                     	line	93
  1782                           	goto	l1476
  1783  000458  EF21  F001         	
  1784                           l137:
  1785  00045C                     	line	144
  1786                           	
  1787                           l138:
  1788  00045C                     	global	start
  1789                           	goto	start
  1790  00045C  EF3A  F000         	opt stack 0
  1791                           GLOBAL	__end_of_main
  1792                           	__end_of_main:
  1793  000460                     	signat	_main,89
  1794                           	global	_strstr
  1795                           
  1796 ;; *************** function _strstr *****************
  1797 ;; Defined at:
  1798 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  s1              2   19[COMRAM] PTR const unsigned char 
  1801 ;;		 -> NULL(0), UART_buffer(16), 
  1802 ;;  s2              2   21[COMRAM] PTR const unsigned char 
  1803 ;;		 -> STR_7(7), STR_5(6), STR_2(17), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2   19[COMRAM] PTR unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0
  1815 ;;      Params:         4       0
  1816 ;;      Locals:         0       0
  1817 ;;      Temps:          0       0
  1818 ;;      Totals:         4       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    2
  1822 ;; This function calls:
  1823 ;;		_strchr
  1824 ;;		_strlen
  1825 ;;		_strncmp
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           psect	text1,class=CODE,space=0,reloc=2,group=2
  1831                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1832                           	line	4
  1833                           global __ptext1
  1834                           __ptext1:
  1835  000536                     psect	text1
  1836                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1837                           	line	4
  1838                           	global	__size_of_strstr
  1839                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  1840  0000                     	
  1841                           _strstr:
  1842  000536                     ;incstack = 0
  1843                           	opt	stack 28
  1844                           	line	6
  1845                           	
  1846                           l1410:
  1847  000536                     	goto	l1420
  1848  000536  EFD8  F002         	
  1849                           l830:
  1850  00053A                     	line	7
  1851                           	
  1852                           l1412:
  1853  00053A                     		movff	(c:strstr@s1),(c:strncmp@s1)
  1854  00053A  C014  F00B         	movff	(c:strstr@s1+1),(c:strncmp@s1+1)
  1855  00053E  C015  F00C         
  1856                           		movff	(c:strstr@s2),(c:strncmp@s2)
  1857  000542  C016  F00D         	movff	(c:strstr@s2+1),(c:strncmp@s2+1)
  1858  000546  C017  F00E         
  1859                           		movff	(c:strstr@s2),(c:strlen@s)
  1860  00054A  C016  F005         	movff	(c:strstr@s2+1),(c:strlen@s+1)
  1861  00054E  C017  F006         
  1862                           	call	_strlen	;wreg free
  1863  000552  EC43  F004         	movff	0+?_strlen,(c:strncmp@len)
  1864  000556  C005  F00F         	movff	1+?_strlen,(c:strncmp@len+1)
  1865  00055A  C006  F010         	call	_strncmp	;wreg free
  1866  00055E  ECF8  F002         	movf	(0+?_strncmp),c,w
  1867  000562  500B               iorwf	(1+?_strncmp),c,w
  1868  000564  100C               	btfss	status,2
  1869  000566  A4D8               	goto	u661
  1870  000568  EFB8  F002         	goto	u660
  1871  00056C  EFBA  F002         
  1872                           u661:
  1873  000570                     	goto	l1418
  1874  000570  EFC2  F002         u660:
  1875  000574                     	line	8
  1876                           	
  1877                           l1414:
  1878  000574                     		movff	(c:strstr@s1),(c:?_strstr)
  1879  000574  C014  F014         	movff	(c:strstr@s1+1),(c:?_strstr+1)
  1880  000578  C015  F015         
  1881                           	goto	l832
  1882  00057C  EFF7  F002         	
  1883                           l1416:
  1884  000580                     	goto	l832
  1885  000580  EFF7  F002         	
  1886                           l831:
  1887  000584                     	line	9
  1888                           	
  1889                           l1418:
  1890  000584                     	movlw	low(01h)
  1891  000584  0E01               	addwf	((c:strstr@s1)),c,w
  1892  000586  2414               	movwf	((c:strchr@ptr)),c
  1893  000588  6E05               	movlw	high(01h)
  1894  00058A  0E00               	addwfc	((c:strstr@s1+1)),c,w
  1895  00058C  2015               	movwf	1+((c:strchr@ptr)),c
  1896  00058E  6E06               	movff	(c:strstr@s2),tblptrl
  1897  000590  C016  FFF6         	movff	(c:strstr@s2+1),tblptrh
  1898  000594  C017  FFF7         	if	0	;tblptru may be non-zero
  1899  000598                     	clrf	tblptru
  1901  000598                     	if	0	;tblptru may be non-zero
  1902  000598                     	global __mediumconst
  1903                           movlw	low highword(__mediumconst)
  1906  000598                     	tblrd	*
  1907  000598  0008               	
  1908                           	movf	tablat,w
  1909  00059A  50F5               
  1910                           	movwf	((c:strchr@chr)),c
  1911  00059C  6E07               	clrf	((c:strchr@chr+1)),c
  1912  00059E  6A08               	call	_strchr	;wreg free
  1913  0005A0  EC17  F004         	movff	0+?_strchr,(c:strstr@s1)
  1914  0005A4  C005  F014         	movff	1+?_strchr,(c:strstr@s1+1)
  1915  0005A8  C006  F015         	goto	l1420
  1916  0005AC  EFD8  F002         	line	10
  1917                           	
  1918                           l829:
  1919  0005B0                     	line	6
  1920                           	
  1921                           l1420:
  1922  0005B0                     	movf	((c:strstr@s1)),c,w
  1923  0005B0  5014               iorwf	((c:strstr@s1+1)),c,w
  1924  0005B2  1015               	btfsc	status,2
  1925  0005B4  B4D8               	goto	u671
  1926  0005B6  EFDF  F002         	goto	u670
  1927  0005BA  EFE1  F002         
  1928                           u671:
  1929  0005BE                     	goto	l1424
  1930  0005BE  EFF1  F002         u670:
  1931  0005C2                     	
  1932                           l1422:
  1933  0005C2                     	movff	(c:strstr@s1),fsr2l
  1934  0005C2  C014  FFD9         	movff	(c:strstr@s1+1),fsr2h
  1935  0005C6  C015  FFDA         	movf	indf2,w
  1936  0005CA  50DF               	btfss	status,2
  1937  0005CC  A4D8               	goto	u681
  1938  0005CE  EFEB  F002         	goto	u680
  1939  0005D2  EFED  F002         u681:
  1940  0005D6                     	goto	l1412
  1941  0005D6  EF9D  F002         u680:
  1942  0005DA                     	goto	l1424
  1943  0005DA  EFF1  F002         	
  1944                           l834:
  1945  0005DE                     	goto	l1424
  1946  0005DE  EFF1  F002         	
  1947                           l835:
  1948  0005E2                     	line	11
  1949                           	
  1950                           l1424:
  1951  0005E2                     		movlw	low(0)
  1952  0005E2  0E00               	movwf	((c:?_strstr)),c
  1953  0005E4  6E14               	movlw	high(0)
  1954  0005E6  0E00               	movwf	((c:?_strstr+1)),c
  1955  0005E8  6E15               
  1956                           	goto	l832
  1957  0005EA  EFF7  F002         	
  1958                           l1426:
  1959  0005EE                     	line	12
  1960                           	
  1961                           l832:
  1962  0005EE                     	return	;funcret
  1963  0005EE  0012               	opt stack 0
  1964                           GLOBAL	__end_of_strstr
  1965                           	__end_of_strstr:
  1966  0005F0                     	signat	_strstr,8314
  1967                           	global	_strncmp
  1968                           
  1969 ;; *************** function _strncmp *****************
  1970 ;; Defined at:
  1971 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  1974 ;;		 -> NULL(0), UART_buffer(16), 
  1975 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  1976 ;;		 -> STR_7(7), STR_5(6), STR_2(17), 
  1977 ;;  len             2   14[COMRAM] unsigned int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2   10[COMRAM] int 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0
  1989 ;;      Params:         6       0
  1990 ;;      Locals:         0       0
  1991 ;;      Temps:          3       0
  1992 ;;      Totals:         9       0
  1993 ;;Total ram usage:        9 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_strstr
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           psect	text2,class=CODE,space=0,reloc=2,group=2
  2003                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2004                           	line	4
  2005                           global __ptext2
  2006                           __ptext2:
  2007  0005F0                     psect	text2
  2008                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2009                           	line	4
  2010                           	global	__size_of_strncmp
  2011                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  2012  0000                     	
  2013                           _strncmp:
  2014  0005F0                     ;incstack = 0
  2015                           	opt	stack 28
  2016                           	line	6
  2017                           	
  2018                           l1344:
  2019  0005F0                     	goto	l1356
  2020  0005F0  EF3E  F003         	
  2021                           l851:
  2022  0005F4                     	line	7
  2023                           	
  2024                           l1346:
  2025  0005F4                     	movff	(c:strncmp@s1),fsr2l
  2026  0005F4  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2027  0005F8  C00C  FFDA         	movf	indf2,w
  2028  0005FC  50DF               	btfsc	status,2
  2029  0005FE  B4D8               	goto	u551
  2030  000600  EF04  F003         	goto	u550
  2031  000604  EF06  F003         u551:
  2032  000608                     	goto	l1350
  2033  000608  EF1C  F003         u550:
  2034  00060C                     	
  2035                           l1348:
  2036  00060C                     	movff	(c:strncmp@s1),fsr2l
  2037  00060C  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2038  000610  C00C  FFDA         	movf	indf2,w
  2039  000614  50DF               	movwf	(??_strncmp+0+0)&0ffh,c
  2040  000616  6E11               	movff	(c:strncmp@s2),tblptrl
  2041  000618  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2042  00061C  C00E  FFF7         	if	0	;tblptru may be non-zero
  2043  000620                     	clrf	tblptru
  2045  000620                     	if	0	;tblptru may be non-zero
  2046  000620                     	global __mediumconst
  2047                           movlw	low highword(__mediumconst)
  2050  000620                     	tblrd	*
  2051  000620  0008               	
  2052                           	movf	tablat,w
  2053  000622  50F5               	xorwf	((??_strncmp+0+0)),c,w
  2054  000624  1811               
  2055                           	btfsc	status,2
  2056  000626  B4D8               	goto	u561
  2057  000628  EF18  F003         	goto	u560
  2058  00062C  EF1A  F003         u561:
  2059  000630                     	goto	l1354
  2060  000630  EF38  F003         u560:
  2061  000634                     	goto	l1350
  2062  000634  EF1C  F003         	
  2063                           l854:
  2064  000638                     	line	8
  2065                           	
  2066                           l1350:
  2067  000638                     	movff	(c:strncmp@s2),tblptrl
  2068  000638  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2069  00063C  C00E  FFF7         	if	0	;tblptru may be non-zero
  2070  000640                     	clrf	tblptru
  2072  000640                     	if	0	;tblptru may be non-zero
  2073  000640                     	global __mediumconst
  2074                           movlw	low highword(__mediumconst)
  2077  000640                     	tblrd	*
  2078  000640  0008               	
  2079                           	movf	tablat,w
  2080  000642  50F5               	movwf	(??_strncmp+0+0)&0ffh,c
  2081  000644  6E11               	clrf	(??_strncmp+0+0+1)&0ffh,c
  2082  000646  6A12               
  2083                           	comf	(??_strncmp+0+0),c
  2084  000648  1E11               	comf	(??_strncmp+0+1),c
  2085  00064A  1E12               	infsnz	(??_strncmp+0+0),c
  2086  00064C  4A11               	incf	(??_strncmp+0+1),c
  2087  00064E  2A12               	movff	(c:strncmp@s1),fsr2l
  2088  000650  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2089  000654  C00C  FFDA         	movf	indf2,w
  2090  000658  50DF               	movwf	(??_strncmp+2+0)&0ffh,c
  2091  00065A  6E13               	movf	((??_strncmp+2+0)),c,w
  2092  00065C  5013               	addwf	(??_strncmp+0+0),c,w
  2093  00065E  2411               	movwf	((c:?_strncmp)),c
  2094  000660  6E0B               	movlw	0
  2095  000662  0E00               	addwfc	(??_strncmp+0+1),c,w
  2096  000664  2012               	movwf	1+((c:?_strncmp)),c
  2097  000666  6E0C               	goto	l855
  2098  000668  EF53  F003         	
  2099                           l1352:
  2100  00066C                     	goto	l855
  2101  00066C  EF53  F003         	
  2102                           l852:
  2103  000670                     	line	10
  2104                           	
  2105                           l1354:
  2106  000670                     	infsnz	((c:strncmp@s1)),c
  2107  000670  4A0B               	incf	((c:strncmp@s1+1)),c
  2108  000672  2A0C               	line	11
  2109                           	infsnz	((c:strncmp@s2)),c
  2110  000674  4A0D               	incf	((c:strncmp@s2+1)),c
  2111  000676  2A0E               	goto	l1356
  2112  000678  EF3E  F003         	line	12
  2113                           	
  2114                           l850:
  2115  00067C                     	line	6
  2116                           	
  2117                           l1356:
  2118  00067C                     	decf	((c:strncmp@len)),c
  2119  00067C  060F               	btfss	status,0
  2120  00067E  A0D8               	decf	((c:strncmp@len+1)),c
  2121  000680  0610               		incf	((c:strncmp@len)),c,w
  2122  000682  280F               	bnz	u571
  2123  000684  E106               	incf	((c:strncmp@len+1)),c,w
  2124  000686  2810               	btfss	status,2
  2125  000688  A4D8               	goto	u571
  2126  00068A  EF49  F003         	goto	u570
  2127  00068E  EF4B  F003         
  2128                           u571:
  2129  000692                     	goto	l1346
  2130  000692  EFFA  F002         u570:
  2131  000696                     	goto	l1358
  2132  000696  EF4D  F003         	
  2133                           l856:
  2134  00069A                     	line	13
  2135                           	
  2136                           l1358:
  2137  00069A                     	movlw	high(0)
  2138  00069A  0E00               	movwf	((c:?_strncmp+1)),c
  2139  00069C  6E0C               	movlw	low(0)
  2140  00069E  0E00               	movwf	((c:?_strncmp)),c
  2141  0006A0  6E0B               	goto	l855
  2142  0006A2  EF53  F003         	
  2143                           l1360:
  2144  0006A6                     	line	14
  2145                           	
  2146                           l855:
  2147  0006A6                     	return	;funcret
  2148  0006A6  0012               	opt stack 0
  2149                           GLOBAL	__end_of_strncmp
  2150                           	__end_of_strncmp:
  2151  0006A8                     	signat	_strncmp,12410
  2152                           	global	_strlen
  2153                           
  2154 ;; *************** function _strlen *****************
  2155 ;; Defined at:
  2156 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2159 ;;		 -> STR_7(7), STR_5(6), STR_2(17), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  cp              2    8[COMRAM] PTR const unsigned char 
  2162 ;;		 -> STR_7(7), STR_5(6), STR_2(17), 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    4[COMRAM] unsigned int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0
  2172 ;;      Params:         2       0
  2173 ;;      Locals:         2       0
  2174 ;;      Temps:          2       0
  2175 ;;      Totals:         6       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_strstr
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           psect	text3,class=CODE,space=0,reloc=2,group=2
  2186                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2187                           	line	4
  2188                           global __ptext3
  2189                           __ptext3:
  2190  000886                     psect	text3
  2191                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2192                           	line	4
  2193                           	global	__size_of_strlen
  2194                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  2195  0000                     	
  2196                           _strlen:
  2197  000886                     ;incstack = 0
  2198                           	opt	stack 28
  2199                           	line	8
  2200                           	
  2201                           l1334:
  2202  000886                     		movff	(c:strlen@s),(c:strlen@cp)
  2203  000886  C005  F009         	movff	(c:strlen@s+1),(c:strlen@cp+1)
  2204  00088A  C006  F00A         
  2205                           	line	9
  2206                           	goto	l1338
  2207  00088E  EF4D  F004         	
  2208                           l845:
  2209  000892                     	line	10
  2210                           	
  2211                           l1336:
  2212  000892                     	infsnz	((c:strlen@cp)),c
  2213  000892  4A09               	incf	((c:strlen@cp+1)),c
  2214  000894  2A0A               	goto	l1338
  2215  000896  EF4D  F004         	line	11
  2216                           	
  2217                           l844:
  2218  00089A                     	line	9
  2219                           	
  2220                           l1338:
  2221  00089A                     	movff	(c:strlen@cp),tblptrl
  2222  00089A  C009  FFF6         	movff	(c:strlen@cp+1),tblptrh
  2223  00089E  C00A  FFF7         	if	0	;tblptru may be non-zero
  2224  0008A2                     	clrf	tblptru
  2226  0008A2                     	if	0	;tblptru may be non-zero
  2227  0008A2                     	global __mediumconst
  2228                           movlw	low highword(__mediumconst)
  2231  0008A2                     	tblrd	*
  2232  0008A2  0008               	
  2233                           	movf	tablat,w
  2234  0008A4  50F5               	iorlw	0
  2235  0008A6  0900               	btfss	status,2
  2236  0008A8  A4D8               	goto	u541
  2237  0008AA  EF59  F004         	goto	u540
  2238  0008AE  EF5B  F004         u541:
  2239  0008B2                     	goto	l1336
  2240  0008B2  EF49  F004         u540:
  2241  0008B6                     	goto	l1340
  2242  0008B6  EF5D  F004         	
  2243                           l846:
  2244  0008BA                     	line	12
  2245                           	
  2246                           l1340:
  2247  0008BA                     	movff	(c:strlen@s),??_strlen+0+0
  2248  0008BA  C005  F007         	movff	(c:strlen@s+1),??_strlen+0+0+1
  2249  0008BE  C006  F008         	comf	(??_strlen+0+0),c
  2250  0008C2  1E07               	comf	(??_strlen+0+1),c
  2251  0008C4  1E08               	infsnz	(??_strlen+0+0),c
  2252  0008C6  4A07               	incf	(??_strlen+0+1),c
  2253  0008C8  2A08               	movf	((c:strlen@cp)),c,w
  2254  0008CA  5009               	addwf	(??_strlen+0+0),c,w
  2255  0008CC  2407               	movwf	((c:?_strlen)),c
  2256  0008CE  6E05               	movf	((c:strlen@cp+1)),c,w
  2257  0008D0  500A               	addwfc	(??_strlen+0+1),c,w
  2258  0008D2  2008               	movwf	1+((c:?_strlen)),c
  2259  0008D4  6E06               	goto	l847
  2260  0008D6  EF6D  F004         	
  2261                           l1342:
  2262  0008DA                     	line	13
  2263                           	
  2264                           l847:
  2265  0008DA                     	return	;funcret
  2266  0008DA  0012               	opt stack 0
  2267                           GLOBAL	__end_of_strlen
  2268                           	__end_of_strlen:
  2269  0008DC                     	signat	_strlen,4218
  2270                           	global	_strchr
  2271                           
  2272 ;; *************** function _strchr *****************
  2273 ;; Defined at:
  2274 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  2277 ;;		 -> NULL(0), UART_buffer(16), 
  2278 ;;  chr             2    6[COMRAM] int 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2    4[COMRAM] PTR unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0
  2290 ;;      Params:         4       0
  2291 ;;      Locals:         0       0
  2292 ;;      Temps:          1       0
  2293 ;;      Totals:         5       0
  2294 ;;Total ram usage:        5 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_strstr
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           psect	text4,class=CODE,space=0,reloc=2,group=2
  2304                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2305                           	line	4
  2306                           global __ptext4
  2307                           __ptext4:
  2308  00082E                     psect	text4
  2309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2310                           	line	4
  2311                           	global	__size_of_strchr
  2312                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  2313  0000                     	
  2314                           _strchr:
  2315  00082E                     ;incstack = 0
  2316                           	opt	stack 28
  2317                           	line	6
  2318                           	
  2319                           l838:
  2320  00082E                     	line	7
  2321                           	
  2322                           l1362:
  2323  00082E                     	movff	(c:strchr@ptr),fsr2l
  2324  00082E  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  2325  000832  C006  FFDA         	movf	((c:strchr@chr)),c,w
  2326  000836  5007               xorwf	postinc2,w
  2327  000838  18DE               	btfss	status,2
  2328  00083A  A4D8               	goto	u581
  2329  00083C  EF22  F004         	goto	u580
  2330  000840  EF24  F004         
  2331                           u581:
  2332  000844                     	goto	l1368
  2333  000844  EF2C  F004         u580:
  2334  000848                     	line	8
  2335                           	
  2336                           l1364:
  2337  000848                     		movff	(c:strchr@ptr),(c:?_strchr)
  2338  000848  C005  F005         	movff	(c:strchr@ptr+1),(c:?_strchr+1)
  2339  00084C  C006  F006         
  2340                           	goto	l840
  2341  000850  EF42  F004         	
  2342                           l1366:
  2343  000854                     	goto	l840
  2344  000854  EF42  F004         	
  2345                           l839:
  2346  000858                     	line	9
  2347                           	
  2348                           l1368:
  2349  000858                     	movff	(c:strchr@ptr),fsr2l
  2350  000858  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  2351  00085C  C006  FFDA         	infsnz	((c:strchr@ptr)),c
  2352  000860  4A05               	incf	((c:strchr@ptr+1)),c
  2353  000862  2A06               	movf	indf2,w
  2354  000864  50DF               	btfss	status,2
  2355  000866  A4D8               	goto	u591
  2356  000868  EF38  F004         	goto	u590
  2357  00086C  EF3A  F004         u591:
  2358  000870                     	goto	l838
  2359  000870  EF17  F004         u590:
  2360  000874                     	goto	l1370
  2361  000874  EF3C  F004         	
  2362                           l841:
  2363  000878                     	line	10
  2364                           	
  2365                           l1370:
  2366  000878                     		movlw	low(0)
  2367  000878  0E00               	movwf	((c:?_strchr)),c
  2368  00087A  6E05               	movlw	high(0)
  2369  00087C  0E00               	movwf	((c:?_strchr+1)),c
  2370  00087E  6E06               
  2371                           	goto	l840
  2372  000880  EF42  F004         	
  2373                           l1372:
  2374  000884                     	line	11
  2375                           	
  2376                           l840:
  2377  000884                     	return	;funcret
  2378  000884  0012               	opt stack 0
  2379                           GLOBAL	__end_of_strchr
  2380                           	__end_of_strchr:
  2381  000886                     	signat	_strchr,8314
  2382                           	global	_itoa
  2383                           
  2384 ;; *************** function _itoa *****************
  2385 ;; Defined at:
  2386 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2389 ;;		 -> main@buffer(10), 
  2390 ;;  val             2   22[COMRAM] int 
  2391 ;;  base            2   24[COMRAM] int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  cp              2   26[COMRAM] PTR unsigned char 
  2394 ;;		 -> main@buffer(10), 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2   20[COMRAM] PTR unsigned char 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0
  2404 ;;      Params:         6       0
  2405 ;;      Locals:         2       0
  2406 ;;      Temps:          0       0
  2407 ;;      Totals:         8       0
  2408 ;;Total ram usage:        8 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    3
  2411 ;; This function calls:
  2412 ;;		_utoa
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           psect	text5,class=CODE,space=0,reloc=2,group=2
  2418                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2419                           	line	4
  2420                           global __ptext5
  2421                           __ptext5:
  2422  0008DC                     psect	text5
  2423                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2424                           	line	4
  2425                           	global	__size_of_itoa
  2426                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  2427  0000                     	
  2428                           _itoa:
  2429  0008DC                     ;incstack = 0
  2430                           	opt	stack 27
  2431                           	line	6
  2432                           	
  2433                           l1428:
  2434  0008DC                     		movff	(c:itoa@buf),(c:itoa@cp)
  2435  0008DC  C015  F01B         	movff	(c:itoa@buf+1),(c:itoa@cp+1)
  2436  0008E0  C016  F01C         
  2437                           	line	8
  2438                           	btfsc	((c:itoa@val+1)),c,7
  2439  0008E4  BE18               	goto	u690
  2440  0008E6  EF79  F004         	goto	u691
  2441  0008EA  EF77  F004         
  2442                           u691:
  2443  0008EE                     	goto	l1436
  2444  0008EE  EF87  F004         u690:
  2445  0008F2                     	line	9
  2446                           	
  2447                           l1430:
  2448  0008F2                     	movff	(c:itoa@buf),fsr2l
  2449  0008F2  C015  FFD9         	movff	(c:itoa@buf+1),fsr2h
  2450  0008F6  C016  FFDA         	movlw	low(02Dh)
  2451  0008FA  0E2D               	movwf	indf2
  2452  0008FC  6EDF               	
  2453                           l1432:
  2454  0008FE                     	infsnz	((c:itoa@buf)),c
  2455  0008FE  4A15               	incf	((c:itoa@buf+1)),c
  2456  000900  2A16               	line	10
  2457                           	
  2458                           l1434:
  2459  000902                     	negf	((c:itoa@val)),c
  2460  000902  6C17               	comf	((c:itoa@val+1)),c
  2461  000904  1E18               	btfsc	status,0
  2462  000906  B0D8               	incf	((c:itoa@val+1)),c
  2463  000908  2A18               	goto	l1436
  2464  00090A  EF87  F004         	line	11
  2465                           	
  2466                           l805:
  2467  00090E                     	line	12
  2468                           	
  2469                           l1436:
  2470  00090E                     		movff	(c:itoa@buf),(c:utoa@buf)
  2471  00090E  C015  F00C         	movff	(c:itoa@buf+1),(c:utoa@buf+1)
  2472  000912  C016  F00D         
  2473                           	movff	(c:itoa@val),(c:utoa@val)
  2474  000916  C017  F00E         	movff	(c:itoa@val+1),(c:utoa@val+1)
  2475  00091A  C018  F00F         	movff	(c:itoa@base),(c:utoa@base)
  2476  00091E  C019  F010         	movff	(c:itoa@base+1),(c:utoa@base+1)
  2477  000922  C01A  F011         	call	_utoa	;wreg free
  2478  000926  EC30  F002         	goto	l806
  2479  00092A  EF97  F004         	line	13
  2480                           	
  2481                           l1438:
  2482  00092E                     	line	14
  2483                           ;	Return value of _itoa is never used
  2484                           	
  2485                           l806:
  2486  00092E                     	return	;funcret
  2487  00092E  0012               	opt stack 0
  2488                           GLOBAL	__end_of_itoa
  2489                           	__end_of_itoa:
  2490  000930                     	signat	_itoa,12410
  2491                           	global	_utoa
  2492                           
  2493 ;; *************** function _utoa *****************
  2494 ;; Defined at:
  2495 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  buf             2   11[COMRAM] PTR unsigned char 
  2498 ;;		 -> main@buffer(10), 
  2499 ;;  val             2   13[COMRAM] unsigned int 
  2500 ;;  base            2   15[COMRAM] int 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  v               2   17[COMRAM] unsigned int 
  2503 ;;  c               1   19[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  2   11[COMRAM] PTR unsigned char 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0
  2513 ;;      Params:         6       0
  2514 ;;      Locals:         3       0
  2515 ;;      Temps:          0       0
  2516 ;;      Totals:         9       0
  2517 ;;Total ram usage:        9 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    2
  2520 ;; This function calls:
  2521 ;;		___lwdiv
  2522 ;;		___lwmod
  2523 ;; This function is called by:
  2524 ;;		_itoa
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           psect	text6,class=CODE,space=0,reloc=2,group=2
  2528                           	line	17
  2529                           global __ptext6
  2530                           __ptext6:
  2531  000460                     psect	text6
  2532                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2533                           	line	17
  2534                           	global	__size_of_utoa
  2535                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2536  0000                     	
  2537                           _utoa:
  2538  000460                     ;incstack = 0
  2539                           	opt	stack 27
  2540                           	line	22
  2541                           	
  2542                           l1304:
  2543  000460                     	movff	(c:utoa@val),(c:utoa@v)
  2544  000460  C00E  F012         	movff	(c:utoa@val+1),(c:utoa@v+1)
  2545  000464  C00F  F013         	goto	l1306
  2546  000468  EF36  F002         	line	23
  2547                           	
  2548                           l809:
  2549  00046C                     	line	24
  2550                           	
  2551                           l1306:
  2552  00046C                     	movff	(c:utoa@v),(c:___lwdiv@dividend)
  2553  00046C  C012  F005         	movff	(c:utoa@v+1),(c:___lwdiv@dividend+1)
  2554  000470  C013  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  2555  000474  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  2556  000478  C011  F008         	call	___lwdiv	;wreg free
  2557  00047C  EC54  F003         	movff	0+?___lwdiv,(c:utoa@v)
  2558  000480  C005  F012         	movff	1+?___lwdiv,(c:utoa@v+1)
  2559  000484  C006  F013         	line	25
  2560                           	
  2561                           l1308:
  2562  000488                     	infsnz	((c:utoa@buf)),c
  2563  000488  4A0C               	incf	((c:utoa@buf+1)),c
  2564  00048A  2A0D               	line	26
  2565                           	
  2566                           l1310:
  2567  00048C                     	movf	((c:utoa@v)),c,w
  2568  00048C  5012               iorwf	((c:utoa@v+1)),c,w
  2569  00048E  1013               	btfss	status,2
  2570  000490  A4D8               	goto	u511
  2571  000492  EF4D  F002         	goto	u510
  2572  000496  EF4F  F002         
  2573                           u511:
  2574  00049A                     	goto	l1306
  2575  00049A  EF36  F002         u510:
  2576  00049E                     	goto	l1312
  2577  00049E  EF51  F002         	
  2578                           l810:
  2579  0004A2                     	line	27
  2580                           	
  2581                           l1312:
  2582  0004A2                     	movff	(c:utoa@buf),fsr2l
  2583  0004A2  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  2584  0004A6  C00D  FFDA         	movlw	low(0)
  2585  0004AA  0E00               	movwf	indf2
  2586  0004AC  6EDF               	
  2587                           l1314:
  2588  0004AE                     	decf	((c:utoa@buf)),c
  2589  0004AE  060C               	btfss	status,0
  2590  0004B0  A0D8               	decf	((c:utoa@buf+1)),c
  2591  0004B2  060D               	goto	l1316
  2592  0004B4  EF5C  F002         	line	28
  2593                           	
  2594                           l811:
  2595  0004B8                     	line	29
  2596                           	
  2597                           l1316:
  2598  0004B8                     	movff	(c:utoa@val),(c:___lwmod@dividend)
  2599  0004B8  C00E  F005         	movff	(c:utoa@val+1),(c:___lwmod@dividend+1)
  2600  0004BC  C00F  F006         	movff	(c:utoa@base),(c:___lwmod@divisor)
  2601  0004C0  C010  F007         	movff	(c:utoa@base+1),(c:___lwmod@divisor+1)
  2602  0004C4  C011  F008         	call	___lwmod	;wreg free
  2603  0004C8  ECDB  F003         	movf	(0+?___lwmod),c,w
  2604  0004CC  5005               	movwf	((c:utoa@c)),c
  2605  0004CE  6E14               	line	30
  2606                           	
  2607                           l1318:
  2608  0004D0                     	movff	(c:utoa@val),(c:___lwdiv@dividend)
  2609  0004D0  C00E  F005         	movff	(c:utoa@val+1),(c:___lwdiv@dividend+1)
  2610  0004D4  C00F  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  2611  0004D8  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  2612  0004DC  C011  F008         	call	___lwdiv	;wreg free
  2613  0004E0  EC54  F003         	movff	0+?___lwdiv,(c:utoa@val)
  2614  0004E4  C005  F00E         	movff	1+?___lwdiv,(c:utoa@val+1)
  2615  0004E8  C006  F00F         	line	31
  2616                           	
  2617                           l1320:
  2618  0004EC                     		movlw	0Ah-1
  2619  0004EC  0E09               	cpfsgt	((c:utoa@c)),c
  2620  0004EE  6414               	goto	u521
  2621  0004F0  EF7C  F002         	goto	u520
  2622  0004F4  EF7E  F002         
  2623                           u521:
  2624  0004F8                     	goto	l812
  2625  0004F8  EF80  F002         u520:
  2626  0004FC                     	line	32
  2627                           	
  2628                           l1322:
  2629  0004FC                     	movlw	(07h)&0ffh
  2630  0004FC  0E07               	addwf	((c:utoa@c)),c
  2631  0004FE  2614               	
  2632                           l812:
  2633  000500                     	line	33
  2634                           	movlw	(030h)&0ffh
  2635  000500  0E30               	addwf	((c:utoa@c)),c
  2636  000502  2614               	line	34
  2637                           	
  2638                           l1324:
  2639  000504                     	movff	(c:utoa@buf),fsr2l
  2640  000504  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  2641  000508  C00D  FFDA         	movff	(c:utoa@c),indf2
  2642  00050C  C014  FFDF         
  2643                           	
  2644                           l1326:
  2645  000510                     	decf	((c:utoa@buf)),c
  2646  000510  060C               	btfss	status,0
  2647  000512  A0D8               	decf	((c:utoa@buf+1)),c
  2648  000514  060D               	line	35
  2649                           	
  2650                           l1328:
  2651  000516                     	movf	((c:utoa@val)),c,w
  2652  000516  500E               iorwf	((c:utoa@val+1)),c,w
  2653  000518  100F               	btfss	status,2
  2654  00051A  A4D8               	goto	u531
  2655  00051C  EF92  F002         	goto	u530
  2656  000520  EF94  F002         
  2657                           u531:
  2658  000524                     	goto	l1316
  2659  000524  EF5C  F002         u530:
  2660  000528                     	goto	l1330
  2661  000528  EF96  F002         	
  2662                           l813:
  2663  00052C                     	line	36
  2664                           	
  2665                           l1330:
  2666  00052C                     ;	Return value of _utoa is never used
  2667                           	infsnz	((c:utoa@buf)),c
  2668  00052C  4A0C               	incf	((c:utoa@buf+1)),c
  2669  00052E  2A0D               	goto	l814
  2670  000530  EF9A  F002         	
  2671                           l1332:
  2672  000534                     	line	37
  2673                           	
  2674                           l814:
  2675  000534                     	return	;funcret
  2676  000534  0012               	opt stack 0
  2677                           GLOBAL	__end_of_utoa
  2678                           	__end_of_utoa:
  2679  000536                     	signat	_utoa,12410
  2680                           	global	___lwmod
  2681                           
  2682 ;; *************** function ___lwmod *****************
  2683 ;; Defined at:
  2684 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  dividend        2    4[COMRAM] unsigned int 
  2687 ;;  divisor         2    6[COMRAM] unsigned int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  counter         1    8[COMRAM] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    4[COMRAM] unsigned int 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0
  2699 ;;      Params:         4       0
  2700 ;;      Locals:         1       0
  2701 ;;      Temps:          0       0
  2702 ;;      Totals:         5       0
  2703 ;;Total ram usage:        5 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_utoa
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           psect	text7,class=CODE,space=0,reloc=2,group=1
  2713                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2714                           	line	7
  2715                           global __ptext7
  2716                           __ptext7:
  2717  0007B6                     psect	text7
  2718                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2719                           	line	7
  2720                           	global	__size_of___lwmod
  2721                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2722  0000                     	
  2723                           ___lwmod:
  2724  0007B6                     ;incstack = 0
  2725                           	opt	stack 27
  2726                           	line	12
  2727                           	
  2728                           l1274:
  2729  0007B6                     	movf	((c:___lwmod@divisor)),c,w
  2730  0007B6  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  2731  0007B8  1008               	btfsc	status,2
  2732  0007BA  B4D8               	goto	u461
  2733  0007BC  EFE2  F003         	goto	u460
  2734  0007C0  EFE4  F003         
  2735                           u461:
  2736  0007C4                     	goto	l630
  2737  0007C4  EF12  F004         u460:
  2738  0007C8                     	line	13
  2739                           	
  2740                           l1276:
  2741  0007C8                     	movlw	low(01h)
  2742  0007C8  0E01               	movwf	((c:___lwmod@counter)),c
  2743  0007CA  6E09               	line	14
  2744                           	goto	l1280
  2745  0007CC  EFEE  F003         	
  2746                           l632:
  2747  0007D0                     	line	15
  2748                           	
  2749                           l1278:
  2750  0007D0                     	bcf	status,0
  2751  0007D0  90D8               	rlcf	((c:___lwmod@divisor)),c
  2752  0007D2  3607               	rlcf	((c:___lwmod@divisor+1)),c
  2753  0007D4  3608               	line	16
  2754                           	incf	((c:___lwmod@counter)),c
  2755  0007D6  2A09               	goto	l1280
  2756  0007D8  EFEE  F003         	line	17
  2757                           	
  2758                           l631:
  2759  0007DC                     	line	14
  2760                           	
  2761                           l1280:
  2762  0007DC                     	
  2763                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  2764  0007DC  AE08               	goto	u471
  2765  0007DE  EFF3  F003         	goto	u470
  2766  0007E2  EFF5  F003         u471:
  2767  0007E6                     	goto	l1278
  2768  0007E6  EFE8  F003         u470:
  2769  0007EA                     	goto	l1282
  2770  0007EA  EFF9  F003         	
  2771                           l633:
  2772  0007EE                     	goto	l1282
  2773  0007EE  EFF9  F003         	line	18
  2774                           	
  2775                           l634:
  2776  0007F2                     	line	19
  2777                           	
  2778                           l1282:
  2779  0007F2                     		movf	((c:___lwmod@divisor)),c,w
  2780  0007F2  5007               	subwf	((c:___lwmod@dividend)),c,w
  2781  0007F4  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  2782  0007F6  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  2783  0007F8  5806               	btfss	status,0
  2784  0007FA  A0D8               	goto	u481
  2785  0007FC  EF02  F004         	goto	u480
  2786  000800  EF04  F004         
  2787                           u481:
  2788  000804                     	goto	l1286
  2789  000804  EF0A  F004         u480:
  2790  000808                     	line	20
  2791                           	
  2792                           l1284:
  2793  000808                     	movf	((c:___lwmod@divisor)),c,w
  2794  000808  5007               	subwf	((c:___lwmod@dividend)),c
  2795  00080A  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  2796  00080C  5008               	subwfb	((c:___lwmod@dividend+1)),c
  2797  00080E  5A06               
  2798                           	goto	l1286
  2799  000810  EF0A  F004         	
  2800                           l635:
  2801  000814                     	line	21
  2802                           	
  2803                           l1286:
  2804  000814                     	bcf	status,0
  2805  000814  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  2806  000816  3208               	rrcf	((c:___lwmod@divisor)),c
  2807  000818  3207               	line	22
  2808                           	
  2809                           l1288:
  2810  00081A                     	decfsz	((c:___lwmod@counter)),c
  2811  00081A  2E09               	
  2812                           	goto	l1282
  2813  00081C  EFF9  F003         	goto	l630
  2814  000820  EF12  F004         	
  2815                           l636:
  2816  000824                     	line	23
  2817                           	
  2818                           l630:
  2819  000824                     	line	24
  2820                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  2821  000824  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  2822  000828  C006  F006         	line	25
  2823                           	
  2824                           l637:
  2825  00082C                     	return	;funcret
  2826  00082C  0012               	opt stack 0
  2827                           GLOBAL	__end_of___lwmod
  2828                           	__end_of___lwmod:
  2829  00082E                     	signat	___lwmod,8314
  2830                           	global	___lwdiv
  2831                           
  2832 ;; *************** function ___lwdiv *****************
  2833 ;; Defined at:
  2834 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  dividend        2    4[COMRAM] unsigned int 
  2837 ;;  divisor         2    6[COMRAM] unsigned int 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  quotient        2    8[COMRAM] unsigned int 
  2840 ;;  counter         1   10[COMRAM] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    4[COMRAM] unsigned int 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0
  2850 ;;      Params:         4       0
  2851 ;;      Locals:         3       0
  2852 ;;      Temps:          0       0
  2853 ;;      Totals:         7       0
  2854 ;;Total ram usage:        7 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_utoa
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           psect	text8,class=CODE,space=0,reloc=2,group=1
  2864                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2865                           	line	7
  2866                           global __ptext8
  2867                           __ptext8:
  2868  0006A8                     psect	text8
  2869                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2870                           	line	7
  2871                           	global	__size_of___lwdiv
  2872                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2873  0000                     	
  2874                           ___lwdiv:
  2875  0006A8                     ;incstack = 0
  2876                           	opt	stack 27
  2877                           	line	13
  2878                           	
  2879                           l1252:
  2880  0006A8                     	movlw	high(0)
  2881  0006A8  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  2882  0006AA  6E0A               	movlw	low(0)
  2883  0006AC  0E00               	movwf	((c:___lwdiv@quotient)),c
  2884  0006AE  6E09               	line	14
  2885                           	
  2886                           l1254:
  2887  0006B0                     	movf	((c:___lwdiv@divisor)),c,w
  2888  0006B0  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  2889  0006B2  1008               	btfsc	status,2
  2890  0006B4  B4D8               	goto	u431
  2891  0006B6  EF5F  F003         	goto	u430
  2892  0006BA  EF61  F003         
  2893                           u431:
  2894  0006BE                     	goto	l620
  2895  0006BE  EF93  F003         u430:
  2896  0006C2                     	line	15
  2897                           	
  2898                           l1256:
  2899  0006C2                     	movlw	low(01h)
  2900  0006C2  0E01               	movwf	((c:___lwdiv@counter)),c
  2901  0006C4  6E0B               	line	16
  2902                           	goto	l1260
  2903  0006C6  EF6B  F003         	
  2904                           l622:
  2905  0006CA                     	line	17
  2906                           	
  2907                           l1258:
  2908  0006CA                     	bcf	status,0
  2909  0006CA  90D8               	rlcf	((c:___lwdiv@divisor)),c
  2910  0006CC  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  2911  0006CE  3608               	line	18
  2912                           	incf	((c:___lwdiv@counter)),c
  2913  0006D0  2A0B               	goto	l1260
  2914  0006D2  EF6B  F003         	line	19
  2915                           	
  2916                           l621:
  2917  0006D6                     	line	16
  2918                           	
  2919                           l1260:
  2920  0006D6                     	
  2921                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  2922  0006D6  AE08               	goto	u441
  2923  0006D8  EF70  F003         	goto	u440
  2924  0006DC  EF72  F003         u441:
  2925  0006E0                     	goto	l1258
  2926  0006E0  EF65  F003         u440:
  2927  0006E4                     	goto	l1262
  2928  0006E4  EF76  F003         	
  2929                           l623:
  2930  0006E8                     	goto	l1262
  2931  0006E8  EF76  F003         	line	20
  2932                           	
  2933                           l624:
  2934  0006EC                     	line	21
  2935                           	
  2936                           l1262:
  2937  0006EC                     	bcf	status,0
  2938  0006EC  90D8               	rlcf	((c:___lwdiv@quotient)),c
  2939  0006EE  3609               	rlcf	((c:___lwdiv@quotient+1)),c
  2940  0006F0  360A               	line	22
  2941                           	
  2942                           l1264:
  2943  0006F2                     		movf	((c:___lwdiv@divisor)),c,w
  2944  0006F2  5007               	subwf	((c:___lwdiv@dividend)),c,w
  2945  0006F4  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  2946  0006F6  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  2947  0006F8  5806               	btfss	status,0
  2948  0006FA  A0D8               	goto	u451
  2949  0006FC  EF82  F003         	goto	u450
  2950  000700  EF84  F003         
  2951                           u451:
  2952  000704                     	goto	l1270
  2953  000704  EF8B  F003         u450:
  2954  000708                     	line	23
  2955                           	
  2956                           l1266:
  2957  000708                     	movf	((c:___lwdiv@divisor)),c,w
  2958  000708  5007               	subwf	((c:___lwdiv@dividend)),c
  2959  00070A  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  2960  00070C  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  2961  00070E  5A06               
  2962                           	line	24
  2963                           	
  2964                           l1268:
  2965  000710                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  2966  000710  8009               	goto	l1270
  2967  000712  EF8B  F003         	line	25
  2968                           	
  2969                           l625:
  2970  000716                     	line	26
  2971                           	
  2972                           l1270:
  2973  000716                     	bcf	status,0
  2974  000716  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  2975  000718  3208               	rrcf	((c:___lwdiv@divisor)),c
  2976  00071A  3207               	line	27
  2977                           	
  2978                           l1272:
  2979  00071C                     	decfsz	((c:___lwdiv@counter)),c
  2980  00071C  2E0B               	
  2981                           	goto	l1262
  2982  00071E  EF76  F003         	goto	l620
  2983  000722  EF93  F003         	
  2984                           l626:
  2985  000726                     	line	28
  2986                           	
  2987                           l620:
  2988  000726                     	line	29
  2989                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  2990  000726  C009  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  2991  00072A  C00A  F006         	line	30
  2992                           	
  2993                           l627:
  2994  00072E                     	return	;funcret
  2995  00072E  0012               	opt stack 0
  2996                           GLOBAL	__end_of___lwdiv
  2997                           	__end_of___lwdiv:
  2998  000730                     	signat	___lwdiv,8314
  2999                           	global	_delay_us
  3000                           
  3001 ;; *************** function _delay_us *****************
  3002 ;; Defined at:
  3003 ;;		line 10 in file "delay.h"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  repeat_1        2    4[COMRAM] int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0
  3017 ;;      Params:         2       0
  3018 ;;      Locals:         0       0
  3019 ;;      Temps:          0       0
  3020 ;;      Totals:         2       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3031                           	file	"delay.h"
  3032                           	line	10
  3033                           global __ptext9
  3034                           __ptext9:
  3035  000A24                     psect	text9
  3036                           	file	"delay.h"
  3037                           	line	10
  3038                           	global	__size_of_delay_us
  3039                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  3040  0000                     	
  3041                           _delay_us:
  3042  000A24                     ;incstack = 0
  3043                           	opt	stack 29
  3044                           	line	11
  3045                           	
  3046                           l1374:
  3047  000A24                     ;delay.h: 11: while(repeat_1--){
  3048                           	goto	l1376
  3049  000A24  EF1A  F005         	
  3050                           l58:
  3051  000A28                     	line	12
  3052                           ;delay.h: 12: _delay((unsigned long)((1)*(32000000/4000000.0)));
  3053                           		opt asmopt_push
  3054                           	opt asmopt_off
  3055                           	nop2	;2 cycle nop
  3056  000A28  D000               	nop2	;2 cycle nop
  3057  000A2A  D000               	nop2	;2 cycle nop
  3058  000A2C  D000               	nop2	;2 cycle nop
  3059  000A2E  D000               	opt asmopt_pop
  3060                           
  3061                           	goto	l1376
  3062  000A30  EF1A  F005         	line	13
  3063                           	
  3064                           l57:
  3065  000A34                     	line	11
  3066                           	
  3067                           l1376:
  3068  000A34                     	decf	((c:delay_us@repeat_1)),c
  3069  000A34  0605               	btfss	status,0
  3070  000A36  A0D8               	decf	((c:delay_us@repeat_1+1)),c
  3071  000A38  0606               		incf	((c:delay_us@repeat_1)),c,w
  3072  000A3A  2805               	bnz	u601
  3073  000A3C  E106               	incf	((c:delay_us@repeat_1+1)),c,w
  3074  000A3E  2806               	btfss	status,2
  3075  000A40  A4D8               	goto	u601
  3076  000A42  EF25  F005         	goto	u600
  3077  000A46  EF27  F005         
  3078                           u601:
  3079  000A4A                     	goto	l58
  3080  000A4A  EF14  F005         u600:
  3081  000A4E                     	goto	l60
  3082  000A4E  EF29  F005         	
  3083                           l59:
  3084  000A52                     	line	14
  3085                           	
  3086                           l60:
  3087  000A52                     	return	;funcret
  3088  000A52  0012               	opt stack 0
  3089                           GLOBAL	__end_of_delay_us
  3090                           	__end_of_delay_us:
  3091  000A54                     	signat	_delay_us,4217
  3092                           	global	_delay_s
  3093                           
  3094 ;; *************** function _delay_s *****************
  3095 ;; Defined at:
  3096 ;;		line 22 in file "delay.h"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  repeat_3        2    7[COMRAM] int 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0
  3110 ;;      Params:         2       0
  3111 ;;      Locals:         0       0
  3112 ;;      Temps:          0       0
  3113 ;;      Totals:         2       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    2
  3117 ;; This function calls:
  3118 ;;		_delay_ms
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3124                           	line	22
  3125                           global __ptext10
  3126                           __ptext10:
  3127  0009F0                     psect	text10
  3128                           	file	"delay.h"
  3129                           	line	22
  3130                           	global	__size_of_delay_s
  3131                           	__size_of_delay_s	equ	__end_of_delay_s-_delay_s
  3132  0000                     	
  3133                           _delay_s:
  3134  0009F0                     ;incstack = 0
  3135                           	opt	stack 28
  3136                           	line	23
  3137                           	
  3138                           l1378:
  3139  0009F0                     ;delay.h: 23: while(repeat_3--){
  3140                           	goto	l1382
  3141  0009F0  EF02  F005         	
  3142                           l70:
  3143  0009F4                     	line	24
  3144                           	
  3145                           l1380:
  3146  0009F4                     ;delay.h: 24: delay_ms(1000);
  3147                           	movlw	high(03E8h)
  3148  0009F4  0E03               	movwf	((c:delay_ms@repeat_2+1)),c
  3149  0009F6  6E06               	movlw	low(03E8h)
  3150  0009F8  0EE8               	movwf	((c:delay_ms@repeat_2)),c
  3151  0009FA  6E05               	call	_delay_ms	;wreg free
  3152  0009FC  ECDC  F004         	goto	l1382
  3153  000A00  EF02  F005         	line	25
  3154                           	
  3155                           l69:
  3156  000A04                     	line	23
  3157                           	
  3158                           l1382:
  3159  000A04                     	decf	((c:delay_s@repeat_3)),c
  3160  000A04  0608               	btfss	status,0
  3161  000A06  A0D8               	decf	((c:delay_s@repeat_3+1)),c
  3162  000A08  0609               		incf	((c:delay_s@repeat_3)),c,w
  3163  000A0A  2808               	bnz	u611
  3164  000A0C  E106               	incf	((c:delay_s@repeat_3+1)),c,w
  3165  000A0E  2809               	btfss	status,2
  3166  000A10  A4D8               	goto	u611
  3167  000A12  EF0D  F005         	goto	u610
  3168  000A16  EF0F  F005         
  3169                           u611:
  3170  000A1A                     	goto	l1380
  3171  000A1A  EFFA  F004         u610:
  3172  000A1E                     	goto	l72
  3173  000A1E  EF11  F005         	
  3174                           l71:
  3175  000A22                     	line	26
  3176                           	
  3177                           l72:
  3178  000A22                     	return	;funcret
  3179  000A22  0012               	opt stack 0
  3180                           GLOBAL	__end_of_delay_s
  3181                           	__end_of_delay_s:
  3182  000A24                     	signat	_delay_s,4217
  3183                           	global	_UART_clean_buffer
  3184                           
  3185 ;; *************** function _UART_clean_buffer *****************
  3186 ;; Defined at:
  3187 ;;		line 43 in file "uart.h"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0
  3201 ;;      Params:         0       0
  3202 ;;      Locals:         0       0
  3203 ;;      Temps:          0       0
  3204 ;;      Totals:         0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		_memset
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3215                           	file	"uart.h"
  3216                           	line	43
  3217                           global __ptext11
  3218                           __ptext11:
  3219  000A54                     psect	text11
  3220                           	file	"uart.h"
  3221                           	line	43
  3222                           	global	__size_of_UART_clean_buffer
  3223                           	__size_of_UART_clean_buffer	equ	__end_of_UART_clean_buffer-_UART_clean_buffer
  3224  0000                     	
  3225                           _UART_clean_buffer:
  3226  000A54                     ;incstack = 0
  3227                           	opt	stack 28
  3228                           	line	44
  3229                           	
  3230                           l1392:
  3231  000A54                     ;uart.h: 44: memset(UART_buffer, 45, sizeof (UART_buffer));
  3232                           		movlw	low(_UART_buffer)
  3233  000A54  0E2D               	movwf	((c:memset@p1)),c
  3234  000A56  6E05               	movlw	high(_UART_buffer)
  3235  000A58  0E00               	movwf	((c:memset@p1+1)),c
  3236  000A5A  6E06               
  3237                           	movlw	high(02Dh)
  3238  000A5C  0E00               	movwf	((c:memset@c+1)),c
  3239  000A5E  6E08               	movlw	low(02Dh)
  3240  000A60  0E2D               	movwf	((c:memset@c)),c
  3241  000A62  6E07               	movlw	high(010h)
  3242  000A64  0E00               	movwf	((c:memset@n+1)),c
  3243  000A66  6E0A               	movlw	low(010h)
  3244  000A68  0E10               	movwf	((c:memset@n)),c
  3245  000A6A  6E09               	call	_memset	;wreg free
  3246  000A6C  ECBC  F004         	line	45
  3247                           	
  3248                           l1394:
  3249  000A70                     ;uart.h: 45: UART_Buffer_Ptr = 0;
  3250                           	movlw	low(0)
  3251  000A70  0E00               	movwf	((c:_UART_Buffer_Ptr)),c
  3252  000A72  6E2C               	line	46
  3253                           	
  3254                           l94:
  3255  000A74                     	return	;funcret
  3256  000A74  0012               	opt stack 0
  3257                           GLOBAL	__end_of_UART_clean_buffer
  3258                           	__end_of_UART_clean_buffer:
  3259  000A76                     	signat	_UART_clean_buffer,89
  3260                           	global	_memset
  3261                           
  3262 ;; *************** function _memset *****************
  3263 ;; Defined at:
  3264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  p1              2    4[COMRAM] PTR void 
  3267 ;;		 -> UART_buffer(16), 
  3268 ;;  c               2    6[COMRAM] int 
  3269 ;;  n               2    8[COMRAM] unsigned int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  p               2   10[COMRAM] PTR unsigned char 
  3272 ;;		 -> UART_buffer(16), 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  2    4[COMRAM] PTR void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0
  3282 ;;      Params:         6       0
  3283 ;;      Locals:         2       0
  3284 ;;      Temps:          0       0
  3285 ;;      Totals:         8       0
  3286 ;;Total ram usage:        8 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_UART_clean_buffer
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           psect	text12,class=CODE,space=0,reloc=2,group=2
  3296                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  3297                           	line	8
  3298                           global __ptext12
  3299                           __ptext12:
  3300  000978                     psect	text12
  3301                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  3302                           	line	8
  3303                           	global	__size_of_memset
  3304                           	__size_of_memset	equ	__end_of_memset-_memset
  3305  0000                     	
  3306                           _memset:
  3307  000978                     ;incstack = 0
  3308                           	opt	stack 28
  3309                           	line	18
  3310                           	
  3311                           l1296:
  3312  000978                     		movff	(c:memset@p1),(c:memset@p)
  3313  000978  C005  F00B         	movff	(c:memset@p1+1),(c:memset@p+1)
  3314  00097C  C006  F00C         
  3315                           	line	19
  3316                           	goto	l1302
  3317  000980  EFCC  F004         	
  3318                           l818:
  3319  000984                     	line	20
  3320                           	
  3321                           l1298:
  3322  000984                     	movff	(c:memset@p),fsr2l
  3323  000984  C00B  FFD9         	movff	(c:memset@p+1),fsr2h
  3324  000988  C00C  FFDA         	movff	(c:memset@c),indf2
  3325  00098C  C007  FFDF         
  3326                           	
  3327                           l1300:
  3328  000990                     	infsnz	((c:memset@p)),c
  3329  000990  4A0B               	incf	((c:memset@p+1)),c
  3330  000992  2A0C               	goto	l1302
  3331  000994  EFCC  F004         	
  3332                           l817:
  3333  000998                     	line	19
  3334                           	
  3335                           l1302:
  3336  000998                     	decf	((c:memset@n)),c
  3337  000998  0609               	btfss	status,0
  3338  00099A  A0D8               	decf	((c:memset@n+1)),c
  3339  00099C  060A               		incf	((c:memset@n)),c,w
  3340  00099E  2809               	bnz	u501
  3341  0009A0  E106               	incf	((c:memset@n+1)),c,w
  3342  0009A2  280A               	btfss	status,2
  3343  0009A4  A4D8               	goto	u501
  3344  0009A6  EFD7  F004         	goto	u500
  3345  0009AA  EFD9  F004         
  3346                           u501:
  3347  0009AE                     	goto	l1298
  3348  0009AE  EFC2  F004         u500:
  3349  0009B2                     	goto	l820
  3350  0009B2  EFDB  F004         	
  3351                           l819:
  3352  0009B6                     	line	22
  3353                           ;	Return value of _memset is never used
  3354                           	
  3355                           l820:
  3356  0009B6                     	return	;funcret
  3357  0009B6  0012               	opt stack 0
  3358                           GLOBAL	__end_of_memset
  3359                           	__end_of_memset:
  3360  0009B8                     	signat	_memset,12410
  3361                           	global	_UART_Write_Text
  3362                           
  3363 ;; *************** function _UART_Write_Text *****************
  3364 ;; Defined at:
  3365 ;;		line 38 in file "uart.h"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  text            2    5[COMRAM] PTR unsigned char 
  3368 ;;		 -> STR_14(10), STR_13(10), STR_12(22), STR_11(19), 
  3369 ;;		 -> STR_10(22), STR_9(19), STR_8(9), STR_6(8), 
  3370 ;;		 -> STR_4(2), main@buffer(10), STR_3(11), STR_1(13), 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  i               2    9[COMRAM] int 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0
  3382 ;;      Params:         2       0
  3383 ;;      Locals:         2       0
  3384 ;;      Temps:          2       0
  3385 ;;      Totals:         6       0
  3386 ;;Total ram usage:        6 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    2
  3389 ;; This function calls:
  3390 ;;		_UART_Write_byte
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3396                           	file	"uart.h"
  3397                           	line	38
  3398                           global __ptext13
  3399                           __ptext13:
  3400  000730                     psect	text13
  3401                           	file	"uart.h"
  3402                           	line	38
  3403                           	global	__size_of_UART_Write_Text
  3404                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  3405  0000                     	
  3406                           _UART_Write_Text:
  3407  000730                     ;incstack = 0
  3408                           	opt	stack 28
  3409                           	line	39
  3410                           	
  3411                           l1384:
  3412  000730                     ;uart.h: 39: for (int i = 0; text[i] != '\0'; i++)
  3413                           	movlw	high(0)
  3414  000730  0E00               	movwf	((c:UART_Write_Text@i+1)),c
  3415  000732  6E0B               	movlw	low(0)
  3416  000734  0E00               	movwf	((c:UART_Write_Text@i)),c
  3417  000736  6E0A               	goto	l1390
  3418  000738  EFBA  F003         	line	40
  3419                           	
  3420                           l89:
  3421  00073C                     	
  3422                           l1386:
  3423  00073C                     ;uart.h: 40: UART_Write_byte(text[i]);
  3424                           	movf	((c:UART_Write_Text@i)),c,w
  3425  00073C  500A               	addwf	((c:UART_Write_Text@text)),c,w
  3426  00073E  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  3427  000740  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  3428  000742  500B               	addwfc	((c:UART_Write_Text@text+1)),c,w
  3429  000744  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  3430  000746  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  3431  000748  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  3432  00074C  C009  FFF7         	clrf	tblptru
  3433  000750  6AF8               	
  3434                           	movlw	high __ramtop-1
  3435  000752  0E00               	cpfsgt	tblptrh
  3436  000754  64F7               	bra	u627
  3437  000756  D003               	tblrd	*
  3438  000758  0008               	
  3439                           	movf	tablat,w
  3440  00075A  50F5               	bra	u620
  3441  00075C  D005               u627:
  3442  00075E                     	movff	tblptrl,fsr2l
  3443  00075E  CFF6 FFD9          	movff	tblptrh,fsr2h
  3444  000762  CFF7 FFDA          	movf	indf2,w
  3445  000766  50DF               u620:
  3446  000768                     	
  3447                           	call	_UART_Write_byte
  3448  000768  EC3B  F005         	line	39
  3449                           	
  3450                           l1388:
  3451  00076C                     	infsnz	((c:UART_Write_Text@i)),c
  3452  00076C  4A0A               	incf	((c:UART_Write_Text@i+1)),c
  3453  00076E  2A0B               	goto	l1390
  3454  000770  EFBA  F003         	
  3455                           l88:
  3456  000774                     	
  3457                           l1390:
  3458  000774                     	movf	((c:UART_Write_Text@i)),c,w
  3459  000774  500A               	addwf	((c:UART_Write_Text@text)),c,w
  3460  000776  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  3461  000778  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  3462  00077A  500B               	addwfc	((c:UART_Write_Text@text+1)),c,w
  3463  00077C  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  3464  00077E  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  3465  000780  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  3466  000784  C009  FFF7         	clrf	tblptru
  3467  000788  6AF8               	
  3468                           	movlw	high __ramtop-1
  3469  00078A  0E00               	cpfsgt	tblptrh
  3470  00078C  64F7               	bra	u637
  3471  00078E  D003               	tblrd	*
  3472  000790  0008               	
  3473                           	movf	tablat,w
  3474  000792  50F5               	bra	u630
  3475  000794  D005               u637:
  3476  000796                     	movff	tblptrl,fsr2l
  3477  000796  CFF6 FFD9          	movff	tblptrh,fsr2h
  3478  00079A  CFF7 FFDA          	movf	indf2,w
  3479  00079E  50DF               u630:
  3480  0007A0                     	iorlw	0
  3481  0007A0  0900               	btfss	status,2
  3482  0007A2  A4D8               	goto	u641
  3483  0007A4  EFD6  F003         	goto	u640
  3484  0007A8  EFD8  F003         u641:
  3485  0007AC                     	goto	l1386
  3486  0007AC  EF9E  F003         u640:
  3487  0007B0                     	goto	l91
  3488  0007B0  EFDA  F003         	
  3489                           l90:
  3490  0007B4                     	line	41
  3491                           	
  3492                           l91:
  3493  0007B4                     	return	;funcret
  3494  0007B4  0012               	opt stack 0
  3495                           GLOBAL	__end_of_UART_Write_Text
  3496                           	__end_of_UART_Write_Text:
  3497  0007B6                     	signat	_UART_Write_Text,4217
  3498                           	global	_UART_Write_byte
  3499                           
  3500 ;; *************** function _UART_Write_byte *****************
  3501 ;; Defined at:
  3502 ;;		line 33 in file "uart.h"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  data            1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  data            1    4[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0
  3516 ;;      Params:         0       0
  3517 ;;      Locals:         1       0
  3518 ;;      Temps:          0       0
  3519 ;;      Totals:         1       0
  3520 ;;Total ram usage:        1 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_UART_Write_Text
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           psect	text14,class=CODE,space=0,reloc=2,group=0
  3530                           	line	33
  3531                           global __ptext14
  3532                           __ptext14:
  3533  000A76                     psect	text14
  3534                           	file	"uart.h"
  3535                           	line	33
  3536                           	global	__size_of_UART_Write_byte
  3537                           	__size_of_UART_Write_byte	equ	__end_of_UART_Write_byte-_UART_Write_byte
  3538  0000                     	
  3539                           _UART_Write_byte:
  3540  000A76                     ;incstack = 0
  3541                           	opt	stack 28
  3542                           ;UART_Write_byte@data stored from wreg
  3543                           	movwf	((c:UART_Write_byte@data)),c
  3544  000A76  6E05               	line	34
  3545                           	
  3546                           l986:
  3547  000A78                     ;uart.h: 34: while (!TRMT);
  3548                           	goto	l82
  3549  000A78  EF3E  F005         	
  3550                           l83:
  3551  000A7C                     	
  3552                           l82:
  3553  000A7C                     	btfss	c:(32097/8),(32097)&7	;volatile
  3554  000A7C  A2AC               	goto	u81
  3555  000A7E  EF43  F005         	goto	u80
  3556  000A82  EF45  F005         u81:
  3557  000A86                     	goto	l82
  3558  000A86  EF3E  F005         u80:
  3559  000A8A                     	goto	l988
  3560  000A8A  EF47  F005         	
  3561                           l84:
  3562  000A8E                     	line	35
  3563                           	
  3564                           l988:
  3565  000A8E                     ;uart.h: 35: TXREG = data;
  3566                           	movff	(c:UART_Write_byte@data),(c:4013)	;volatile
  3567  000A8E  C005  FFAD         	line	36
  3568                           	
  3569                           l85:
  3570  000A92                     	return	;funcret
  3571  000A92  0012               	opt stack 0
  3572                           GLOBAL	__end_of_UART_Write_byte
  3573                           	__end_of_UART_Write_byte:
  3574  000A94                     	signat	_UART_Write_byte,4217
  3575                           	global	_UART_Init
  3576                           
  3577 ;; *************** function _UART_Init *****************
  3578 ;; Defined at:
  3579 ;;		line 12 in file "uart.h"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0
  3593 ;;      Params:         0       0
  3594 ;;      Locals:         0       0
  3595 ;;      Temps:          0       0
  3596 ;;      Totals:         0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_main
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           psect	text15,class=CODE,space=0,reloc=2,group=0
  3607                           	line	12
  3608                           global __ptext15
  3609                           __ptext15:
  3610  000A94                     psect	text15
  3611                           	file	"uart.h"
  3612                           	line	12
  3613                           	global	__size_of_UART_Init
  3614                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  3615  0000                     	
  3616                           _UART_Init:
  3617  000A94                     ;incstack = 0
  3618                           	opt	stack 29
  3619                           	line	14
  3620                           	
  3621                           l1078:
  3622  000A94                     ;uart.h: 14: PIE1bits.RCIE = 0b1;
  3623                           	bsf	((c:3997)),c,5	;volatile
  3624  000A94  8A9D               	line	15
  3625                           ;uart.h: 15: INTCONbits.PEIE = 0b1;
  3626                           	bsf	((c:4082)),c,6	;volatile
  3627  000A96  8CF2               	line	16
  3628                           ;uart.h: 16: INTCONbits.GIE = 0b1;
  3629                           	bsf	((c:4082)),c,7	;volatile
  3630  000A98  8EF2               	line	19
  3631                           ;uart.h: 19: RCSTAbits.SPEN = 0b1;
  3632                           	bsf	((c:4011)),c,7	;volatile
  3633  000A9A  8EAB               	line	20
  3634                           ;uart.h: 20: RCSTAbits.RX9 = 0b0;
  3635                           	bcf	((c:4011)),c,6	;volatile
  3636  000A9C  9CAB               	line	21
  3637                           ;uart.h: 21: RCSTAbits.CREN = 0b1;
  3638                           	bsf	((c:4011)),c,4	;volatile
  3639  000A9E  88AB               	line	23
  3640                           ;uart.h: 23: TXSTAbits.TX9 = 0b0;
  3641                           	bcf	((c:4012)),c,6	;volatile
  3642  000AA0  9CAC               	line	24
  3643                           ;uart.h: 24: TXSTAbits.SYNC = 0b0;
  3644                           	bcf	((c:4012)),c,4	;volatile
  3645  000AA2  98AC               	line	25
  3646                           ;uart.h: 25: TXSTAbits.BRGH = 0b0;
  3647                           	bcf	((c:4012)),c,2	;volatile
  3648  000AA4  94AC               	line	26
  3649                           ;uart.h: 26: TXSTAbits.TXEN = 0b1;
  3650                           	bsf	((c:4012)),c,5	;volatile
  3651  000AA6  8AAC               	line	28
  3652                           ;uart.h: 28: BAUDCONbits.BRG16 = 0b0;
  3653                           	bcf	((c:4024)),c,3	;volatile
  3654  000AA8  96B8               	line	29
  3655                           ;uart.h: 29: BAUDCONbits.ABDEN = 0b0;
  3656                           	bcf	((c:4024)),c,0	;volatile
  3657  000AAA  90B8               	line	30
  3658                           	
  3659                           l1080:
  3660  000AAC                     ;uart.h: 30: SPBRG = 51;
  3661                           	movlw	low(033h)
  3662  000AAC  0E33               	movwf	((c:4015)),c	;volatile
  3663  000AAE  6EAF               	line	31
  3664                           	
  3665                           l79:
  3666  000AB0                     	return	;funcret
  3667  000AB0  0012               	opt stack 0
  3668                           GLOBAL	__end_of_UART_Init
  3669                           	__end_of_UART_Init:
  3670  000AB2                     	signat	_UART_Init,89
  3671                           	global	_ADC_Init
  3672                           
  3673 ;; *************** function _ADC_Init *****************
  3674 ;; Defined at:
  3675 ;;		line 8 in file "adc.h"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		None
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0
  3689 ;;      Params:         0       0
  3690 ;;      Locals:         0       0
  3691 ;;      Temps:          0       0
  3692 ;;      Totals:         0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           psect	text16,class=CODE,space=0,reloc=2,group=0
  3703                           	file	"adc.h"
  3704                           	line	8
  3705                           global __ptext16
  3706                           __ptext16:
  3707  000ACC                     psect	text16
  3708                           	file	"adc.h"
  3709                           	line	8
  3710                           	global	__size_of_ADC_Init
  3711                           	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  3712  0000                     	
  3713                           _ADC_Init:
  3714  000ACC                     ;incstack = 0
  3715                           	opt	stack 29
  3716                           	line	11
  3717                           	
  3718                           l1094:
  3719  000ACC                     ;adc.h: 11: ADCON0bits.CHS0 = 0b1;
  3720                           	bsf	((c:4034)),c,2	;volatile
  3721  000ACC  84C2               	line	12
  3722                           ;adc.h: 12: ADCON0bits.CHS1 = 0b1;
  3723                           	bsf	((c:4034)),c,3	;volatile
  3724  000ACE  86C2               	line	18
  3725                           ;adc.h: 18: ADCON1bits.VCFG0 = 0b0;
  3726                           	bcf	((c:4033)),c,4	;volatile
  3727  000AD0  98C1               	line	21
  3728                           ;adc.h: 21: ADCON1bits.PCFG3 = 0b0;
  3729                           	bcf	((c:4033)),c,3	;volatile
  3730  000AD2  96C1               	line	24
  3731                           ;adc.h: 24: ADCON2bits.ADFM = 0b1;
  3732                           	bsf	((c:4032)),c,7	;volatile
  3733  000AD4  8EC0               	line	27
  3734                           ;adc.h: 27: ADCON2bits.ACQT2 = 0b1;
  3735                           	bsf	((c:4032)),c,5	;volatile
  3736  000AD6  8AC0               	line	28
  3737                           ;adc.h: 28: ADCON2bits.ACQT1 = 0b0;
  3738                           	bcf	((c:4032)),c,4	;volatile
  3739  000AD8  98C0               	line	29
  3740                           ;adc.h: 29: ADCON2bits.ACQT1 = 0b0;
  3741                           	bcf	((c:4032)),c,4	;volatile
  3742  000ADA  98C0               	line	32
  3743                           ;adc.h: 32: ADCON2bits.ADCS2 = 0b0;
  3744                           	bcf	((c:4032)),c,2	;volatile
  3745  000ADC  94C0               	line	33
  3746                           ;adc.h: 33: ADCON2bits.ADCS1 = 0b0;
  3747                           	bcf	((c:4032)),c,1	;volatile
  3748  000ADE  92C0               	line	34
  3749                           ;adc.h: 34: ADCON2bits.ADCS0 = 0b0;
  3750                           	bcf	((c:4032)),c,0	;volatile
  3751  000AE0  90C0               	line	35
  3752                           	
  3753                           l104:
  3754  000AE2                     	return	;funcret
  3755  000AE2  0012               	opt stack 0
  3756                           GLOBAL	__end_of_ADC_Init
  3757                           	__end_of_ADC_Init:
  3758  000AE4                     	signat	_ADC_Init,89
  3759                           	global	_ADC_Get
  3760                           
  3761 ;; *************** function _ADC_Get *****************
  3762 ;; Defined at:
  3763 ;;		line 37 in file "adc.h"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  advalue         2   11[COMRAM] unsigned int 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2    7[COMRAM] unsigned int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0
  3777 ;;      Params:         2       0
  3778 ;;      Locals:         2       0
  3779 ;;      Temps:          2       0
  3780 ;;      Totals:         6       0
  3781 ;;Total ram usage:        6 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		_delay_ms
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           psect	text17,class=CODE,space=0,reloc=2,group=0
  3791                           	line	37
  3792                           global __ptext17
  3793                           __ptext17:
  3794  000930                     psect	text17
  3795                           	file	"adc.h"
  3796                           	line	37
  3797                           	global	__size_of_ADC_Get
  3798                           	__size_of_ADC_Get	equ	__end_of_ADC_Get-_ADC_Get
  3799  0000                     	
  3800                           _ADC_Get:
  3801  000930                     ;incstack = 0
  3802                           	opt	stack 28
  3803                           	line	38
  3804                           	
  3805                           l1396:
  3806  000930                     ;adc.h: 38: ADCON0bits.ADON = 0b1;
  3807                           	bsf	((c:4034)),c,0	;volatile
  3808  000930  80C2               	line	39
  3809                           	
  3810                           l1398:
  3811  000932                     ;adc.h: 39: delay_ms(1);
  3812                           	movlw	high(01h)
  3813  000932  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  3814  000934  6E06               	movlw	low(01h)
  3815  000936  0E01               	movwf	((c:delay_ms@repeat_2)),c
  3816  000938  6E05               	call	_delay_ms	;wreg free
  3817  00093A  ECDC  F004         	line	40
  3818                           	
  3819                           l1400:
  3820  00093E                     ;adc.h: 40: ADCON0bits.GO_DONE = 1;
  3821                           	bsf	((c:4034)),c,1	;volatile
  3822  00093E  82C2               	line	41
  3823                           ;adc.h: 41: while(ADCON0bits.GO_DONE == 1);
  3824                           	goto	l107
  3825  000940  EFA2  F004         	
  3826                           l108:
  3827  000944                     	
  3828                           l107:
  3829  000944                     	btfsc	((c:4034)),c,1	;volatile
  3830  000944  B2C2               	goto	u651
  3831  000946  EFA7  F004         	goto	u650
  3832  00094A  EFA9  F004         u651:
  3833  00094E                     	goto	l107
  3834  00094E  EFA2  F004         u650:
  3835  000952                     	goto	l1402
  3836  000952  EFAB  F004         	
  3837                           l109:
  3838  000956                     	line	42
  3839                           	
  3840                           l1402:
  3841  000956                     ;adc.h: 42: unsigned int advalue = (unsigned int)(((unsigned char)ADRESH << 8) + (unsign
                                 ed char)ADRESL);
  3842                           	movf	((c:4036)),c,w	;volatile
  3843  000956  50C4               	movwf	(??_ADC_Get+0+0+1)&0ffh,c
  3844  000958  6E0B               	clrf	(??_ADC_Get+0+0)&0ffh,c
  3845  00095A  6A0A               	movf	((c:4035)),c,w	;volatile
  3846  00095C  50C3               	addwf	(??_ADC_Get+0+0),c,w
  3847  00095E  240A               	movwf	((c:ADC_Get@advalue)),c
  3848  000960  6E0C               	movlw	0
  3849  000962  0E00               	addwfc	(??_ADC_Get+0+1),c,w
  3850  000964  200B               	movwf	1+((c:ADC_Get@advalue)),c
  3851  000966  6E0D               	line	43
  3852                           	
  3853                           l1404:
  3854  000968                     ;adc.h: 43: ADCON0bits.ADON = 0b0;
  3855                           	bcf	((c:4034)),c,0	;volatile
  3856  000968  90C2               	line	44
  3857                           	
  3858                           l1406:
  3859  00096A                     ;adc.h: 44: return advalue;
  3860                           	movff	(c:ADC_Get@advalue),(c:?_ADC_Get)
  3861  00096A  C00C  F008         	movff	(c:ADC_Get@advalue+1),(c:?_ADC_Get+1)
  3862  00096E  C00D  F009         	goto	l110
  3863  000972  EFBB  F004         	
  3864                           l1408:
  3865  000976                     	line	45
  3866                           	
  3867                           l110:
  3868  000976                     	return	;funcret
  3869  000976  0012               	opt stack 0
  3870                           GLOBAL	__end_of_ADC_Get
  3871                           	__end_of_ADC_Get:
  3872  000978                     	signat	_ADC_Get,90
  3873                           	global	_delay_ms
  3874                           
  3875 ;; *************** function _delay_ms *****************
  3876 ;; Defined at:
  3877 ;;		line 16 in file "delay.h"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  repeat_2        2    4[COMRAM] int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0
  3891 ;;      Params:         2       0
  3892 ;;      Locals:         0       0
  3893 ;;      Temps:          1       0
  3894 ;;      Totals:         3       0
  3895 ;;Total ram usage:        3 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_delay_s
  3902 ;;		_ADC_Get
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           psect	text18,class=CODE,space=0,reloc=2,group=0
  3907                           	file	"delay.h"
  3908                           	line	16
  3909                           global __ptext18
  3910                           __ptext18:
  3911  0009B8                     psect	text18
  3912                           	file	"delay.h"
  3913                           	line	16
  3914                           	global	__size_of_delay_ms
  3915                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  3916  0000                     	
  3917                           _delay_ms:
  3918  0009B8                     ;incstack = 0
  3919                           	opt	stack 28
  3920                           	line	17
  3921                           	
  3922                           l1290:
  3923  0009B8                     ;delay.h: 17: while(repeat_2--){
  3924                           	goto	l1294
  3925  0009B8  EFE8  F004         	
  3926                           l64:
  3927  0009BC                     	line	18
  3928                           	
  3929                           l1292:
  3930  0009BC                     ;delay.h: 18: _delay((unsigned long)((1)*(32000000/4000.0)));
  3931                           	opt asmopt_push
  3932                           opt asmopt_off
  3933                           movlw	11
  3934  0009BC  0E0B               movwf	(??_delay_ms+0+0)&0ffh,c,f
  3935  0009BE  6E07               	movlw	98
  3936  0009C0  0E62               u827:
  3937  0009C2                     decfsz	wreg,f
  3938  0009C2  2EE8               	bra	u827
  3939  0009C4  D7FE               	decfsz	(??_delay_ms+0+0)&0ffh,c,f
  3940  0009C6  2E07               	bra	u827
  3941  0009C8  D7FC               	nop2
  3942  0009CA  D000               opt asmopt_pop
  3943                           
  3944                           	goto	l1294
  3945  0009CC  EFE8  F004         	line	19
  3946                           	
  3947                           l63:
  3948  0009D0                     	line	17
  3949                           	
  3950                           l1294:
  3951  0009D0                     	decf	((c:delay_ms@repeat_2)),c
  3952  0009D0  0605               	btfss	status,0
  3953  0009D2  A0D8               	decf	((c:delay_ms@repeat_2+1)),c
  3954  0009D4  0606               		incf	((c:delay_ms@repeat_2)),c,w
  3955  0009D6  2805               	bnz	u491
  3956  0009D8  E106               	incf	((c:delay_ms@repeat_2+1)),c,w
  3957  0009DA  2806               	btfss	status,2
  3958  0009DC  A4D8               	goto	u491
  3959  0009DE  EFF3  F004         	goto	u490
  3960  0009E2  EFF5  F004         
  3961                           u491:
  3962  0009E6                     	goto	l1292
  3963  0009E6  EFDE  F004         u490:
  3964  0009EA                     	goto	l66
  3965  0009EA  EFF7  F004         	
  3966                           l65:
  3967  0009EE                     	line	20
  3968                           	
  3969                           l66:
  3970  0009EE                     	return	;funcret
  3971  0009EE  0012               	opt stack 0
  3972                           GLOBAL	__end_of_delay_ms
  3973                           	__end_of_delay_ms:
  3974  0009F0                     	signat	_delay_ms,4217
  3975                           	global	_UART_add_buffer
  3976                           
  3977 ;; *************** function _UART_add_buffer *****************
  3978 ;; Defined at:
  3979 ;;		line 48 in file "uart.h"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0
  3993 ;;      Params:         0       0
  3994 ;;      Locals:         0       0
  3995 ;;      Temps:          4       0
  3996 ;;      Totals:         4       0
  3997 ;;Total ram usage:        4 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		Interrupt level 2
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           psect	intcode,class=CODE,space=0,reloc=2
  4006                           global __pintcode
  4007                           __pintcode:
  4008  000008                     psect	intcode
  4009                           	file	"uart.h"
  4010                           	line	48
  4011                           	global	__size_of_UART_add_buffer
  4012                           	__size_of_UART_add_buffer	equ	__end_of_UART_add_buffer-_UART_add_buffer
  4013  0000                     	
  4014                           _UART_add_buffer:
  4015  000008                     ;incstack = 0
  4016                           	opt	stack 27
  4017                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  4018  000008  823D               	movff	fsr2l+0,??_UART_add_buffer+0
  4019  00000A  CFD9 F001          	movff	fsr2h+0,??_UART_add_buffer+1
  4020  00000E  CFDA F002          	movff	prodl+0,??_UART_add_buffer+2
  4021  000012  CFF3 F003          	movff	prodh+0,??_UART_add_buffer+3
  4022  000016  CFF4 F004          	line	52
  4023                           	
  4024                           i2l1140:
  4025  00001A                     ;uart.h: 52: if (PIR1bits.RCIF) {
  4026                           	btfss	((c:3998)),c,5	;volatile
  4027  00001A  AA9E               	goto	i2u29_41
  4028  00001C  EF12  F000         	goto	i2u29_40
  4029  000020  EF14  F000         i2u29_41:
  4030  000024                     	goto	i2l101
  4031  000024  EF30  F000         i2u29_40:
  4032  000028                     	line	61
  4033                           	
  4034                           i2l1142:
  4035  000028                     ;uart.h: 61: UART_buffer[UART_Buffer_Ptr] = RCREG;
  4036                           	movf	((c:_UART_Buffer_Ptr)),c,w
  4037  000028  502C               	mullw	01h
  4038  00002A  0D01               	movlw	low(_UART_buffer)
  4039  00002C  0E2D               	addwf	(prodl),c,w
  4040  00002E  24F3               	movwf	c:fsr2l
  4041  000030  6ED9               	movlw	high(_UART_buffer)
  4042  000032  0E00               	addwfc	prod+1,w
  4043  000034  20F4               	movwf	1+c:fsr2l
  4044  000036  6EDA               	movff	(c:4014),indf2	;volatile
  4045  000038  CFAE FFDF          
  4046                           	line	62
  4047                           	
  4048                           i2l1144:
  4049  00003C                     ;uart.h: 62: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr + (unsigne
                                 d char)1);
  4050                           	incf	((c:_UART_Buffer_Ptr)),c,w
  4051  00003C  282C               	movwf	((c:_UART_Buffer_Ptr)),c
  4052  00003E  6E2C               	line	63
  4053                           	
  4054                           i2l1146:
  4055  000040                     ;uart.h: 63: if (UART_Buffer_Ptr == 16)
  4056                           		movlw	16
  4057  000040  0E10               	xorwf	((c:_UART_Buffer_Ptr)),c,w
  4058  000042  182C               	btfss	status,2
  4059  000044  A4D8               	goto	i2u30_41
  4060  000046  EF27  F000         	goto	i2u30_40
  4061  00004A  EF29  F000         
  4062                           i2u30_41:
  4063  00004E                     	goto	i2l1150
  4064  00004E  EF2D  F000         i2u30_40:
  4065  000052                     	line	64
  4066                           	
  4067                           i2l1148:
  4068  000052                     ;uart.h: 64: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr - (unsigne
                                 d char)1);
  4069                           	decf	((c:_UART_Buffer_Ptr)),c,w
  4070  000052  042C               	movwf	((c:_UART_Buffer_Ptr)),c
  4071  000054  6E2C               	goto	i2l1150
  4072  000056  EF2D  F000         	
  4073                           i2l100:
  4074  00005A                     	line	66
  4075                           	
  4076                           i2l1150:
  4077  00005A                     ;uart.h: 66: PIR1bits.RCIF = 0;
  4078                           	bcf	((c:3998)),c,5	;volatile
  4079  00005A  9A9E               	goto	i2l101
  4080  00005C  EF30  F000         	line	68
  4081                           	
  4082                           i2l99:
  4083  000060                     	line	70
  4084                           	
  4085                           i2l101:
  4086  000060                     	movff	??_UART_add_buffer+3,prodh+0
  4087  000060  C004  FFF4         	movff	??_UART_add_buffer+2,prodl+0
  4088  000064  C003  FFF3         	movff	??_UART_add_buffer+1,fsr2h+0
  4089  000068  C002  FFDA         	movff	??_UART_add_buffer+0,fsr2l+0
  4090  00006C  C001  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  4091  000070  923D               	retfie f
  4092  000072  0011               	opt stack 0
  4093                           GLOBAL	__end_of_UART_add_buffer
  4094                           	__end_of_UART_add_buffer:
  4095  000074                     	signat	_UART_add_buffer,89
  4096                           psect	smallconst
  4097                           	db 0	; dummy byte at the end
  4098  0001AE  00                 	global	__smallconst
  4099                           	global	__mediumconst
  4100                           	GLOBAL	__activetblptr
  4101                           __activetblptr	EQU	2
  4102  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4103                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4104                           	GLOBAL	__Lrparam
  4105                           	FNCONF	rparam,??,?
  4106                           	GLOBAL	___rparam_used
  4107                           	___rparam_used EQU 1
  4108  0000                     	GLOBAL	___param_bank
  4109                           	___param_bank EQU 0
  4110  0000                     GLOBAL	__Lparam, __Hparam
  4111                           GLOBAL	__Lrparam, __Hrparam
  4112                           __Lparam	EQU	__Lrparam
  4113  0000                     __Hparam	EQU	__Hrparam
  4114  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  4115                           	global	btemp
  4116                           btemp:
  4117  00003D                     	ds	1
  4118  00003D                     	global	int$flags
  4119                           	int$flags	set btemp
  4120  0000                     	global	wtemp8
  4121                           	wtemp8 set btemp+1
  4122  0000                     	global	ttemp5
  4123                           	ttemp5 set btemp+1
  4124  0000                     	global	ttemp6
  4125                           	ttemp6 set btemp+4
  4126  0000                     	global	ttemp7
  4127                           	ttemp7 set btemp+8
  4128  0000                     	end


Data Sizes:
    Strings     173
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      60
    BANK0           128      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[7]), STR_5(CODE[6]), STR_2(CODE[17]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 22
		 -> STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[22]), STR_11(CODE[19]), 
		 -> STR_10(CODE[22]), STR_9(CODE[19]), STR_8(CODE[9]), STR_6(CODE[8]), 
		 -> STR_4(CODE[2]), main@buffer(COMRAM[10]), STR_3(CODE[11]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _strstr->_strncmp
    _strncmp->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _delay_s->_delay_ms
    _UART_clean_buffer->_memset
    _UART_Write_Text->_UART_Write_byte
    _ADC_Get->_delay_ms

Critical Paths under _UART_add_buffer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_add_buffer in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    5940
                                             28 COMRAM    12    12      0
                            _ADC_Get
                           _ADC_Init
                          _UART_Init
                    _UART_Write_Text
                  _UART_clean_buffer
                           _delay_ms
                            _delay_s
                           _delay_us
                               _itoa
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    1401
                                             19 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     362
                                             10 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1698
                                             20 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1307
                                             11 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     500
                                              7 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _UART_clean_buffer                                    0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2    1017
                                              5 COMRAM     6     4      2
                    _UART_Write_byte
 ---------------------------------------------------------------------------------
 (2) _UART_Write_byte                                      1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Get                                              6     4      2     425
                                              7 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2     402
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _UART_add_buffer                                      4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get
     _delay_ms
   _ADC_Init
   _UART_Init
   _UART_Write_Text
     _UART_Write_byte
   _UART_clean_buffer
     _memset
   _delay_ms
   _delay_s
     _delay_ms
   _delay_us
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _UART_add_buffer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      3C       1       47.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C       5        0.0%
DATA                 0      0      3C       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Sep 13 16:33:05 2018

                        l60 0A52                          l70 09F4                          l63 09D0  
                        l71 0A22                          l64 09BC                          l72 0A22  
                        l65 09EE                          l57 0A34                          l66 09EE  
                        l82 0A7C                          l90 07B4                          l58 0A28  
                        l83 0A7C                          l91 07B4                          l59 0A52  
                        l84 0A8E                          l85 0A92                          l69 0A04  
                        l94 0A74                          l79 0AB0                          l88 0774  
                        l89 073C                          u80 0A8A                          u81 0A86  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
                       l110 0976                         l104 0AE2                         l121 0242  
                       l130 03F8                         l122 02BC                         l107 0944  
                       l131 03E4                         l123 033C                         l108 0944  
                       l132 03F4                         l124 02F8                         l109 0956  
                       l133 0454                         l125 0338                         l134 0440  
                       l126 0334                         l135 0450                         l127 039C  
                       l136 0458                         l128 0386                         l137 045C  
                       l129 0398                         l138 045C                         l620 0726  
                       l621 06D6                         l622 06CA                         l630 0824  
                       l623 06E8                         l631 07DC                         l624 06EC  
                       l632 07D0                         l625 0716                         l633 07EE  
                       l626 0726                         l634 07F2                         l810 04A2  
                       l627 072E                         l635 0814                         l811 04B8  
                       l820 09B6                         l636 0824                         l812 0500  
                       l637 082C                         l813 052C                         l805 090E  
                       l814 0534                         l806 092E                         l830 053A  
                       l831 0584                         l840 0884                         l832 05EE  
                       l817 0998                         l809 046C                         l841 0878  
                       l818 0984                         l850 067C                         l834 05DE  
                       l819 09B6                         l851 05F4                         l835 05E2  
                       l844 089A                         l852 0670                         l845 0892  
                       l829 05B0                         l838 082E                         l846 08BA  
                       l854 0638                         l839 0858                         l847 08DA  
                       l855 06A6                         l856 069A                         l986 0A78  
                       l988 0A8E                __CFG_CPB$OFF 000000                         u500 09B2  
                       u501 09AE                         u430 06C2                         u510 049E  
                       u431 06BE                         u511 049A                         u600 0A4E  
                       u440 06E4                         u520 04FC                         u601 0A4A  
                       u441 06E0                         u521 04F8                         u610 0A1E  
                       u450 0708                         u530 0528                __CFG_CPD$OFF 000000  
                       u611 0A1A                         u451 0704                         u531 0524  
                       u620 0768                         u460 07C8                         u540 08B6  
                       u700 0268                         u461 07C4                         u541 08B2  
                       u701 0264                         u630 07A0                         u470 07EA  
                       u550 060C                         u710 02E2                         u471 07E6  
                       u551 0608                         u711 02DE                         u640 07B0  
                       u480 0808                         u560 0634                         u800 041A  
                       u720 031E                         u641 07AC                         u481 0804  
                       u561 0630                         u801 0416                         u721 031A  
                       u490 09EA                         u650 0952                         u570 0696  
                       u810 0430                         u730 034C                         u491 09E6  
                       u651 094E                         u627 075E                         u571 0692  
                       u811 042C                         u731 0346                         u580 0848  
                       u660 0574                         u740 035E                         u637 0796  
                       u581 0844                         u661 0570                         u741 035A  
                       u590 0874                         u670 05C2                         u750 0374  
                       u591 0870                         u671 05BE                         u751 0370  
                       u680 05DA                         u760 03AC                         u736 034E  
                       u681 05D6                         u761 03A6                         u690 08F2  
                       u770 03BE                         u827 09C2                         u691 08EE  
                       u771 03BA                         u780 03D4                         u781 03D0  
                       u790 0408                         u766 03AE                         u791 0402  
                       u796 040A             __end_of_ADC_Get 0978                         prod 000FF3  
                       wreg 000FE8           _UART_clean_buffer 0A54                __CFG_WDT$OFF 000000  
                      l1300 0990                        l1302 0998                        l1310 048C  
                      l1400 093E                        l1080 0AAC                        l1320 04EC  
                      l1312 04A2                        l1304 0460                        l1402 0956  
                      l1330 052C                        l1322 04FC                        l1314 04AE  
                      l1306 046C                        l1410 0536                        l1404 0968  
                      l1260 06D6                        l1252 06A8                        l1332 0534  
                      l1324 0504                        l1316 04B8                        l1308 0488  
                      l1340 08BA                        l1412 053A                        l1420 05B0  
                      l1500 031E                        l1406 096A                        l1094 0ACC  
                      l1078 0A94                        l1270 0716                        l1262 06EC  
                      l1254 06B0                        l1326 0510                        l1318 04D0  
                      l1430 08F2                        l1342 08DA                        l1334 0886  
                      l1350 0638                        l1422 05C2                        l1414 0574  
                      l1510 0366                        l1502 0322                        l1408 0976  
                      l1272 071C                        l1264 06F2                        l1256 06C2  
                      l1280 07DC                        l1328 0516                        l1432 08FE  
                      l1336 0892                        l1360 06A6                        l1352 066C  
                      l1344 05F0                        l1424 05E2                        l1416 0580  
                      l1512 0374                        l1520 039C                        l1504 0324  
                      l1440 01B0                        l1290 09B8                        l1266 0708  
                      l1258 06CA                        l1282 07F2                        l1274 07B6  
                      l1434 0902                        l1370 0878                        l1362 082E  
                      l1338 089A                        l1354 0670                        l1346 05F4  
                      l1426 05EE                        l1418 0584                        l1522 03BE  
                      l1530 03F8                        l1514 0380                        l1506 033C  
                      l1450 01E8                        l1442 01DA                        l1292 09BC  
                      l1380 09F4                        l1268 0710                        l1284 0808  
                      l1276 07C8                        l1436 090E                        l1428 08DC  
                      l1372 0884                        l1364 0848                        l1348 060C  
                      l1356 067C                        l1532 041A                        l1524 03C6  
                      l1516 0386                        l1508 035E                        l1460 0206  
                      l1452 01EA                        l1444 01DE                        l1294 09D0  
                      l1390 0774                        l1382 0A04                        l1374 0A24  
                      l1286 0814                        l1278 07D0                        l1438 092E  
                      l1366 0854                        l1358 069A                        l1534 0422  
                      l1526 03D4                        l1518 0392                        l1470 0224  
                      l1462 0212                        l1454 01EC                        l1446 01E2  
                      l1384 0730                        l1296 0978                        l1392 0A54  
                      l1376 0A34                        l1288 081A                        l1368 0858  
                      l1536 0430                        l1528 03E4                        l1480 026C  
                      l1472 0226                        l1464 0214                        l1456 01EE  
                      l1448 01E6                        l1386 073C                        l1298 0984  
                      l1394 0A70                        l1378 09F0                        l1538 0440  
                      l1482 0278                        l1490 02BC                        l1474 0232  
                      l1466 0216                        l1458 01FA                        l1396 0930  
                      l1388 076C                        l1492 02E2                        l1484 0284  
                      l1476 0242                        l1468 0222                        l1398 0932  
                      l1494 02E6                        l1486 02A0                        l1478 0268  
                      l1496 02E8                        l1488 02AC                        l1498 02F8  
                      STR_1 0164                        STR_2 0153                        STR_3 0171  
                      STR_4 013E                        STR_5 01A8                        STR_6 0199  
                      STR_7 01A1                        STR_8 0190                        STR_9 012D  
                      i2l99 0060                        _TRMT 007D61          ?_UART_clean_buffer 0001  
             __CFG_BOR$BOHW 000000           __CFG_T1OSCMX$HIGH 000000                        _main 01B0  
                      _itoa 08DC                        fsr2h 000FDA                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 003D                        _utoa 0460  
          __end_of_ADC_Init 0AE4                main@adcValue 0027                        prodh 000FF4  
                      prodl 000FF3                        start 0074               __CFG_IESO$OFF 000000  
       ??_UART_clean_buffer 000D                ___param_bank 000000     __end_of_UART_add_buffer 0074  
   __end_of_UART_Write_Text 07B6     __end_of_UART_Write_byte 0A94                       ?_main 0001  
                     ?_itoa 0015                       STR_10 0101                       STR_11 0140  
                     STR_12 0117                       STR_13 017C                       STR_14 0186  
                     ?_utoa 000C             __end_of___lwdiv 0730                       i2l100 005A  
                     i2l101 0060             __end_of___lwmod 082E                       _RCREG 000FAE  
                     _SPBRG 000FAF                       _TXREG 000FAD               __CFG_PWRT$OFF 000000  
           __end_of_delay_s 0A24               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
 __end_of_UART_clean_buffer 0A76              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000          __size_of_UART_Init 001E               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     tablat 000FF5                       ttemp5 003E                       ttemp6 0041  
                     ttemp7 0045                       utoa@c 0014                       utoa@v 0012  
                     status 000FD8                       wtemp8 003E             __end_of_strncmp 06A8  
           delay_s@repeat_3 0008              __CFG_MCLRE$OFF 000000             __initialization 0AB2  
            __CFG_HPOL$HIGH 000000                __end_of_main 0460                __end_of_itoa 0930  
              __end_of_utoa 0536          _Motion_1_OldStatus 002B                   ??_ADC_Get 000A  
            __CFG_LPOL$HIGH 000000                      ??_main 001D                      ??_itoa 001B  
                    ??_utoa 0012               __activetblptr 000002          _Motion_2_OldStatus 002A  
                    _ADRESH 000FC4                      _ADRESL 000FC3                      i2l1140 001A  
                    i2l1150 005A                      i2l1142 0028                      i2l1144 003C  
                    i2l1146 0040                      i2l1148 0052            __end_of_delay_ms 09F0  
          __end_of_delay_us 0A54              __CFG_XINST$OFF 000000           __end_of_UART_Init 0AB2  
          ?_UART_add_buffer 0001              __CFG_STVREN$ON 000000            ?_UART_Write_Text 0006  
                 ??___lwdiv 0009                   ??___lwmod 0009            ?_UART_Write_byte 0001  
                    _memset 0978                      clear_0 0AB8                   ??_delay_s 000A  
                    _strchr 082E                      _strlen 0886                      _strstr 0536  
                    itoa@cp 001B                   ?_ADC_Init 0001                __mediumconst 0000  
__size_of_UART_clean_buffer 0022                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_strncmp 0011          _AC_Power_OldStatus 0029  
                __accesstop 0080     __end_of__initialization 0ABE             __CFG_FLTAMX$RA5 000000  
             ___rparam_used 000001              __pcstackCOMRAM 0001             __CFG_OSC$INTIO2 000000  
                ??_ADC_Init 0005                     ?_memset 0005                     _ADC_Get 0930  
                   ?_strchr 0005                     ?_strlen 0005                     ?_strstr 0014  
          __CFG_BBSIZ$BB256 000000                   ?_delay_ms 0005                   ?_delay_us 0005  
                   i2u30_40 0052                     i2u30_41 004E                     i2u29_40 0028  
                   i2u29_41 0024             __CFG_PWMPIN$OFF 000000            delay_ms@repeat_2 0005  
                   __Hparam 0000                     __Lparam 0000                     ___lwdiv 06A8  
                   ___lwmod 07B6                __psmallconst 0100                     __pcinit 0AB2  
           __size_of_memset 0040                     _delay_s 09F0                     __ramtop 0100  
                   __ptext0 01B0                     __ptext1 0536                     __ptext2 05F0  
                   __ptext3 0886                     __ptext4 082E                     __ptext5 08DC  
                   __ptext6 0460                     __ptext7 07B6                     __ptext8 06A8  
                   __ptext9 0A24             __size_of_strchr 0058             __size_of_strlen 0056  
           __size_of_strstr 00BA                  ??_delay_ms 0007                  ??_delay_us 0007  
                   _strncmp 05F0        end_of_initialization 0ABE                     itoa@buf 0015  
                   memset@c 0007                     itoa@val 0017                     memset@n 0009  
                   memset@p 000B               __Lmediumconst 0000              ADC_Get@advalue 000C  
                 _RCSTAbits 000FAB                     postinc0 000FEE                     postinc2 000FDE  
                   utoa@buf 000C                     utoa@val 000E                     strlen@s 0005  
                 _UART_Init 0A94                   _PORTAbits 000F80                   _PORTBbits 000F81  
                 _TRISAbits 000F92                   _TRISBbits 000F93           __size_of_ADC_Init 0018  
                main@buffer 001D                   _TXSTAbits 000FAC            delay_us@repeat_1 0005  
               _BAUDCONbits 000FB8                  ?_UART_Init 0001              __end_of_memset 09B8  
  __size_of_UART_add_buffer 006C    __size_of_UART_Write_Text 0086              __end_of_strchr 0886  
            __end_of_strlen 08DC              __end_of_strstr 05F0         start_initialization 0AB2  
  __size_of_UART_Write_byte 001E                    ??_memset 000B                    ?_ADC_Get 0008  
                  ??_strchr 0009                    ??_strlen 0007                    ??_strstr 0018  
               __pbssCOMRAM 0029           __size_of_delay_ms 0038           __size_of_delay_us 0030  
          ___lwdiv@dividend 0005                   __pintcode 0008                    ?___lwdiv 0005  
                  ?___lwmod 0005                 ??_UART_Init 0005                    ?_delay_s 0008  
               __smallconst 0100                    _ADC_Init 0ACC            ___lwdiv@quotient 0009  
                  ?_strncmp 000B           ??_UART_add_buffer 0001           ??_UART_Write_Text 0008  
         ??_UART_Write_byte 0005                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          __size_of_ADC_Get 0048                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
                _ADCON2bits 000FC0             _UART_Buffer_Ptr 002C                    __Hrparam 0000  
                  __Lrparam 0000            __size_of___lwdiv 0088            __size_of___lwmod 0078  
          __size_of_delay_s 0034                    _delay_ms 09B8                    _delay_us 0A24  
           ___lwdiv@divisor 0007             ___lwdiv@counter 000B                    __ptext10 09F0  
                  __ptext11 0A54                    __ptext12 0978                    __ptext13 0730  
                  __ptext14 0A76                    __ptext15 0A94                    __ptext16 0ACC  
                  __ptext17 0930                    __ptext18 09B8            __size_of_strncmp 00B8  
       UART_Write_Text@text 0006               __size_of_main 02B0               __size_of_itoa 0054  
             __size_of_utoa 00D6                  strncmp@len 000F                    int$flags 003D  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2                    itoa@base 0019  
                  memset@p1 0005                    intlevel2 0000                   strchr@chr 0007  
          ___lwmod@dividend 0005                   strchr@ptr 0005                   strncmp@s1 000B  
                 strncmp@s2 000D                  _OSCCONbits 000FD3         UART_Write_byte@data 0005  
               _UART_buffer 002D                    utoa@base 0010             _UART_add_buffer 0008  
           _UART_Write_Text 0730             _UART_Write_byte 0A76             ___lwmod@divisor 0007  
                  strlen@cp 0009             ___lwmod@counter 0009                    strstr@s1 0014  
                  strstr@s2 0016            UART_Write_Text@i 000A  
