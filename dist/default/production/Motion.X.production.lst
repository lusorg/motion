

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 25 00:45:27 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F1330 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   112                           OVDCONS equ 0F82h ;# 
   113  0000                     # 552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   114                           OVDCOND equ 0F83h ;# 
   115  0000                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   116                           DTCON equ 0F84h ;# 
   117  0000                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   118                           PWMCON1 equ 0F85h ;# 
   119  0000                     # 752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   120                           PWMCON0 equ 0F86h ;# 
   121  0000                     # 818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   122                           SEVTCMPH equ 0F87h ;# 
   123  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   124                           SEVTCMPL equ 0F88h ;# 
   125  0000                     # 858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   126                           LATA equ 0F89h ;# 
   127  0000                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   128                           LATB equ 0F8Ah ;# 
   129  0000                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   130                           FLTCONFIG equ 0F8Bh ;# 
   131  0000                     # 1121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   132                           PDC2H equ 0F8Ch ;# 
   133  0000                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   134                           PDC2L equ 0F8Dh ;# 
   135  0000                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   136                           PDC1H equ 0F8Eh ;# 
   137  0000                     # 1181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   138                           PDC1L equ 0F8Fh ;# 
   139  0000                     # 1201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   140                           PDC0H equ 0F90h ;# 
   141  0000                     # 1221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   142                           PDC0L equ 0F91h ;# 
   143  0000                     # 1241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   144                           TRISA equ 0F92h ;# 
   145  0000                     # 1246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   146                           DDRA equ 0F92h ;# 
   147  0000                     # 1463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   148                           TRISB equ 0F93h ;# 
   149  0000                     # 1468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   150                           DDRB equ 0F93h ;# 
   151  0000                     # 1685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   152                           PTPERH equ 0F95h ;# 
   153  0000                     # 1705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   154                           PTPERL equ 0F96h ;# 
   155  0000                     # 1725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   156                           PTMRH equ 0F97h ;# 
   157  0000                     # 1745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   158                           PTMRL equ 0F98h ;# 
   159  0000                     # 1765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   160                           PTCON1 equ 0F99h ;# 
   161  0000                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   162                           PTCON0 equ 0F9Ah ;# 
   163  0000                     # 1874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   164                           OSCTUNE equ 0F9Bh ;# 
   165  0000                     # 1939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   166                           PIE1 equ 0F9Dh ;# 
   167  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   168                           PIR1 equ 0F9Eh ;# 
   169  0000                     # 2081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   170                           IPR1 equ 0F9Fh ;# 
   171  0000                     # 2152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   172                           PIE2 equ 0FA0h ;# 
   173  0000                     # 2187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   174                           PIR2 equ 0FA1h ;# 
   175  0000                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   176                           IPR2 equ 0FA2h ;# 
   177  0000                     # 2257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   178                           PIE3 equ 0FA3h ;# 
   179  0000                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   180                           PIR3 equ 0FA4h ;# 
   181  0000                     # 2326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   182                           IPR3 equ 0FA5h ;# 
   183  0000                     # 2356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   184                           EECON1 equ 0FA6h ;# 
   185  0000                     # 2422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   186                           EECON2 equ 0FA7h ;# 
   187  0000                     # 2429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   188                           EEDATA equ 0FA8h ;# 
   189  0000                     # 2436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   190                           EEADR equ 0FA9h ;# 
   191  0000                     # 2443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   192                           RCSTA equ 0FABh ;# 
   193  0000                     # 2448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   194                           RCSTA1 equ 0FABh ;# 
   195  0000                     # 2653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   196                           TXSTA equ 0FACh ;# 
   197  0000                     # 2658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   198                           TXSTA1 equ 0FACh ;# 
   199  0000                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   200                           TXREG equ 0FADh ;# 
   201  0000                     # 2914 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   202                           TXREG1 equ 0FADh ;# 
   203  0000                     # 2921 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   204                           RCREG equ 0FAEh ;# 
   205  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   206                           RCREG1 equ 0FAEh ;# 
   207  0000                     # 2933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   208                           SPBRG equ 0FAFh ;# 
   209  0000                     # 2938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   210                           SPBRG1 equ 0FAFh ;# 
   211  0000                     # 2945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   212                           SPBRGH equ 0FB0h ;# 
   213  0000                     # 2952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   214                           CMCON equ 0FB4h ;# 
   215  0000                     # 3038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   216                           CVRCON equ 0FB5h ;# 
   217  0000                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   218                           BAUDCON equ 0FB8h ;# 
   219  0000                     # 3114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   220                           BAUDCTL equ 0FB8h ;# 
   221  0000                     # 3289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   222                           ADCON2 equ 0FC0h ;# 
   223  0000                     # 3360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   224                           ADCON1 equ 0FC1h ;# 
   225  0000                     # 3433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   226                           ADCON0 equ 0FC2h ;# 
   227  0000                     # 3554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   228                           ADRES equ 0FC3h ;# 
   229  0000                     # 3561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   230                           ADRESL equ 0FC3h ;# 
   231  0000                     # 3568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   232                           ADRESH equ 0FC4h ;# 
   233  0000                     # 3575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   234                           T1CON equ 0FCDh ;# 
   235  0000                     # 3680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   236                           TMR1 equ 0FCEh ;# 
   237  0000                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   238                           TMR1L equ 0FCEh ;# 
   239  0000                     # 3694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   240                           TMR1H equ 0FCFh ;# 
   241  0000                     # 3701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   242                           RCON equ 0FD0h ;# 
   243  0000                     # 3834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   244                           WDTCON equ 0FD1h ;# 
   245  0000                     # 3862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   246                           LVDCON equ 0FD2h ;# 
   247  0000                     # 3927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   248                           OSCCON equ 0FD3h ;# 
   249  0000                     # 4010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   250                           T0CON equ 0FD5h ;# 
   251  0000                     # 4089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   252                           TMR0 equ 0FD6h ;# 
   253  0000                     # 4096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   254                           TMR0L equ 0FD6h ;# 
   255  0000                     # 4103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   256                           TMR0H equ 0FD7h ;# 
   257  0000                     # 4110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   258                           STATUS equ 0FD8h ;# 
   259  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   260                           FSR2 equ 0FD9h ;# 
   261  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   262                           FSR2L equ 0FD9h ;# 
   263  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   264                           FSR2H equ 0FDAh ;# 
   265  0000                     # 4202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   266                           PLUSW2 equ 0FDBh ;# 
   267  0000                     # 4209 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   268                           PREINC2 equ 0FDCh ;# 
   269  0000                     # 4216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   270                           POSTDEC2 equ 0FDDh ;# 
   271  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   272                           POSTINC2 equ 0FDEh ;# 
   273  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   274                           INDF2 equ 0FDFh ;# 
   275  0000                     # 4237 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   276                           BSR equ 0FE0h ;# 
   277  0000                     # 4244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   278                           FSR1 equ 0FE1h ;# 
   279  0000                     # 4251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   280                           FSR1L equ 0FE1h ;# 
   281  0000                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   282                           FSR1H equ 0FE2h ;# 
   283  0000                     # 4265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   284                           PLUSW1 equ 0FE3h ;# 
   285  0000                     # 4272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   286                           PREINC1 equ 0FE4h ;# 
   287  0000                     # 4279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   288                           POSTDEC1 equ 0FE5h ;# 
   289  0000                     # 4286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   290                           POSTINC1 equ 0FE6h ;# 
   291  0000                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   292                           INDF1 equ 0FE7h ;# 
   293  0000                     # 4300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   294                           WREG equ 0FE8h ;# 
   295  0000                     # 4312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   296                           FSR0 equ 0FE9h ;# 
   297  0000                     # 4319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   298                           FSR0L equ 0FE9h ;# 
   299  0000                     # 4326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   300                           FSR0H equ 0FEAh ;# 
   301  0000                     # 4333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   302                           PLUSW0 equ 0FEBh ;# 
   303  0000                     # 4340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   304                           PREINC0 equ 0FECh ;# 
   305  0000                     # 4347 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   306                           POSTDEC0 equ 0FEDh ;# 
   307  0000                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   308                           POSTINC0 equ 0FEEh ;# 
   309  0000                     # 4361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   310                           INDF0 equ 0FEFh ;# 
   311  0000                     # 4368 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   312                           INTCON3 equ 0FF0h ;# 
   313  0000                     # 4480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   314                           INTCON2 equ 0FF1h ;# 
   315  0000                     # 4567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   316                           INTCON equ 0FF2h ;# 
   317  0000                     # 4684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   318                           PROD equ 0FF3h ;# 
   319  0000                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   320                           PRODL equ 0FF3h ;# 
   321  0000                     # 4698 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   322                           PRODH equ 0FF4h ;# 
   323  0000                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   324                           TABLAT equ 0FF5h ;# 
   325  0000                     # 4714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   326                           TBLPTR equ 0FF6h ;# 
   327  0000                     # 4721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   328                           TBLPTRL equ 0FF6h ;# 
   329  0000                     # 4728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   330                           TBLPTRH equ 0FF7h ;# 
   331  0000                     # 4735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   332                           TBLPTRU equ 0FF8h ;# 
   333  0000                     # 4744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   334                           PCLAT equ 0FF9h ;# 
   335  0000                     # 4751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   336                           PC equ 0FF9h ;# 
   337  0000                     # 4758 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   338                           PCL equ 0FF9h ;# 
   339  0000                     # 4765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   340                           PCLATH equ 0FFAh ;# 
   341  0000                     # 4772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   342                           PCLATU equ 0FFBh ;# 
   343  0000                     # 4779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   344                           STKPTR equ 0FFCh ;# 
   345  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   346                           TOS equ 0FFDh ;# 
   347  0000                     # 4860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   348                           TOSL equ 0FFDh ;# 
   349  0000                     # 4867 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   350                           TOSH equ 0FFEh ;# 
   351  0000                     # 4874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   352                           TOSU equ 0FFFh ;# 
   353  0000                     	FNCALL	_main,_ADC_Init
   354                           	FNCALL	_main,_IC_Init
   355                           	FNCALL	_main,_UART_Init
   356                           	FNCALL	_main,_UART_Write_Text
   357                           	FNCALL	_main,_UART_clean_buffer
   358                           	FNCALL	_main,_delay_ms
   359                           	FNCALL	_main,_delay_s
   360                           	FNCALL	_main,_send_Status
   361                           	FNCALL	_main,_strstr
   362                           	FNCALL	_strstr,_strchr
   363                           	FNCALL	_strstr,_strlen
   364                           	FNCALL	_strstr,_strncmp
   365                           	FNCALL	_send_Status,_ADC_Get
   366                           	FNCALL	_send_Status,_UART_Write_Text
   367                           	FNCALL	_send_Status,___lldiv
   368                           	FNCALL	_send_Status,___lmul
   369                           	FNCALL	_send_Status,_itoa
   370                           	FNCALL	_itoa,_utoa
   371                           	FNCALL	_utoa,___lwdiv
   372                           	FNCALL	_utoa,___lwmod
   373                           	FNCALL	_UART_Write_Text,_UART_Write_byte
   374                           	FNCALL	_ADC_Get,_delay_ms
   375                           	FNCALL	_delay_s,_delay_ms
   376                           	FNCALL	_UART_clean_buffer,_memset
   377                           	FNROOT	_main
   378                           	FNCALL	intlevel2,_UART_add_buffer
   379                           	global	intlevel2
   380                           	FNROOT	intlevel2
   381                           	global	_cycleAlarm
   382                           	global	_old_state
   383                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   384                           global __pidataCOMRAM
   385                           __pidataCOMRAM:
   386  0011AC                     	file	"main.c"
   387                           	line	24
   388                           
   389                           ;initializer for _cycleAlarm
   390                           	db	low(0Ah)
   391  0011AC  0A                 	line	19
   392                           
   393                           ;initializer for _old_state
   394                           	db	low(080h)
   395  0011AD  80                 	global	_batValue
   396                           	global	_adcValue
   397                           	global	_allArmed
   398                           	global	_cycleAlarmCounter
   399                           	global	_state
   400                           	global	_UART_Buffer_Ptr
   401                           	global	_UART_buffer
   402                           	global	_buffer
   403                           	global	_AC_POWER_OLD
   404                           	global	_TMR0H
   405                           _TMR0H	set	0xFD7
   406  0000                     	global	_TMR0L
   407                           _TMR0L	set	0xFD6
   408  0000                     	global	_PORTBbits
   409                           _PORTBbits	set	0xF81
   410  0000                     	global	_PORTAbits
   411                           _PORTAbits	set	0xF80
   412  0000                     	global	_LATAbits
   413                           _LATAbits	set	0xF89
   414  0000                     	global	_T0CONbits
   415                           _T0CONbits	set	0xFD5
   416  0000                     	global	_OSCTUNEbits
   417                           _OSCTUNEbits	set	0xF9B
   418  0000                     	global	_OSCCONbits
   419                           _OSCCONbits	set	0xFD3
   420  0000                     	global	_TRISBbits
   421                           _TRISBbits	set	0xF93
   422  0000                     	global	_TRISAbits
   423                           _TRISAbits	set	0xF92
   424  0000                     	global	_ADRESL
   425                           _ADRESL	set	0xFC3
   426  0000                     	global	_ADRESH
   427                           _ADRESH	set	0xFC4
   428  0000                     	global	_ADCON2bits
   429                           _ADCON2bits	set	0xFC0
   430  0000                     	global	_ADCON1bits
   431                           _ADCON1bits	set	0xFC1
   432  0000                     	global	_ADCON0bits
   433                           _ADCON0bits	set	0xFC2
   434  0000                     	global	_RCREG
   435                           _RCREG	set	0xFAE
   436  0000                     	global	_PIR1bits
   437                           _PIR1bits	set	0xF9E
   438  0000                     	global	_LATBbits
   439                           _LATBbits	set	0xF8A
   440  0000                     	global	_TXREG
   441                           _TXREG	set	0xFAD
   442  0000                     	global	_SPBRG
   443                           _SPBRG	set	0xFAF
   444  0000                     	global	_BAUDCONbits
   445                           _BAUDCONbits	set	0xFB8
   446  0000                     	global	_TXSTAbits
   447                           _TXSTAbits	set	0xFAC
   448  0000                     	global	_RCSTAbits
   449                           _RCSTAbits	set	0xFAB
   450  0000                     	global	_INTCONbits
   451                           _INTCONbits	set	0xFF2
   452  0000                     	global	_PIE1bits
   453                           _PIE1bits	set	0xF9D
   454  0000                     	global	_TMR0IF
   455                           _TMR0IF	set	0x7F92
   456  0000                     	global	_TRMT
   457                           _TRMT	set	0x7D61
   458  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   459                           global __psmallconst
   460                           __psmallconst:
   461  000100                     	db	0
   462  000100  00                 	
   463                           STR_13:
   464  000101                     	db	72	;'H'
   465  000101  48                 	db	101	;'e'
   466  000102  65                 	db	108	;'l'
   467  000103  6C                 	db	108	;'l'
   468  000104  6C                 	db	111	;'o'
   469  000105  6F                 	db	32
   470  000106  20                 	db	87	;'W'
   471  000107  57                 	db	111	;'o'
   472  000108  6F                 	db	114	;'r'
   473  000109  72                 	db	108	;'l'
   474  00010A  6C                 	db	100	;'d'
   475  00010B  64                 	db	51	;'3'
   476  00010C  33                 	db	49	;'1'
   477  00010D  31                 	db	10
   478  00010E  0A                 	db	0
   479  00010F  00                 	
   480                           STR_11:
   481  000110                     	db	72	;'H'
   482  000110  48                 	db	101	;'e'
   483  000111  65                 	db	108	;'l'
   484  000112  6C                 	db	108	;'l'
   485  000113  6C                 	db	111	;'o'
   486  000114  6F                 	db	32
   487  000115  20                 	db	87	;'W'
   488  000116  57                 	db	111	;'o'
   489  000117  6F                 	db	114	;'r'
   490  000118  72                 	db	108	;'l'
   491  000119  6C                 	db	100	;'d'
   492  00011A  64                 	db	49	;'1'
   493  00011B  31                 	db	10
   494  00011C  0A                 	db	0
   495  00011D  00                 	
   496                           STR_12:
   497  00011E                     	db	72	;'H'
   498  00011E  48                 	db	101	;'e'
   499  00011F  65                 	db	108	;'l'
   500  000120  6C                 	db	108	;'l'
   501  000121  6C                 	db	111	;'o'
   502  000122  6F                 	db	32
   503  000123  20                 	db	87	;'W'
   504  000124  57                 	db	111	;'o'
   505  000125  6F                 	db	114	;'r'
   506  000126  72                 	db	108	;'l'
   507  000127  6C                 	db	100	;'d'
   508  000128  64                 	db	50	;'2'
   509  000129  32                 	db	10
   510  00012A  0A                 	db	0
   511  00012B  00                 	
   512                           STR_29:
   513  00012C                     	db	65	;'A'
   514  00012C  41                 	db	76	;'L'
   515  00012D  4C                 	db	76	;'L'
   516  00012E  4C                 	db	95	;'_'
   517  00012F  5F                 	db	69	;'E'
   518  000130  45                 	db	88	;'X'
   519  000131  58                 	db	84	;'T'
   520  000132  54                 	db	82	;'R'
   521  000133  52                 	db	65	;'A'
   522  000134  41                 	db	95	;'_'
   523  000135  5F                 	db	79	;'O'
   524  000136  4F                 	db	70	;'F'
   525  000137  46                 	db	70	;'F'
   526  000138  46                 	db	0
   527  000139  00                 	
   528                           STR_21:
   529  00013A                     	db	65	;'A'
   530  00013A  41                 	db	76	;'L'
   531  00013B  4C                 	db	76	;'L'
   532  00013C  4C                 	db	95	;'_'
   533  00013D  5F                 	db	83	;'S'
   534  00013E  53                 	db	73	;'I'
   535  00013F  49                 	db	82	;'R'
   536  000140  52                 	db	69	;'E'
   537  000141  45                 	db	78	;'N'
   538  000142  4E                 	db	95	;'_'
   539  000143  5F                 	db	79	;'O'
   540  000144  4F                 	db	70	;'F'
   541  000145  46                 	db	70	;'F'
   542  000146  46                 	db	0
   543  000147  00                 	
   544                           STR_27:
   545  000148                     	db	65	;'A'
   546  000148  41                 	db	76	;'L'
   547  000149  4C                 	db	76	;'L'
   548  00014A  4C                 	db	95	;'_'
   549  00014B  5F                 	db	69	;'E'
   550  00014C  45                 	db	88	;'X'
   551  00014D  58                 	db	84	;'T'
   552  00014E  54                 	db	82	;'R'
   553  00014F  52                 	db	65	;'A'
   554  000150  41                 	db	95	;'_'
   555  000151  5F                 	db	79	;'O'
   556  000152  4F                 	db	78	;'N'
   557  000153  4E                 	db	0
   558  000154  00                 	
   559                           STR_23:
   560  000155                     	db	65	;'A'
   561  000155  41                 	db	76	;'L'
   562  000156  4C                 	db	76	;'L'
   563  000157  4C                 	db	95	;'_'
   564  000158  5F                 	db	83	;'S'
   565  000159  53                 	db	73	;'I'
   566  00015A  49                 	db	82	;'R'
   567  00015B  52                 	db	69	;'E'
   568  00015C  45                 	db	78	;'N'
   569  00015D  4E                 	db	95	;'_'
   570  00015E  5F                 	db	79	;'O'
   571  00015F  4F                 	db	78	;'N'
   572  000160  4E                 	db	0
   573  000161  00                 	
   574                           STR_19:
   575  000162                     	db	65	;'A'
   576  000162  41                 	db	76	;'L'
   577  000163  4C                 	db	76	;'L'
   578  000164  4C                 	db	95	;'_'
   579  000165  5F                 	db	65	;'A'
   580  000166  41                 	db	76	;'L'
   581  000167  4C                 	db	65	;'A'
   582  000168  41                 	db	95	;'_'
   583  000169  5F                 	db	79	;'O'
   584  00016A  4F                 	db	70	;'F'
   585  00016B  46                 	db	70	;'F'
   586  00016C  46                 	db	0
   587  00016D  00                 	
   588                           STR_28:
   589  00016E                     	db	48	;'0'
   590  00016E  30                 	db	95	;'_'
   591  00016F  5F                 	db	69	;'E'
   592  000170  45                 	db	88	;'X'
   593  000171  58                 	db	84	;'T'
   594  000172  54                 	db	82	;'R'
   595  000173  52                 	db	65	;'A'
   596  000174  41                 	db	95	;'_'
   597  000175  5F                 	db	79	;'O'
   598  000176  4F                 	db	70	;'F'
   599  000177  46                 	db	70	;'F'
   600  000178  46                 	db	0
   601  000179  00                 	
   602                           STR_20:
   603  00017A                     	db	48	;'0'
   604  00017A  30                 	db	95	;'_'
   605  00017B  5F                 	db	83	;'S'
   606  00017C  53                 	db	73	;'I'
   607  00017D  49                 	db	82	;'R'
   608  00017E  52                 	db	69	;'E'
   609  00017F  45                 	db	78	;'N'
   610  000180  4E                 	db	95	;'_'
   611  000181  5F                 	db	79	;'O'
   612  000182  4F                 	db	70	;'F'
   613  000183  46                 	db	70	;'F'
   614  000184  46                 	db	0
   615  000185  00                 	
   616                           STR_17:
   617  000186                     	db	65	;'A'
   618  000186  41                 	db	76	;'L'
   619  000187  4C                 	db	76	;'L'
   620  000188  4C                 	db	95	;'_'
   621  000189  5F                 	db	65	;'A'
   622  00018A  41                 	db	76	;'L'
   623  00018B  4C                 	db	65	;'A'
   624  00018C  41                 	db	95	;'_'
   625  00018D  5F                 	db	79	;'O'
   626  00018E  4F                 	db	78	;'N'
   627  00018F  4E                 	db	0
   628  000190  00                 	
   629                           STR_26:
   630  000191                     	db	48	;'0'
   631  000191  30                 	db	95	;'_'
   632  000192  5F                 	db	69	;'E'
   633  000193  45                 	db	88	;'X'
   634  000194  58                 	db	84	;'T'
   635  000195  54                 	db	82	;'R'
   636  000196  52                 	db	65	;'A'
   637  000197  41                 	db	95	;'_'
   638  000198  5F                 	db	79	;'O'
   639  000199  4F                 	db	78	;'N'
   640  00019A  4E                 	db	0
   641  00019B  00                 	
   642                           STR_22:
   643  00019C                     	db	48	;'0'
   644  00019C  30                 	db	95	;'_'
   645  00019D  5F                 	db	83	;'S'
   646  00019E  53                 	db	73	;'I'
   647  00019F  49                 	db	82	;'R'
   648  0001A0  52                 	db	69	;'E'
   649  0001A1  45                 	db	78	;'N'
   650  0001A2  4E                 	db	95	;'_'
   651  0001A3  5F                 	db	79	;'O'
   652  0001A4  4F                 	db	78	;'N'
   653  0001A5  4E                 	db	0
   654  0001A6  00                 	
   655                           STR_15:
   656  0001A7                     	db	65	;'A'
   657  0001A7  41                 	db	76	;'L'
   658  0001A8  4C                 	db	76	;'L'
   659  0001A9  4C                 	db	95	;'_'
   660  0001AA  5F                 	db	83	;'S'
   661  0001AB  53                 	db	84	;'T'
   662  0001AC  54                 	db	65	;'A'
   663  0001AD  41                 	db	84	;'T'
   664  0001AE  54                 	db	85	;'U'
   665  0001AF  55                 	db	83	;'S'
   666  0001B0  53                 	db	0
   667  0001B1  00                 	
   668                           STR_18:
   669  0001B2                     	db	48	;'0'
   670  0001B2  30                 	db	95	;'_'
   671  0001B3  5F                 	db	65	;'A'
   672  0001B4  41                 	db	76	;'L'
   673  0001B5  4C                 	db	65	;'A'
   674  0001B6  41                 	db	95	;'_'
   675  0001B7  5F                 	db	79	;'O'
   676  0001B8  4F                 	db	70	;'F'
   677  0001B9  46                 	db	70	;'F'
   678  0001BA  46                 	db	0
   679  0001BB  00                 	
   680                           STR_16:
   681  0001BC                     	db	48	;'0'
   682  0001BC  30                 	db	95	;'_'
   683  0001BD  5F                 	db	65	;'A'
   684  0001BE  41                 	db	76	;'L'
   685  0001BF  4C                 	db	65	;'A'
   686  0001C0  41                 	db	95	;'_'
   687  0001C1  5F                 	db	79	;'O'
   688  0001C2  4F                 	db	78	;'N'
   689  0001C3  4E                 	db	0
   690  0001C4  00                 	
   691                           STR_25:
   692  0001C5                     	db	65	;'A'
   693  0001C5  41                 	db	76	;'L'
   694  0001C6  4C                 	db	76	;'L'
   695  0001C7  4C                 	db	95	;'_'
   696  0001C8  5F                 	db	66	;'B'
   697  0001C9  42                 	db	69	;'E'
   698  0001CA  45                 	db	69	;'E'
   699  0001CB  45                 	db	80	;'P'
   700  0001CC  50                 	db	0
   701  0001CD  00                 	
   702                           STR_14:
   703  0001CE                     	db	48	;'0'
   704  0001CE  30                 	db	95	;'_'
   705  0001CF  5F                 	db	83	;'S'
   706  0001D0  53                 	db	84	;'T'
   707  0001D1  54                 	db	65	;'A'
   708  0001D2  41                 	db	84	;'T'
   709  0001D3  54                 	db	85	;'U'
   710  0001D4  55                 	db	83	;'S'
   711  0001D5  53                 	db	0
   712  0001D6  00                 	
   713                           STR_24:
   714  0001D7                     	db	48	;'0'
   715  0001D7  30                 	db	95	;'_'
   716  0001D8  5F                 	db	66	;'B'
   717  0001D9  42                 	db	69	;'E'
   718  0001DA  45                 	db	69	;'E'
   719  0001DB  45                 	db	80	;'P'
   720  0001DC  50                 	db	0
   721  0001DD  00                 	
   722                           STR_2:
   723  0001DE                     	db	124
   724  0001DE  7C                 	db	79	;'O'
   725  0001DF  4F                 	db	70	;'F'
   726  0001E0  46                 	db	70	;'F'
   727  0001E1  46                 	db	124
   728  0001E2  7C                 	db	0
   729  0001E3  00                 	
   730                           STR_1:
   731  0001E4                     	db	124
   732  0001E4  7C                 	db	79	;'O'
   733  0001E5  4F                 	db	78	;'N'
   734  0001E6  4E                 	db	124
   735  0001E7  7C                 	db	0
   736  0001E8  00                 	
   737                           STR_5:
   738  0001E9                     	db	65	;'A'
   739  0001E9  41                 	db	67	;'C'
   740  0001EA  43                 	db	124
   741  0001EB  7C                 	db	0
   742  0001EC  00                 	
   743                           STR_6:
   744  0001ED                     	db	68	;'D'
   745  0001ED  44                 	db	67	;'C'
   746  0001EE  43                 	db	124
   747  0001EF  7C                 	db	0
   748  0001F0  00                 STR_3	equ	STR_1+1
   749  0000                     STR_7	equ	STR_1+1
   750  0000                     STR_4	equ	STR_2+1
   751  0000                     STR_8	equ	STR_2+1
   752  0000                     STR_30	equ	STR_23+0
   753  0000                     STR_9	equ	STR_16+6
   754  0000                     STR_10	equ	STR_18+6
   755  0000                     ; #config settings
   756                           global __CFG_OSC$INTIO2
   757                           __CFG_OSC$INTIO2 equ 0x0
   758  0000                     global __CFG_FCMEN$OFF
   759                           __CFG_FCMEN$OFF equ 0x0
   760  0000                     global __CFG_IESO$OFF
   761                           __CFG_IESO$OFF equ 0x0
   762  0000                     global __CFG_PWRT$OFF
   763                           __CFG_PWRT$OFF equ 0x0
   764  0000                     global __CFG_BOR$BOHW
   765                           __CFG_BOR$BOHW equ 0x0
   766  0000                     global __CFG_BORV$3
   767                           __CFG_BORV$3 equ 0x0
   768  0000                     global __CFG_WDT$OFF
   769                           __CFG_WDT$OFF equ 0x0
   770  0000                     global __CFG_WDTPS$32768
   771                           __CFG_WDTPS$32768 equ 0x0
   772  0000                     global __CFG_PWMPIN$OFF
   773                           __CFG_PWMPIN$OFF equ 0x0
   774  0000                     global __CFG_LPOL$HIGH
   775                           __CFG_LPOL$HIGH equ 0x0
   776  0000                     global __CFG_HPOL$HIGH
   777                           __CFG_HPOL$HIGH equ 0x0
   778  0000                     global __CFG_FLTAMX$RA5
   779                           __CFG_FLTAMX$RA5 equ 0x0
   780  0000                     global __CFG_T1OSCMX$HIGH
   781                           __CFG_T1OSCMX$HIGH equ 0x0
   782  0000                     global __CFG_MCLRE$OFF
   783                           __CFG_MCLRE$OFF equ 0x0
   784  0000                     global __CFG_STVREN$ON
   785                           __CFG_STVREN$ON equ 0x0
   786  0000                     global __CFG_BBSIZ$BB256
   787                           __CFG_BBSIZ$BB256 equ 0x0
   788  0000                     global __CFG_XINST$OFF
   789                           __CFG_XINST$OFF equ 0x0
   790  0000                     global __CFG_CP0$OFF
   791                           __CFG_CP0$OFF equ 0x0
   792  0000                     global __CFG_CP1$OFF
   793                           __CFG_CP1$OFF equ 0x0
   794  0000                     global __CFG_CPB$OFF
   795                           __CFG_CPB$OFF equ 0x0
   796  0000                     global __CFG_CPD$OFF
   797                           __CFG_CPD$OFF equ 0x0
   798  0000                     global __CFG_WRT0$OFF
   799                           __CFG_WRT0$OFF equ 0x0
   800  0000                     global __CFG_WRT1$OFF
   801                           __CFG_WRT1$OFF equ 0x0
   802  0000                     global __CFG_WRTC$OFF
   803                           __CFG_WRTC$OFF equ 0x0
   804  0000                     global __CFG_WRTB$OFF
   805                           __CFG_WRTB$OFF equ 0x0
   806  0000                     global __CFG_WRTD$OFF
   807                           __CFG_WRTD$OFF equ 0x0
   808  0000                     global __CFG_EBTR0$OFF
   809                           __CFG_EBTR0$OFF equ 0x0
   810  0000                     global __CFG_EBTR1$OFF
   811                           __CFG_EBTR1$OFF equ 0x0
   812  0000                     global __CFG_EBTRB$OFF
   813                           __CFG_EBTRB$OFF equ 0x0
   814  0000                     	file	"C:\Users\me\AppData\Local\Temp\s8ec."
   815                           	line	#
   816                           psect	cinit,class=CODE,delta=1,reloc=2
   817                           global __pcinit
   818                           __pcinit:
   819  0010CE                     global start_initialization
   820                           start_initialization:
   821  0010CE                     
   822                           global __initialization
   823                           __initialization:
   824  0010CE                     psect	bitbssCOMRAM,class=COMRAM,bit,space=1,noexec
   825                           global __pbitbssCOMRAM
   826                           __pbitbssCOMRAM:
   827  000238                     	global	_AC_POWER_OLD
   828                           _AC_POWER_OLD:
   829  000238                            ds      1
   830  000238                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   831                           global __pbssCOMRAM
   832                           __pbssCOMRAM:
   833  000001                     	global	_batValue
   834                           _batValue:
   835  000001                            ds      2
   836  000001                     	global	_adcValue
   837                           _adcValue:
   838  000003                            ds      2
   839  000003                     	global	_allArmed
   840                           _allArmed:
   841  000005                            ds      1
   842  000005                     	global	_cycleAlarmCounter
   843                           _cycleAlarmCounter:
   844  000006                            ds      1
   845  000006                     	global	_state
   846                           _state:
   847  000007                            ds      1
   848  000007                     	global	_UART_Buffer_Ptr
   849                           _UART_Buffer_Ptr:
   850  000008                            ds      1
   851  000008                     	global	_UART_buffer
   852                           _UART_buffer:
   853  000009                            ds      16
   854  000009                     	global	_buffer
   855                           _buffer:
   856  000019                            ds      10
   857  000019                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   858                           global __pdataCOMRAM
   859                           __pdataCOMRAM:
   860  000045                     	file	"main.c"
   861                           	line	24
   862                           	global	_cycleAlarm
   863                           _cycleAlarm:
   864  000045                            ds      1
   865  000045                     psect	dataCOMRAM
   866                           	file	"main.c"
   867                           	line	19
   868                           	global	_old_state
   869                           _old_state:
   870  000046                            ds      1
   871  000046                     	file	"C:\Users\me\AppData\Local\Temp\s8ec."
   872                           	line	#
   873                           psect	cinit
   874                           ; Initialize objects allocated to COMRAM (2 bytes)
   875                           	global __pidataCOMRAM
   876                           	; load TBLPTR registers with __pidataCOMRAM
   877                           	movlw	low (__pidataCOMRAM)
   878  0010CE  0EAC               	movwf	tblptrl
   879  0010D0  6EF6               	movlw	high(__pidataCOMRAM)
   880  0010D2  0E11               	movwf	tblptrh
   881  0010D4  6EF7               	movlw	low highword(__pidataCOMRAM)
   882  0010D6  0E00               	movwf	tblptru
   883  0010D8  6EF8               	tblrd*+ ;fetch initializer
   884  0010DA  0009               	movff	tablat, __pdataCOMRAM+0		
   885  0010DC  CFF5 F045          	tblrd*+ ;fetch initializer
   886  0010E0  0009               	movff	tablat, __pdataCOMRAM+1		
   887  0010E2  CFF5 F046          	line	#
   888                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   889                           	global __pbitbssCOMRAM
   890                           clrf	(__pbitbssCOMRAM/8+0)&0xffh,c
   891  0010E6  6A47               ; Clear objects allocated to COMRAM (34 bytes)
   892                           	global __pbssCOMRAM
   893                           lfsr	0,__pbssCOMRAM
   894  0010E8  EE00  F001         movlw	34
   895  0010EC  0E22               clear_0:
   896  0010EE                     clrf	postinc0,c
   897  0010EE  6AEE               decf	wreg
   898  0010F0  06E8               bnz	clear_0
   899  0010F2  E1FD               psect cinit,class=CODE,delta=1
   900                           global end_of_initialization,__end_of__initialization
   901                           
   902                           ;End of C runtime variable initialization code
   903                           
   904                           end_of_initialization:
   905  0010F4                     __end_of__initialization:
   906  0010F4                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   907  0010F4  9048               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   908  0010F6  9248               	GLOBAL	__Lmediumconst
   909                           	movlw	low highword(__Lmediumconst)
   910  0010F8  0E00               	movwf	tblptru
   911  0010FA  6EF8               movlb 0
   912  0010FC  0100               goto _main	;jump to C main() function
   913  0010FE  EFF9  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   914                           global __pcstackCOMRAM
   915                           __pcstackCOMRAM:
   916  000023                     ?_UART_Init:	; 1 bytes @ 0x0
   917  000023                     ?_UART_Write_byte:	; 1 bytes @ 0x0
   918  000023                     ?_UART_clean_buffer:	; 1 bytes @ 0x0
   919  000023                     ?_UART_add_buffer:	; 1 bytes @ 0x0
   920  000023                     ??_UART_add_buffer:	; 1 bytes @ 0x0
   921  000023                     ?_ADC_Init:	; 1 bytes @ 0x0
   922  000023                     ?_IC_Init:	; 1 bytes @ 0x0
   923  000023                     ?_send_Status:	; 1 bytes @ 0x0
   924  000023                     ?_main:	; 1 bytes @ 0x0
   925  000023                     	ds   4
   926  000023                     ?_delay_ms:	; 1 bytes @ 0x4
   927  000027                     ??_UART_Init:	; 1 bytes @ 0x4
   928  000027                     ??_UART_Write_byte:	; 1 bytes @ 0x4
   929  000027                     ??_ADC_Init:	; 1 bytes @ 0x4
   930  000027                     ??_IC_Init:	; 1 bytes @ 0x4
   931  000027                     ?_memset:	; 2 bytes @ 0x4
   932  000027                     	global	?_strlen
   933                           ?_strlen:	; 2 bytes @ 0x4
   934  000027                     	global	?_strchr
   935                           ?_strchr:	; 2 bytes @ 0x4
   936  000027                     	global	?___lwdiv
   937                           ?___lwdiv:	; 2 bytes @ 0x4
   938  000027                     	global	?___lwmod
   939                           ?___lwmod:	; 2 bytes @ 0x4
   940  000027                     	global	?___lmul
   941                           ?___lmul:	; 4 bytes @ 0x4
   942  000027                     	global	?___lldiv
   943                           ?___lldiv:	; 4 bytes @ 0x4
   944  000027                     	global	UART_Write_byte@data
   945                           UART_Write_byte@data:	; 1 bytes @ 0x4
   946  000027                     	global	delay_ms@repeat_2
   947                           delay_ms@repeat_2:	; 2 bytes @ 0x4
   948  000027                     	global	___lwdiv@dividend
   949                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   950  000027                     	global	___lwmod@dividend
   951                           ___lwmod@dividend:	; 2 bytes @ 0x4
   952  000027                     	global	memset@p1
   953                           memset@p1:	; 2 bytes @ 0x4
   954  000027                     	global	strchr@ptr
   955                           strchr@ptr:	; 2 bytes @ 0x4
   956  000027                     	global	strlen@s
   957                           strlen@s:	; 2 bytes @ 0x4
   958  000027                     	global	___lmul@multiplier
   959                           ___lmul@multiplier:	; 4 bytes @ 0x4
   960  000027                     	global	___lldiv@dividend
   961                           ___lldiv@dividend:	; 4 bytes @ 0x4
   962  000027                     	ds   1
   963  000027                     ?_UART_Write_Text:	; 1 bytes @ 0x5
   964  000028                     	global	UART_Write_Text@text
   965                           UART_Write_Text@text:	; 2 bytes @ 0x5
   966  000028                     	ds   1
   967  000028                     ??_strlen:	; 1 bytes @ 0x6
   968  000029                     ??_delay_ms:	; 1 bytes @ 0x6
   969  000029                     	global	___lwdiv@divisor
   970                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   971  000029                     	global	___lwmod@divisor
   972                           ___lwmod@divisor:	; 2 bytes @ 0x6
   973  000029                     	global	memset@c
   974                           memset@c:	; 2 bytes @ 0x6
   975  000029                     	global	strchr@chr
   976                           strchr@chr:	; 2 bytes @ 0x6
   977  000029                     	ds   1
   978  000029                     ?_delay_s:	; 1 bytes @ 0x7
   979  00002A                     ??_UART_Write_Text:	; 1 bytes @ 0x7
   980  00002A                     	global	?_ADC_Get
   981                           ?_ADC_Get:	; 2 bytes @ 0x7
   982  00002A                     	global	delay_s@repeat_3
   983                           delay_s@repeat_3:	; 2 bytes @ 0x7
   984  00002A                     	ds   1
   985  00002A                     ??_strchr:	; 1 bytes @ 0x8
   986  00002B                     ??___lwdiv:	; 1 bytes @ 0x8
   987  00002B                     ??___lwmod:	; 1 bytes @ 0x8
   988  00002B                     	global	___lwmod@counter
   989                           ___lwmod@counter:	; 1 bytes @ 0x8
   990  00002B                     	global	___lwdiv@quotient
   991                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   992  00002B                     	global	memset@n
   993                           memset@n:	; 2 bytes @ 0x8
   994  00002B                     	global	strlen@cp
   995                           strlen@cp:	; 2 bytes @ 0x8
   996  00002B                     	global	___lmul@multiplicand
   997                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   998  00002B                     	global	___lldiv@divisor
   999                           ___lldiv@divisor:	; 4 bytes @ 0x8
  1000  00002B                     	ds   1
  1001  00002B                     ??_delay_s:	; 1 bytes @ 0x9
  1002  00002C                     ??_ADC_Get:	; 1 bytes @ 0x9
  1003  00002C                     	global	UART_Write_Text@toSend
  1004                           UART_Write_Text@toSend:	; 1 bytes @ 0x9
  1005  00002C                     	ds   1
  1006  00002C                     ??_memset:	; 1 bytes @ 0xA
  1007  00002D                     	global	?_strncmp
  1008                           ?_strncmp:	; 2 bytes @ 0xA
  1009  00002D                     	global	___lwdiv@counter
  1010                           ___lwdiv@counter:	; 1 bytes @ 0xA
  1011  00002D                     	global	UART_Write_Text@i
  1012                           UART_Write_Text@i:	; 2 bytes @ 0xA
  1013  00002D                     	global	memset@p
  1014                           memset@p:	; 2 bytes @ 0xA
  1015  00002D                     	global	strncmp@s1
  1016                           strncmp@s1:	; 2 bytes @ 0xA
  1017  00002D                     	ds   1
  1018  00002D                     ?_utoa:	; 2 bytes @ 0xB
  1019  00002E                     	global	ADC_Get@advalue
  1020                           ADC_Get@advalue:	; 2 bytes @ 0xB
  1021  00002E                     	global	utoa@buf
  1022                           utoa@buf:	; 2 bytes @ 0xB
  1023  00002E                     	ds   1
  1024  00002E                     ??_UART_clean_buffer:	; 1 bytes @ 0xC
  1025  00002F                     ??___lmul:	; 1 bytes @ 0xC
  1026  00002F                     ??___lldiv:	; 1 bytes @ 0xC
  1027  00002F                     	global	strncmp@s2
  1028                           strncmp@s2:	; 2 bytes @ 0xC
  1029  00002F                     	global	___lmul@product
  1030                           ___lmul@product:	; 4 bytes @ 0xC
  1031  00002F                     	global	___lldiv@quotient
  1032                           ___lldiv@quotient:	; 4 bytes @ 0xC
  1033  00002F                     	ds   1
  1034  00002F                     	global	utoa@val
  1035                           utoa@val:	; 2 bytes @ 0xD
  1036  000030                     	ds   1
  1037  000030                     	global	strncmp@len
  1038                           strncmp@len:	; 2 bytes @ 0xE
  1039  000031                     	ds   1
  1040  000031                     	global	utoa@base
  1041                           utoa@base:	; 2 bytes @ 0xF
  1042  000032                     	ds   1
  1043  000032                     ??_strncmp:	; 1 bytes @ 0x10
  1044  000033                     	global	___lldiv@counter
  1045                           ___lldiv@counter:	; 1 bytes @ 0x10
  1046  000033                     	ds   1
  1047  000033                     ??_utoa:	; 1 bytes @ 0x11
  1048  000034                     	global	utoa@v
  1049                           utoa@v:	; 2 bytes @ 0x11
  1050  000034                     	ds   2
  1051  000034                     	global	?_strstr
  1052                           ?_strstr:	; 2 bytes @ 0x13
  1053  000036                     	global	utoa@c
  1054                           utoa@c:	; 1 bytes @ 0x13
  1055  000036                     	global	strstr@s1
  1056                           strstr@s1:	; 2 bytes @ 0x13
  1057  000036                     	ds   1
  1058  000036                     ?_itoa:	; 2 bytes @ 0x14
  1059  000037                     	global	itoa@buf
  1060                           itoa@buf:	; 2 bytes @ 0x14
  1061  000037                     	ds   1
  1062  000037                     	global	strstr@s2
  1063                           strstr@s2:	; 2 bytes @ 0x15
  1064  000038                     	ds   1
  1065  000038                     	global	itoa@val
  1066                           itoa@val:	; 2 bytes @ 0x16
  1067  000039                     	ds   1
  1068  000039                     ??_strstr:	; 1 bytes @ 0x17
  1069  00003A                     	ds   1
  1070  00003A                     	global	itoa@base
  1071                           itoa@base:	; 2 bytes @ 0x18
  1072  00003B                     	ds   2
  1073  00003B                     ??_itoa:	; 1 bytes @ 0x1A
  1074  00003D                     	global	itoa@cp
  1075                           itoa@cp:	; 2 bytes @ 0x1A
  1076  00003D                     	ds   2
  1077  00003D                     ??_send_Status:	; 1 bytes @ 0x1C
  1078  00003F                     	global	send_Status@temp
  1079                           send_Status@temp:	; 4 bytes @ 0x1C
  1080  00003F                     	ds   4
  1081  00003F                     ??_main:	; 1 bytes @ 0x20
  1082  000043                     	ds   2
  1083  000043                     ;!
  1084                           ;!Data Sizes:
  1085                           ;!    Strings     240
  1086                           ;!    Constant    0
  1087                           ;!    Data        2
  1088                           ;!    BSS         34
  1089                           ;!    Persistent  0
  1090                           ;!    Stack       0
  1091                           ;!
  1092                           ;!Auto Spaces:
  1093                           ;!    Space          Size  Autos    Used
  1094                           ;!    COMRAM          126     34      71
  1095                           ;!    BANK0           128      0       0
  1096                           
  1097                           ;!
  1098                           ;!Pointer List with Targets:
  1099                           ;!
  1100                           ;!    strncmp@s2	PTR const unsigned char  size(2) Largest target is 14
  1101                           ;!		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
  1102                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
  1103                           ;!		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
  1104                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 
  1105                           ;!
  1106                           ;!    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
  1107                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
  1108                           ;!
  1109                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 14
  1110                           ;!		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
  1111                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
  1112                           ;!		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
  1113                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 
  1114                           ;!
  1115                           ;!    strlen@cp	PTR const unsigned char  size(2) Largest target is 14
  1116                           ;!		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
  1117                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
  1118                           ;!		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
  1119                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 
  1120                           ;!
  1121                           ;!    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
  1122                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
  1123                           ;!
  1124                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 16
  1125                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
  1126                           ;!
  1127                           ;!    strstr@s2	PTR const unsigned char  size(2) Largest target is 14
  1128                           ;!		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
  1129                           ;!		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
  1130                           ;!		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
  1131                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 
  1132                           ;!
  1133                           ;!    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
  1134                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
  1135                           ;!
  1136                           ;!    memset@p1	PTR void  size(2) Largest target is 16
  1137                           ;!		 -> UART_buffer(COMRAM[16]), 
  1138                           ;!
  1139                           ;!    memset@p	PTR unsigned char  size(2) Largest target is 16
  1140                           ;!		 -> UART_buffer(COMRAM[16]), 
  1141                           ;!
  1142                           ;!    utoa@buf	PTR unsigned char  size(2) Largest target is 10
  1143                           ;!		 -> buffer(COMRAM[10]), 
  1144                           ;!
  1145                           ;!    sp__utoa	PTR unsigned char  size(2) Largest target is 10
  1146                           ;!		 -> buffer(COMRAM[10]), 
  1147                           ;!
  1148                           ;!    itoa@buf	PTR unsigned char  size(2) Largest target is 10
  1149                           ;!		 -> buffer(COMRAM[10]), 
  1150                           ;!
  1151                           ;!    itoa@cp	PTR unsigned char  size(2) Largest target is 10
  1152                           ;!		 -> buffer(COMRAM[10]), 
  1153                           ;!
  1154                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 16
  1155                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
  1156                           ;!
  1157                           ;!    sp__itoa	PTR unsigned char  size(2) Largest target is 10
  1158                           ;!		 -> buffer(COMRAM[10]), 
  1159                           ;!
  1160                           ;!    sp__memset	PTR void  size(2) Largest target is 16
  1161                           ;!		 -> UART_buffer(COMRAM[16]), 
  1162                           ;!
  1163                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
  1164                           ;!		 -> STR_30(CODE[13]), STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), 
  1165                           ;!		 -> STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
  1166                           ;!		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), 
  1167                           ;!		 -> STR_2(CODE[6]), STR_1(CODE[5]), buffer(COMRAM[10]), 
  1168                           ;!
  1169                           
  1170                           
  1171                           ;!
  1172                           ;!Critical Paths under _main in COMRAM
  1173                           ;!
  1174                           ;!    _main->_send_Status
  1175                           ;!    _strstr->_strncmp
  1176                           ;!    _strncmp->_strlen
  1177                           ;!    _send_Status->_itoa
  1178                           ;!    _itoa->_utoa
  1179                           ;!    _utoa->___lwdiv
  1180                           ;!    _UART_Write_Text->_UART_Write_byte
  1181                           ;!    _ADC_Get->_delay_ms
  1182                           ;!    _delay_s->_delay_ms
  1183                           ;!    _UART_clean_buffer->_memset
  1184                           ;!
  1185                           ;!Critical Paths under _UART_add_buffer in COMRAM
  1186                           ;!
  1187                           ;!    None.
  1188                           ;!
  1189                           ;!Critical Paths under _main in BANK0
  1190                           ;!
  1191                           ;!    None.
  1192                           ;!
  1193                           ;!Critical Paths under _UART_add_buffer in BANK0
  1194                           ;!
  1195                           ;!    None.
  1196                           
  1197 ;;
  1198 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1199 ;;
  1200                           
  1201                           ;!
  1202                           ;!Call Graph Tables:
  1203                           ;!
  1204                           ;! ---------------------------------------------------------------------------------
  1205                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1206                           ;! ---------------------------------------------------------------------------------
  1207                           ;! (0) _main                                                 3     3      0   10881
  1208                           ;!                                             32 COMRAM     2     2      0
  1209                           ;!                           _ADC_Init
  1210                           ;!                            _IC_Init
  1211                           ;!                          _UART_Init
  1212                           ;!                    _UART_Write_Text
  1213                           ;!                  _UART_clean_buffer
  1214                           ;!                           _delay_ms
  1215                           ;!                            _delay_s
  1216                           ;!                        _send_Status
  1217                           ;!                             _strstr
  1218                           ;! ---------------------------------------------------------------------------------
  1219                           ;! (1) _strstr                                               4     0      4    3377
  1220                           ;!                                             19 COMRAM     4     0      4
  1221                           ;!                             _strchr
  1222                           ;!                             _strlen
  1223                           ;!                            _strncmp
  1224                           ;! ---------------------------------------------------------------------------------
  1225                           ;! (2) _strncmp                                              9     3      6     362
  1226                           ;!                                             10 COMRAM     9     3      6
  1227                           ;!                             _strlen (ARG)
  1228                           ;! ---------------------------------------------------------------------------------
  1229                           ;! (2) _strlen                                               6     4      2     166
  1230                           ;!                                              4 COMRAM     6     4      2
  1231                           ;! ---------------------------------------------------------------------------------
  1232                           ;! (2) _strchr                                               5     1      4     240
  1233                           ;!                                              4 COMRAM     5     1      4
  1234                           ;! ---------------------------------------------------------------------------------
  1235                           ;! (1) _send_Status                                          4     4      0    4326
  1236                           ;!                                             28 COMRAM     4     4      0
  1237                           ;!                            _ADC_Get
  1238                           ;!                    _UART_Write_Text
  1239                           ;!                            ___lldiv
  1240                           ;!                             ___lmul
  1241                           ;!                               _itoa
  1242                           ;! ---------------------------------------------------------------------------------
  1243                           ;! (2) _itoa                                                 8     2      6    1698
  1244                           ;!                                             20 COMRAM     8     2      6
  1245                           ;!                               _utoa
  1246                           ;! ---------------------------------------------------------------------------------
  1247                           ;! (3) _utoa                                                 9     3      6    1307
  1248                           ;!                                             11 COMRAM     9     3      6
  1249                           ;!                            ___lwdiv
  1250                           ;!                            ___lwmod
  1251                           ;! ---------------------------------------------------------------------------------
  1252                           ;! (4) ___lwmod                                              5     1      4     311
  1253                           ;!                                              4 COMRAM     5     1      4
  1254                           ;! ---------------------------------------------------------------------------------
  1255                           ;! (4) ___lwdiv                                              7     3      4     466
  1256                           ;!                                              4 COMRAM     7     3      4
  1257                           ;! ---------------------------------------------------------------------------------
  1258                           ;! (2) ___lmul                                              12     4      8     370
  1259                           ;!                                              4 COMRAM    12     4      8
  1260                           ;! ---------------------------------------------------------------------------------
  1261                           ;! (2) ___lldiv                                             13     5      8     314
  1262                           ;!                                              4 COMRAM    13     5      8
  1263                           ;! ---------------------------------------------------------------------------------
  1264                           ;! (2) _UART_Write_Text                                      7     5      2    1268
  1265                           ;!                                              5 COMRAM     7     5      2
  1266                           ;!                    _UART_Write_byte
  1267                           ;! ---------------------------------------------------------------------------------
  1268                           ;! (3) _UART_Write_byte                                      1     1      0      15
  1269                           ;!                                              4 COMRAM     1     1      0
  1270                           ;! ---------------------------------------------------------------------------------
  1271                           ;! (2) _ADC_Get                                              6     4      2     653
  1272                           ;!                                              7 COMRAM     6     4      2
  1273                           ;!                           _delay_ms
  1274                           ;! ---------------------------------------------------------------------------------
  1275                           ;! (1) _delay_s                                              2     0      2     956
  1276                           ;!                                              7 COMRAM     2     0      2
  1277                           ;!                           _delay_ms
  1278                           ;! ---------------------------------------------------------------------------------
  1279                           ;! (3) _delay_ms                                             3     1      2     630
  1280                           ;!                                              4 COMRAM     3     1      2
  1281                           ;! ---------------------------------------------------------------------------------
  1282                           ;! (1) _UART_clean_buffer                                    0     0      0     324
  1283                           ;!                             _memset
  1284                           ;! ---------------------------------------------------------------------------------
  1285                           ;! (2) _memset                                               8     2      6     324
  1286                           ;!                                              4 COMRAM     8     2      6
  1287                           ;! ---------------------------------------------------------------------------------
  1288                           ;! (1) _UART_Init                                            0     0      0       0
  1289                           ;! ---------------------------------------------------------------------------------
  1290                           ;! (1) _IC_Init                                              0     0      0       0
  1291                           ;! ---------------------------------------------------------------------------------
  1292                           ;! (1) _ADC_Init                                             0     0      0       0
  1293                           ;! ---------------------------------------------------------------------------------
  1294                           ;! Estimated maximum stack depth 4
  1295                           ;! ---------------------------------------------------------------------------------
  1296                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1297                           ;! ---------------------------------------------------------------------------------
  1298                           ;! (5) _UART_add_buffer                                      4     4      0       0
  1299                           ;!                                              0 COMRAM     4     4      0
  1300                           ;! ---------------------------------------------------------------------------------
  1301                           ;! Estimated maximum stack depth 5
  1302                           ;! ---------------------------------------------------------------------------------
  1303                           ;!
  1304                           ;! Call Graph Graphs:
  1305                           ;!
  1306                           ;! _main (ROOT)
  1307                           ;!   _ADC_Init
  1308                           ;!   _IC_Init
  1309                           ;!   _UART_Init
  1310                           ;!   _UART_Write_Text
  1311                           ;!     _UART_Write_byte
  1312                           ;!   _UART_clean_buffer
  1313                           ;!     _memset
  1314                           ;!   _delay_ms
  1315                           ;!   _delay_s
  1316                           ;!     _delay_ms
  1317                           ;!   _send_Status
  1318                           ;!     _ADC_Get
  1319                           ;!       _delay_ms
  1320                           ;!     _UART_Write_Text
  1321                           ;!       _UART_Write_byte
  1322                           ;!     ___lldiv
  1323                           ;!     ___lmul
  1324                           ;!     _itoa
  1325                           ;!       _utoa
  1326                           ;!         ___lwdiv
  1327                           ;!         ___lwmod
  1328                           ;!   _strstr
  1329                           ;!     _strchr
  1330                           ;!     _strlen
  1331                           ;!     _strncmp
  1332                           ;!       _strlen (ARG)
  1333                           ;!
  1334                           ;! _UART_add_buffer (ROOT)
  1335                           ;!
  1336                           
  1337                           ;! Address spaces:
  1338                           
  1339                           ;!Name               Size   Autos  Total    Cost      Usage
  1340                           ;!BIGRAM              FF      0       0       6        0.0%
  1341                           ;!EEDATA              80      0       0       0        0.0%
  1342                           ;!BITBANK0            80      0       0       3        0.0%
  1343                           ;!BANK0               80      0       0       4        0.0%
  1344                           ;!BITCOMRAM           7E      0       1       0        0.8%
  1345                           ;!COMRAM              7E     22      47       1       56.3%
  1346                           ;!BITSFR               0      0       0     200        0.0%
  1347                           ;!SFR                  0      0       0     200        0.0%
  1348                           ;!STACK                0      0       0       2        0.0%
  1349                           ;!NULL                 0      0       0       0        0.0%
  1350                           ;!ABS                  0      0      47       5        0.0%
  1351                           ;!DATA                 0      0      47       7        0.0%
  1352                           ;!CODE                 0      0       0       0        0.0%
  1353                           
  1354                           	global	_main
  1355                           
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 73 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  counter         1    0        unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0
  1372 ;;      Params:         0       0
  1373 ;;      Locals:         0       0
  1374 ;;      Temps:          2       0
  1375 ;;      Totals:         2       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels required when called:    5
  1378 ;; This function calls:
  1379 ;;		_ADC_Init
  1380 ;;		_IC_Init
  1381 ;;		_UART_Init
  1382 ;;		_UART_Write_Text
  1383 ;;		_UART_clean_buffer
  1384 ;;		_delay_ms
  1385 ;;		_delay_s
  1386 ;;		_send_Status
  1387 ;;		_strstr
  1388 ;; This function is called by:
  1389 ;;		Startup code after reset
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1393                           	file	"main.c"
  1394                           	line	73
  1395                           global __ptext0
  1396                           __ptext0:
  1397  0001F2                     psect	text0
  1398                           	file	"main.c"
  1399                           	line	73
  1400                           	global	__size_of_main
  1401                           	__size_of_main	equ	__end_of_main-_main
  1402  0000                     	
  1403                           _main:
  1404  0001F2                     ;incstack = 0
  1405                           	opt	stack 26
  1406                           	line	78
  1407                           	
  1408                           l1721:
  1409  0001F2                     ;main.c: 78: IC_Init();
  1410                           	call	_IC_Init	;wreg free
  1411  0001F2  EC4C  F008         	line	79
  1412                           	
  1413                           l1723:
  1414  0001F6                     ;main.c: 79: UART_Init();
  1415                           	call	_UART_Init	;wreg free
  1416  0001F6  ECBB  F008         	line	80
  1417                           	
  1418                           l1725:
  1419  0001FA                     ;main.c: 80: ADC_Init();
  1420                           	call	_ADC_Init	;wreg free
  1421  0001FA  ECCA  F008         	line	82
  1422                           	
  1423                           l1727:
  1424  0001FE                     ;main.c: 82: LATBbits.LATB4 = 1;
  1425                           	bsf	((c:3978)),c,4	;volatile
  1426  0001FE  888A               	line	83
  1427                           	
  1428                           l1729:
  1429  000200                     ;main.c: 83: delay_ms(50);
  1430                           	movlw	high(032h)
  1431  000200  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1432  000202  6E28               	movlw	low(032h)
  1433  000204  0E32               	movwf	((c:delay_ms@repeat_2)),c
  1434  000206  6E27               	call	_delay_ms	;wreg free
  1435  000208  EC30  F008         	line	84
  1436                           	
  1437                           l1731:
  1438  00020C                     ;main.c: 84: LATBbits.LATB4 = 0;
  1439                           	bcf	((c:3978)),c,4	;volatile
  1440  00020C  988A               	line	86
  1441                           	
  1442                           l1733:
  1443  00020E                     ;main.c: 86: LATBbits.LATB3 = 1;
  1444                           	bsf	((c:3978)),c,3	;volatile
  1445  00020E  868A               	line	87
  1446                           	
  1447                           l1735:
  1448  000210                     ;main.c: 87: LATAbits.LATA0 = 0;
  1449                           	bcf	((c:3977)),c,0	;volatile
  1450  000210  9089               	line	88
  1451                           	
  1452                           l1737:
  1453  000212                     ;main.c: 88: LATBbits.LATB5 = 1;
  1454                           	bsf	((c:3978)),c,5	;volatile
  1455  000212  8A8A               	line	89
  1456                           	
  1457                           l1739:
  1458  000214                     ;main.c: 89: delay_s(1);
  1459                           	movlw	high(01h)
  1460  000214  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1461  000216  6E2B               	movlw	low(01h)
  1462  000218  0E01               	movwf	((c:delay_s@repeat_3)),c
  1463  00021A  6E2A               	call	_delay_s	;wreg free
  1464  00021C  EC81  F008         	line	90
  1465                           	
  1466                           l1741:
  1467  000220                     ;main.c: 90: LATBbits.LATB3 = 0;
  1468                           	bcf	((c:3978)),c,3	;volatile
  1469  000220  968A               	line	91
  1470                           	
  1471                           l1743:
  1472  000222                     ;main.c: 91: LATAbits.LATA0 = 1;
  1473                           	bsf	((c:3977)),c,0	;volatile
  1474  000222  8089               	line	92
  1475                           	
  1476                           l1745:
  1477  000224                     ;main.c: 92: LATBbits.LATB5 = 0;
  1478                           	bcf	((c:3978)),c,5	;volatile
  1479  000224  9A8A               	line	93
  1480                           	
  1481                           l1747:
  1482  000226                     ;main.c: 93: delay_s(1);
  1483                           	movlw	high(01h)
  1484  000226  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1485  000228  6E2B               	movlw	low(01h)
  1486  00022A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1487  00022C  6E2A               	call	_delay_s	;wreg free
  1488  00022E  EC81  F008         	line	94
  1489                           	
  1490                           l1749:
  1491  000232                     ;main.c: 94: LATBbits.LATB3 = 1;
  1492                           	bsf	((c:3978)),c,3	;volatile
  1493  000232  868A               	line	95
  1494                           	
  1495                           l1751:
  1496  000234                     ;main.c: 95: LATAbits.LATA0 = 0;
  1497                           	bcf	((c:3977)),c,0	;volatile
  1498  000234  9089               	line	96
  1499                           	
  1500                           l1753:
  1501  000236                     ;main.c: 96: delay_s(1);
  1502                           	movlw	high(01h)
  1503  000236  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1504  000238  6E2B               	movlw	low(01h)
  1505  00023A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1506  00023C  6E2A               	call	_delay_s	;wreg free
  1507  00023E  EC81  F008         	line	97
  1508                           	
  1509                           l1755:
  1510  000242                     ;main.c: 97: LATBbits.LATB3 = 0;
  1511                           	bcf	((c:3978)),c,3	;volatile
  1512  000242  968A               	line	98
  1513                           	
  1514                           l1757:
  1515  000244                     ;main.c: 98: LATAbits.LATA0 = 1;
  1516                           	bsf	((c:3977)),c,0	;volatile
  1517  000244  8089               	line	99
  1518                           	
  1519                           l1759:
  1520  000246                     ;main.c: 99: delay_s(1);
  1521                           	movlw	high(01h)
  1522  000246  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1523  000248  6E2B               	movlw	low(01h)
  1524  00024A  0E01               	movwf	((c:delay_s@repeat_3)),c
  1525  00024C  6E2A               	call	_delay_s	;wreg free
  1526  00024E  EC81  F008         	line	100
  1527                           	
  1528                           l1761:
  1529  000252                     ;main.c: 100: LATBbits.LATB3 = 0;
  1530                           	bcf	((c:3978)),c,3	;volatile
  1531  000252  968A               	line	101
  1532                           	
  1533                           l1763:
  1534  000254                     ;main.c: 101: LATAbits.LATA0 = 0;
  1535                           	bcf	((c:3977)),c,0	;volatile
  1536  000254  9089               	line	103
  1537                           	
  1538                           l1765:
  1539  000256                     ;main.c: 103: UART_Write_Text((unsigned char *) "Hello World1\n");
  1540                           		movlw	low(STR_11)
  1541  000256  0E10               	movwf	((c:UART_Write_Text@text)),c
  1542  000258  6E28               	movlw	high(STR_11)
  1543  00025A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1544  00025C  6E29               
  1545                           	call	_UART_Write_Text	;wreg free
  1546  00025E  EC6D  F006         	line	104
  1547                           	
  1548                           l1767:
  1549  000262                     ;main.c: 104: UART_Write_Text((unsigned char *) "Hello World2\n");
  1550                           		movlw	low(STR_12)
  1551  000262  0E1E               	movwf	((c:UART_Write_Text@text)),c
  1552  000264  6E28               	movlw	high(STR_12)
  1553  000266  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1554  000268  6E29               
  1555                           	call	_UART_Write_Text	;wreg free
  1556  00026A  EC6D  F006         	line	105
  1557                           	
  1558                           l1769:
  1559  00026E                     ;main.c: 105: UART_Write_Text((unsigned char *) "Hello World31\n");
  1560                           		movlw	low(STR_13)
  1561  00026E  0E01               	movwf	((c:UART_Write_Text@text)),c
  1562  000270  6E28               	movlw	high(STR_13)
  1563  000272  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1564  000274  6E29               
  1565                           	call	_UART_Write_Text	;wreg free
  1566  000276  EC6D  F006         	goto	l1771
  1567  00027A  EF3F  F001         	line	108
  1568                           ;main.c: 107: unsigned char counter;;main.c: 108: while (1) {
  1569                           	
  1570                           l157:
  1571  00027E                     	line	113
  1572                           	
  1573                           l1771:
  1574  00027E                     ;main.c: 113: if (strstr(UART_buffer, "0_STATUS") != (0) | strstr(UART_buffer, "ALL_STAT
                                 US") != (0)) {
  1575                           		movlw	low(_UART_buffer)
  1576  00027E  0E09               	movwf	((c:strstr@s1)),c
  1577  000280  6E36               	movlw	high(_UART_buffer)
  1578  000282  0E00               	movwf	((c:strstr@s1+1)),c
  1579  000284  6E37               
  1580                           		movlw	low(STR_15)
  1581  000286  0EA7               	movwf	((c:strstr@s2)),c
  1582  000288  6E38               	movlw	high(STR_15)
  1583  00028A  0E01               	movwf	((c:strstr@s2+1)),c
  1584  00028C  6E39               
  1585                           	call	_strstr	;wreg free
  1586  00028E  EC58  F005         	movf	(0+?_strstr),c,w
  1587  000292  5036               iorwf	(1+?_strstr),c,w
  1588  000294  1037               	btfss	status,2
  1589  000296  A4D8               	goto	u1201
  1590  000298  EF50  F001         	goto	u1200
  1591  00029C  EF53  F001         
  1592                           u1201:
  1593  0002A0                     	movlw	1
  1594  0002A0  0E01               	goto	u1202
  1595  0002A2  EF54  F001         u1200:
  1596  0002A6                     	movlw	0
  1597  0002A6  0E00               u1202:
  1598  0002A8                     	
  1599                           	movwf	(??_main+0+0)&0ffh,c
  1600  0002A8  6E43               		movlw	low(_UART_buffer)
  1601  0002AA  0E09               	movwf	((c:strstr@s1)),c
  1602  0002AC  6E36               	movlw	high(_UART_buffer)
  1603  0002AE  0E00               	movwf	((c:strstr@s1+1)),c
  1604  0002B0  6E37               
  1605                           		movlw	low(STR_14)
  1606  0002B2  0ECE               	movwf	((c:strstr@s2)),c
  1607  0002B4  6E38               	movlw	high(STR_14)
  1608  0002B6  0E01               	movwf	((c:strstr@s2+1)),c
  1609  0002B8  6E39               
  1610                           	call	_strstr	;wreg free
  1611  0002BA  EC58  F005         	movf	(0+?_strstr),c,w
  1612  0002BE  5036               iorwf	(1+?_strstr),c,w
  1613  0002C0  1037               	btfss	status,2
  1614  0002C2  A4D8               	goto	u1211
  1615  0002C4  EF66  F001         	goto	u1210
  1616  0002C8  EF69  F001         
  1617                           u1211:
  1618  0002CC                     	movlw	1
  1619  0002CC  0E01               	goto	u1212
  1620  0002CE  EF6A  F001         u1210:
  1621  0002D2                     	movlw	0
  1622  0002D2  0E00               u1212:
  1623  0002D4                     	
  1624                           	iorwf	(??_main+0+0),c,w
  1625  0002D4  1043               	btfss	wreg,0
  1626  0002D6  A0E8               	goto	u1221
  1627  0002D8  EF70  F001         	goto	u1220
  1628  0002DC  EF72  F001         u1221:
  1629  0002E0                     	goto	l1777
  1630  0002E0  EF78  F001         u1220:
  1631  0002E4                     	line	114
  1632                           	
  1633                           l1773:
  1634  0002E4                     ;main.c: 114: UART_clean_buffer();
  1635                           	call	_UART_clean_buffer	;wreg free
  1636  0002E4  EC9B  F008         	line	115
  1637                           	
  1638                           l1775:
  1639  0002E8                     ;main.c: 115: send_Status();
  1640                           	call	_send_Status	;wreg free
  1641  0002E8  EC31  F004         	line	116
  1642                           ;main.c: 116: } else if (strstr(UART_buffer, "0_ALA_ON") != (0) | strstr(UART_buffer, "A
                                 LL_ALA_ON") != (0)) {
  1643                           	goto	l1831
  1644  0002EC  EF2F  F003         	
  1645                           l158:
  1646  0002F0                     	
  1647                           l1777:
  1648  0002F0                     		movlw	low(_UART_buffer)
  1649  0002F0  0E09               	movwf	((c:strstr@s1)),c
  1650  0002F2  6E36               	movlw	high(_UART_buffer)
  1651  0002F4  0E00               	movwf	((c:strstr@s1+1)),c
  1652  0002F6  6E37               
  1653                           		movlw	low(STR_17)
  1654  0002F8  0E86               	movwf	((c:strstr@s2)),c
  1655  0002FA  6E38               	movlw	high(STR_17)
  1656  0002FC  0E01               	movwf	((c:strstr@s2+1)),c
  1657  0002FE  6E39               
  1658                           	call	_strstr	;wreg free
  1659  000300  EC58  F005         	movf	(0+?_strstr),c,w
  1660  000304  5036               iorwf	(1+?_strstr),c,w
  1661  000306  1037               	btfss	status,2
  1662  000308  A4D8               	goto	u1231
  1663  00030A  EF89  F001         	goto	u1230
  1664  00030E  EF8C  F001         
  1665                           u1231:
  1666  000312                     	movlw	1
  1667  000312  0E01               	goto	u1232
  1668  000314  EF8D  F001         u1230:
  1669  000318                     	movlw	0
  1670  000318  0E00               u1232:
  1671  00031A                     	
  1672                           	movwf	(??_main+0+0)&0ffh,c
  1673  00031A  6E43               		movlw	low(_UART_buffer)
  1674  00031C  0E09               	movwf	((c:strstr@s1)),c
  1675  00031E  6E36               	movlw	high(_UART_buffer)
  1676  000320  0E00               	movwf	((c:strstr@s1+1)),c
  1677  000322  6E37               
  1678                           		movlw	low(STR_16)
  1679  000324  0EBC               	movwf	((c:strstr@s2)),c
  1680  000326  6E38               	movlw	high(STR_16)
  1681  000328  0E01               	movwf	((c:strstr@s2+1)),c
  1682  00032A  6E39               
  1683                           	call	_strstr	;wreg free
  1684  00032C  EC58  F005         	movf	(0+?_strstr),c,w
  1685  000330  5036               iorwf	(1+?_strstr),c,w
  1686  000332  1037               	btfss	status,2
  1687  000334  A4D8               	goto	u1241
  1688  000336  EF9F  F001         	goto	u1240
  1689  00033A  EFA2  F001         
  1690                           u1241:
  1691  00033E                     	movlw	1
  1692  00033E  0E01               	goto	u1242
  1693  000340  EFA3  F001         u1240:
  1694  000344                     	movlw	0
  1695  000344  0E00               u1242:
  1696  000346                     	
  1697                           	iorwf	(??_main+0+0),c,w
  1698  000346  1043               	btfss	wreg,0
  1699  000348  A0E8               	goto	u1251
  1700  00034A  EFA9  F001         	goto	u1250
  1701  00034E  EFAB  F001         u1251:
  1702  000352                     	goto	l1783
  1703  000352  EFB2  F001         u1250:
  1704  000356                     	line	117
  1705                           	
  1706                           l1779:
  1707  000356                     ;main.c: 117: UART_clean_buffer();
  1708                           	call	_UART_clean_buffer	;wreg free
  1709  000356  EC9B  F008         	line	118
  1710                           	
  1711                           l1781:
  1712  00035A                     ;main.c: 118: state = state | 0b00001000;
  1713                           	movf	((c:_state)),c,w
  1714  00035A  5007               	iorlw	low(08h)
  1715  00035C  0908               	movwf	((c:_state)),c
  1716  00035E  6E07               	line	119
  1717                           ;main.c: 119: } else if (strstr(UART_buffer, "0_ALA_OFF") != (0) | strstr(UART_buffer, "
                                 ALL_ALA_OFF") != (0)) {
  1718                           	goto	l1831
  1719  000360  EF2F  F003         	
  1720                           l160:
  1721  000364                     	
  1722                           l1783:
  1723  000364                     		movlw	low(_UART_buffer)
  1724  000364  0E09               	movwf	((c:strstr@s1)),c
  1725  000366  6E36               	movlw	high(_UART_buffer)
  1726  000368  0E00               	movwf	((c:strstr@s1+1)),c
  1727  00036A  6E37               
  1728                           		movlw	low(STR_19)
  1729  00036C  0E62               	movwf	((c:strstr@s2)),c
  1730  00036E  6E38               	movlw	high(STR_19)
  1731  000370  0E01               	movwf	((c:strstr@s2+1)),c
  1732  000372  6E39               
  1733                           	call	_strstr	;wreg free
  1734  000374  EC58  F005         	movf	(0+?_strstr),c,w
  1735  000378  5036               iorwf	(1+?_strstr),c,w
  1736  00037A  1037               	btfss	status,2
  1737  00037C  A4D8               	goto	u1261
  1738  00037E  EFC3  F001         	goto	u1260
  1739  000382  EFC6  F001         
  1740                           u1261:
  1741  000386                     	movlw	1
  1742  000386  0E01               	goto	u1262
  1743  000388  EFC7  F001         u1260:
  1744  00038C                     	movlw	0
  1745  00038C  0E00               u1262:
  1746  00038E                     	
  1747                           	movwf	(??_main+0+0)&0ffh,c
  1748  00038E  6E43               		movlw	low(_UART_buffer)
  1749  000390  0E09               	movwf	((c:strstr@s1)),c
  1750  000392  6E36               	movlw	high(_UART_buffer)
  1751  000394  0E00               	movwf	((c:strstr@s1+1)),c
  1752  000396  6E37               
  1753                           		movlw	low(STR_18)
  1754  000398  0EB2               	movwf	((c:strstr@s2)),c
  1755  00039A  6E38               	movlw	high(STR_18)
  1756  00039C  0E01               	movwf	((c:strstr@s2+1)),c
  1757  00039E  6E39               
  1758                           	call	_strstr	;wreg free
  1759  0003A0  EC58  F005         	movf	(0+?_strstr),c,w
  1760  0003A4  5036               iorwf	(1+?_strstr),c,w
  1761  0003A6  1037               	btfss	status,2
  1762  0003A8  A4D8               	goto	u1271
  1763  0003AA  EFD9  F001         	goto	u1270
  1764  0003AE  EFDC  F001         
  1765                           u1271:
  1766  0003B2                     	movlw	1
  1767  0003B2  0E01               	goto	u1272
  1768  0003B4  EFDD  F001         u1270:
  1769  0003B8                     	movlw	0
  1770  0003B8  0E00               u1272:
  1771  0003BA                     	
  1772                           	iorwf	(??_main+0+0),c,w
  1773  0003BA  1043               	btfss	wreg,0
  1774  0003BC  A0E8               	goto	u1281
  1775  0003BE  EFE3  F001         	goto	u1280
  1776  0003C2  EFE5  F001         u1281:
  1777  0003C6                     	goto	l1795
  1778  0003C6  EFF4  F001         u1280:
  1779  0003CA                     	line	120
  1780                           	
  1781                           l1785:
  1782  0003CA                     ;main.c: 120: UART_clean_buffer();
  1783                           	call	_UART_clean_buffer	;wreg free
  1784  0003CA  EC9B  F008         	line	121
  1785                           	
  1786                           l1787:
  1787  0003CE                     ;main.c: 121: state = state & ~0b00010000;
  1788                           	movf	((c:_state)),c,w
  1789  0003CE  5007               	andlw	low(0EFh)
  1790  0003D0  0BEF               	movwf	((c:_state)),c
  1791  0003D2  6E07               	line	122
  1792                           	
  1793                           l1789:
  1794  0003D4                     ;main.c: 122: state = state & ~0b00001000;
  1795                           	movf	((c:_state)),c,w
  1796  0003D4  5007               	andlw	low(0F7h)
  1797  0003D6  0BF7               	movwf	((c:_state)),c
  1798  0003D8  6E07               	line	123
  1799                           	
  1800                           l1791:
  1801  0003DA                     ;main.c: 123: state = state & ~0b00000010;
  1802                           	movf	((c:_state)),c,w
  1803  0003DA  5007               	andlw	low(0FDh)
  1804  0003DC  0BFD               	movwf	((c:_state)),c
  1805  0003DE  6E07               	line	124
  1806                           	
  1807                           l1793:
  1808  0003E0                     ;main.c: 124: allArmed = 0;
  1809                           	movlw	low(0)
  1810  0003E0  0E00               	movwf	((c:_allArmed)),c
  1811  0003E2  6E05               	line	125
  1812                           ;main.c: 125: } else if (strstr(UART_buffer, "0_SIREN_OFF") != (0) | strstr(UART_buffer,
                                  "ALL_SIREN_OFF") != (0)) {
  1813                           	goto	l1831
  1814  0003E4  EF2F  F003         	
  1815                           l162:
  1816  0003E8                     	
  1817                           l1795:
  1818  0003E8                     		movlw	low(_UART_buffer)
  1819  0003E8  0E09               	movwf	((c:strstr@s1)),c
  1820  0003EA  6E36               	movlw	high(_UART_buffer)
  1821  0003EC  0E00               	movwf	((c:strstr@s1+1)),c
  1822  0003EE  6E37               
  1823                           		movlw	low(STR_21)
  1824  0003F0  0E3A               	movwf	((c:strstr@s2)),c
  1825  0003F2  6E38               	movlw	high(STR_21)
  1826  0003F4  0E01               	movwf	((c:strstr@s2+1)),c
  1827  0003F6  6E39               
  1828                           	call	_strstr	;wreg free
  1829  0003F8  EC58  F005         	movf	(0+?_strstr),c,w
  1830  0003FC  5036               iorwf	(1+?_strstr),c,w
  1831  0003FE  1037               	btfss	status,2
  1832  000400  A4D8               	goto	u1291
  1833  000402  EF05  F002         	goto	u1290
  1834  000406  EF08  F002         
  1835                           u1291:
  1836  00040A                     	movlw	1
  1837  00040A  0E01               	goto	u1292
  1838  00040C  EF09  F002         u1290:
  1839  000410                     	movlw	0
  1840  000410  0E00               u1292:
  1841  000412                     	
  1842                           	movwf	(??_main+0+0)&0ffh,c
  1843  000412  6E43               		movlw	low(_UART_buffer)
  1844  000414  0E09               	movwf	((c:strstr@s1)),c
  1845  000416  6E36               	movlw	high(_UART_buffer)
  1846  000418  0E00               	movwf	((c:strstr@s1+1)),c
  1847  00041A  6E37               
  1848                           		movlw	low(STR_20)
  1849  00041C  0E7A               	movwf	((c:strstr@s2)),c
  1850  00041E  6E38               	movlw	high(STR_20)
  1851  000420  0E01               	movwf	((c:strstr@s2+1)),c
  1852  000422  6E39               
  1853                           	call	_strstr	;wreg free
  1854  000424  EC58  F005         	movf	(0+?_strstr),c,w
  1855  000428  5036               iorwf	(1+?_strstr),c,w
  1856  00042A  1037               	btfss	status,2
  1857  00042C  A4D8               	goto	u1301
  1858  00042E  EF1B  F002         	goto	u1300
  1859  000432  EF1E  F002         
  1860                           u1301:
  1861  000436                     	movlw	1
  1862  000436  0E01               	goto	u1302
  1863  000438  EF1F  F002         u1300:
  1864  00043C                     	movlw	0
  1865  00043C  0E00               u1302:
  1866  00043E                     	
  1867                           	iorwf	(??_main+0+0),c,w
  1868  00043E  1043               	btfss	wreg,0
  1869  000440  A0E8               	goto	u1311
  1870  000442  EF25  F002         	goto	u1310
  1871  000446  EF27  F002         u1311:
  1872  00044A                     	goto	l1801
  1873  00044A  EF2E  F002         u1310:
  1874  00044E                     	line	126
  1875                           	
  1876                           l1797:
  1877  00044E                     ;main.c: 126: UART_clean_buffer();
  1878                           	call	_UART_clean_buffer	;wreg free
  1879  00044E  EC9B  F008         	line	127
  1880                           	
  1881                           l1799:
  1882  000452                     ;main.c: 127: state = state & ~0b00000010;
  1883                           	movf	((c:_state)),c,w
  1884  000452  5007               	andlw	low(0FDh)
  1885  000454  0BFD               	movwf	((c:_state)),c
  1886  000456  6E07               	line	128
  1887                           ;main.c: 128: } else if (strstr(UART_buffer, "0_SIREN_ON") != (0) | strstr(UART_buffer, 
                                 "ALL_SIREN_ON") != (0)) {
  1888                           	goto	l1831
  1889  000458  EF2F  F003         	
  1890                           l164:
  1891  00045C                     	
  1892                           l1801:
  1893  00045C                     		movlw	low(_UART_buffer)
  1894  00045C  0E09               	movwf	((c:strstr@s1)),c
  1895  00045E  6E36               	movlw	high(_UART_buffer)
  1896  000460  0E00               	movwf	((c:strstr@s1+1)),c
  1897  000462  6E37               
  1898                           		movlw	low(STR_23)
  1899  000464  0E55               	movwf	((c:strstr@s2)),c
  1900  000466  6E38               	movlw	high(STR_23)
  1901  000468  0E01               	movwf	((c:strstr@s2+1)),c
  1902  00046A  6E39               
  1903                           	call	_strstr	;wreg free
  1904  00046C  EC58  F005         	movf	(0+?_strstr),c,w
  1905  000470  5036               iorwf	(1+?_strstr),c,w
  1906  000472  1037               	btfss	status,2
  1907  000474  A4D8               	goto	u1321
  1908  000476  EF3F  F002         	goto	u1320
  1909  00047A  EF42  F002         
  1910                           u1321:
  1911  00047E                     	movlw	1
  1912  00047E  0E01               	goto	u1322
  1913  000480  EF43  F002         u1320:
  1914  000484                     	movlw	0
  1915  000484  0E00               u1322:
  1916  000486                     	
  1917                           	movwf	(??_main+0+0)&0ffh,c
  1918  000486  6E43               		movlw	low(_UART_buffer)
  1919  000488  0E09               	movwf	((c:strstr@s1)),c
  1920  00048A  6E36               	movlw	high(_UART_buffer)
  1921  00048C  0E00               	movwf	((c:strstr@s1+1)),c
  1922  00048E  6E37               
  1923                           		movlw	low(STR_22)
  1924  000490  0E9C               	movwf	((c:strstr@s2)),c
  1925  000492  6E38               	movlw	high(STR_22)
  1926  000494  0E01               	movwf	((c:strstr@s2+1)),c
  1927  000496  6E39               
  1928                           	call	_strstr	;wreg free
  1929  000498  EC58  F005         	movf	(0+?_strstr),c,w
  1930  00049C  5036               iorwf	(1+?_strstr),c,w
  1931  00049E  1037               	btfss	status,2
  1932  0004A0  A4D8               	goto	u1331
  1933  0004A2  EF55  F002         	goto	u1330
  1934  0004A6  EF58  F002         
  1935                           u1331:
  1936  0004AA                     	movlw	1
  1937  0004AA  0E01               	goto	u1332
  1938  0004AC  EF59  F002         u1330:
  1939  0004B0                     	movlw	0
  1940  0004B0  0E00               u1332:
  1941  0004B2                     	
  1942                           	iorwf	(??_main+0+0),c,w
  1943  0004B2  1043               	btfss	wreg,0
  1944  0004B4  A0E8               	goto	u1341
  1945  0004B6  EF5F  F002         	goto	u1340
  1946  0004BA  EF61  F002         u1341:
  1947  0004BE                     	goto	l1807
  1948  0004BE  EF68  F002         u1340:
  1949  0004C2                     	line	129
  1950                           	
  1951                           l1803:
  1952  0004C2                     ;main.c: 129: UART_clean_buffer();
  1953                           	call	_UART_clean_buffer	;wreg free
  1954  0004C2  EC9B  F008         	line	130
  1955                           	
  1956                           l1805:
  1957  0004C6                     ;main.c: 130: state = state | 0b00000010;
  1958                           	movf	((c:_state)),c,w
  1959  0004C6  5007               	iorlw	low(02h)
  1960  0004C8  0902               	movwf	((c:_state)),c
  1961  0004CA  6E07               	line	131
  1962                           ;main.c: 131: } else if (strstr(UART_buffer, "0_BEEP") != (0) | strstr(UART_buffer, "ALL
                                 _BEEP") != (0)) {
  1963                           	goto	l1831
  1964  0004CC  EF2F  F003         	
  1965                           l166:
  1966  0004D0                     	
  1967                           l1807:
  1968  0004D0                     		movlw	low(_UART_buffer)
  1969  0004D0  0E09               	movwf	((c:strstr@s1)),c
  1970  0004D2  6E36               	movlw	high(_UART_buffer)
  1971  0004D4  0E00               	movwf	((c:strstr@s1+1)),c
  1972  0004D6  6E37               
  1973                           		movlw	low(STR_25)
  1974  0004D8  0EC5               	movwf	((c:strstr@s2)),c
  1975  0004DA  6E38               	movlw	high(STR_25)
  1976  0004DC  0E01               	movwf	((c:strstr@s2+1)),c
  1977  0004DE  6E39               
  1978                           	call	_strstr	;wreg free
  1979  0004E0  EC58  F005         	movf	(0+?_strstr),c,w
  1980  0004E4  5036               iorwf	(1+?_strstr),c,w
  1981  0004E6  1037               	btfss	status,2
  1982  0004E8  A4D8               	goto	u1351
  1983  0004EA  EF79  F002         	goto	u1350
  1984  0004EE  EF7C  F002         
  1985                           u1351:
  1986  0004F2                     	movlw	1
  1987  0004F2  0E01               	goto	u1352
  1988  0004F4  EF7D  F002         u1350:
  1989  0004F8                     	movlw	0
  1990  0004F8  0E00               u1352:
  1991  0004FA                     	
  1992                           	movwf	(??_main+0+0)&0ffh,c
  1993  0004FA  6E43               		movlw	low(_UART_buffer)
  1994  0004FC  0E09               	movwf	((c:strstr@s1)),c
  1995  0004FE  6E36               	movlw	high(_UART_buffer)
  1996  000500  0E00               	movwf	((c:strstr@s1+1)),c
  1997  000502  6E37               
  1998                           		movlw	low(STR_24)
  1999  000504  0ED7               	movwf	((c:strstr@s2)),c
  2000  000506  6E38               	movlw	high(STR_24)
  2001  000508  0E01               	movwf	((c:strstr@s2+1)),c
  2002  00050A  6E39               
  2003                           	call	_strstr	;wreg free
  2004  00050C  EC58  F005         	movf	(0+?_strstr),c,w
  2005  000510  5036               iorwf	(1+?_strstr),c,w
  2006  000512  1037               	btfss	status,2
  2007  000514  A4D8               	goto	u1361
  2008  000516  EF8F  F002         	goto	u1360
  2009  00051A  EF92  F002         
  2010                           u1361:
  2011  00051E                     	movlw	1
  2012  00051E  0E01               	goto	u1362
  2013  000520  EF93  F002         u1360:
  2014  000524                     	movlw	0
  2015  000524  0E00               u1362:
  2016  000526                     	
  2017                           	iorwf	(??_main+0+0),c,w
  2018  000526  1043               	btfss	wreg,0
  2019  000528  A0E8               	goto	u1371
  2020  00052A  EF99  F002         	goto	u1370
  2021  00052E  EF9B  F002         u1371:
  2022  000532                     	goto	l1819
  2023  000532  EFAD  F002         u1370:
  2024  000536                     	line	132
  2025                           	
  2026                           l1809:
  2027  000536                     ;main.c: 132: UART_clean_buffer();
  2028                           	call	_UART_clean_buffer	;wreg free
  2029  000536  EC9B  F008         	line	133
  2030                           	
  2031                           l1811:
  2032  00053A                     ;main.c: 133: LATBbits.LATB4 = 0b1;
  2033                           	bsf	((c:3978)),c,4	;volatile
  2034  00053A  888A               	line	134
  2035                           	
  2036                           l1813:
  2037  00053C                     ;main.c: 134: delay_ms(250);
  2038                           	movlw	high(0FAh)
  2039  00053C  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2040  00053E  6E28               	movlw	low(0FAh)
  2041  000540  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  2042  000542  6E27               	call	_delay_ms	;wreg free
  2043  000544  EC30  F008         	line	135
  2044                           	
  2045                           l1815:
  2046  000548                     ;main.c: 135: LATBbits.LATB4 = 0b0;
  2047                           	bcf	((c:3978)),c,4	;volatile
  2048  000548  988A               	line	136
  2049                           	
  2050                           l1817:
  2051  00054A                     ;main.c: 136: delay_ms(250);
  2052                           	movlw	high(0FAh)
  2053  00054A  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2054  00054C  6E28               	movlw	low(0FAh)
  2055  00054E  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  2056  000550  6E27               	call	_delay_ms	;wreg free
  2057  000552  EC30  F008         	line	137
  2058                           ;main.c: 137: } else if (strstr(UART_buffer, "0_EXTRA_ON") != (0) | strstr(UART_buffer, 
                                 "ALL_EXTRA_ON") != (0)) {
  2059                           	goto	l1831
  2060  000556  EF2F  F003         	
  2061                           l168:
  2062  00055A                     	
  2063                           l1819:
  2064  00055A                     		movlw	low(_UART_buffer)
  2065  00055A  0E09               	movwf	((c:strstr@s1)),c
  2066  00055C  6E36               	movlw	high(_UART_buffer)
  2067  00055E  0E00               	movwf	((c:strstr@s1+1)),c
  2068  000560  6E37               
  2069                           		movlw	low(STR_27)
  2070  000562  0E48               	movwf	((c:strstr@s2)),c
  2071  000564  6E38               	movlw	high(STR_27)
  2072  000566  0E01               	movwf	((c:strstr@s2+1)),c
  2073  000568  6E39               
  2074                           	call	_strstr	;wreg free
  2075  00056A  EC58  F005         	movf	(0+?_strstr),c,w
  2076  00056E  5036               iorwf	(1+?_strstr),c,w
  2077  000570  1037               	btfss	status,2
  2078  000572  A4D8               	goto	u1381
  2079  000574  EFBE  F002         	goto	u1380
  2080  000578  EFC1  F002         
  2081                           u1381:
  2082  00057C                     	movlw	1
  2083  00057C  0E01               	goto	u1382
  2084  00057E  EFC2  F002         u1380:
  2085  000582                     	movlw	0
  2086  000582  0E00               u1382:
  2087  000584                     	
  2088                           	movwf	(??_main+0+0)&0ffh,c
  2089  000584  6E43               		movlw	low(_UART_buffer)
  2090  000586  0E09               	movwf	((c:strstr@s1)),c
  2091  000588  6E36               	movlw	high(_UART_buffer)
  2092  00058A  0E00               	movwf	((c:strstr@s1+1)),c
  2093  00058C  6E37               
  2094                           		movlw	low(STR_26)
  2095  00058E  0E91               	movwf	((c:strstr@s2)),c
  2096  000590  6E38               	movlw	high(STR_26)
  2097  000592  0E01               	movwf	((c:strstr@s2+1)),c
  2098  000594  6E39               
  2099                           	call	_strstr	;wreg free
  2100  000596  EC58  F005         	movf	(0+?_strstr),c,w
  2101  00059A  5036               iorwf	(1+?_strstr),c,w
  2102  00059C  1037               	btfss	status,2
  2103  00059E  A4D8               	goto	u1391
  2104  0005A0  EFD4  F002         	goto	u1390
  2105  0005A4  EFD7  F002         
  2106                           u1391:
  2107  0005A8                     	movlw	1
  2108  0005A8  0E01               	goto	u1392
  2109  0005AA  EFD8  F002         u1390:
  2110  0005AE                     	movlw	0
  2111  0005AE  0E00               u1392:
  2112  0005B0                     	
  2113                           	iorwf	(??_main+0+0),c,w
  2114  0005B0  1043               	btfss	wreg,0
  2115  0005B2  A0E8               	goto	u1401
  2116  0005B4  EFDE  F002         	goto	u1400
  2117  0005B8  EFE0  F002         u1401:
  2118  0005BC                     	goto	l1825
  2119  0005BC  EFE7  F002         u1400:
  2120  0005C0                     	line	138
  2121                           	
  2122                           l1821:
  2123  0005C0                     ;main.c: 138: UART_clean_buffer();
  2124                           	call	_UART_clean_buffer	;wreg free
  2125  0005C0  EC9B  F008         	line	139
  2126                           	
  2127                           l1823:
  2128  0005C4                     ;main.c: 139: state = state | 0b00000001;
  2129                           	movf	((c:_state)),c,w
  2130  0005C4  5007               	iorlw	low(01h)
  2131  0005C6  0901               	movwf	((c:_state)),c
  2132  0005C8  6E07               	line	140
  2133                           ;main.c: 140: } else if (strstr(UART_buffer, "0_EXTRA_OFF") != (0) | strstr(UART_buffer,
                                  "ALL_EXTRA_OFF") != (0)) {
  2134                           	goto	l1831
  2135  0005CA  EF2F  F003         	
  2136                           l170:
  2137  0005CE                     	
  2138                           l1825:
  2139  0005CE                     		movlw	low(_UART_buffer)
  2140  0005CE  0E09               	movwf	((c:strstr@s1)),c
  2141  0005D0  6E36               	movlw	high(_UART_buffer)
  2142  0005D2  0E00               	movwf	((c:strstr@s1+1)),c
  2143  0005D4  6E37               
  2144                           		movlw	low(STR_29)
  2145  0005D6  0E2C               	movwf	((c:strstr@s2)),c
  2146  0005D8  6E38               	movlw	high(STR_29)
  2147  0005DA  0E01               	movwf	((c:strstr@s2+1)),c
  2148  0005DC  6E39               
  2149                           	call	_strstr	;wreg free
  2150  0005DE  EC58  F005         	movf	(0+?_strstr),c,w
  2151  0005E2  5036               iorwf	(1+?_strstr),c,w
  2152  0005E4  1037               	btfss	status,2
  2153  0005E6  A4D8               	goto	u1411
  2154  0005E8  EFF8  F002         	goto	u1410
  2155  0005EC  EFFB  F002         
  2156                           u1411:
  2157  0005F0                     	movlw	1
  2158  0005F0  0E01               	goto	u1412
  2159  0005F2  EFFC  F002         u1410:
  2160  0005F6                     	movlw	0
  2161  0005F6  0E00               u1412:
  2162  0005F8                     	
  2163                           	movwf	(??_main+0+0)&0ffh,c
  2164  0005F8  6E43               		movlw	low(_UART_buffer)
  2165  0005FA  0E09               	movwf	((c:strstr@s1)),c
  2166  0005FC  6E36               	movlw	high(_UART_buffer)
  2167  0005FE  0E00               	movwf	((c:strstr@s1+1)),c
  2168  000600  6E37               
  2169                           		movlw	low(STR_28)
  2170  000602  0E6E               	movwf	((c:strstr@s2)),c
  2171  000604  6E38               	movlw	high(STR_28)
  2172  000606  0E01               	movwf	((c:strstr@s2+1)),c
  2173  000608  6E39               
  2174                           	call	_strstr	;wreg free
  2175  00060A  EC58  F005         	movf	(0+?_strstr),c,w
  2176  00060E  5036               iorwf	(1+?_strstr),c,w
  2177  000610  1037               	btfss	status,2
  2178  000612  A4D8               	goto	u1421
  2179  000614  EF0E  F003         	goto	u1420
  2180  000618  EF11  F003         
  2181                           u1421:
  2182  00061C                     	movlw	1
  2183  00061C  0E01               	goto	u1422
  2184  00061E  EF12  F003         u1420:
  2185  000622                     	movlw	0
  2186  000622  0E00               u1422:
  2187  000624                     	
  2188                           	iorwf	(??_main+0+0),c,w
  2189  000624  1043               	btfss	wreg,0
  2190  000626  A0E8               	goto	u1431
  2191  000628  EF18  F003         	goto	u1430
  2192  00062C  EF1A  F003         u1431:
  2193  000630                     	goto	l1831
  2194  000630  EF2F  F003         u1430:
  2195  000634                     	line	141
  2196                           	
  2197                           l1827:
  2198  000634                     ;main.c: 141: UART_clean_buffer();
  2199                           	call	_UART_clean_buffer	;wreg free
  2200  000634  EC9B  F008         	line	142
  2201                           	
  2202                           l1829:
  2203  000638                     ;main.c: 142: state = state & ~0b00000001;
  2204                           	movf	((c:_state)),c,w
  2205  000638  5007               	andlw	low(0FEh)
  2206  00063A  0BFE               	movwf	((c:_state)),c
  2207  00063C  6E07               	goto	l1831
  2208  00063E  EF2F  F003         	line	143
  2209                           	
  2210                           l172:
  2211  000642                     	goto	l1831
  2212  000642  EF2F  F003         	line	149
  2213                           	
  2214                           l171:
  2215  000646                     	goto	l1831
  2216  000646  EF2F  F003         	
  2217                           l169:
  2218  00064A                     	goto	l1831
  2219  00064A  EF2F  F003         	
  2220                           l167:
  2221  00064E                     	goto	l1831
  2222  00064E  EF2F  F003         	
  2223                           l165:
  2224  000652                     	goto	l1831
  2225  000652  EF2F  F003         	
  2226                           l163:
  2227  000656                     	goto	l1831
  2228  000656  EF2F  F003         	
  2229                           l161:
  2230  00065A                     	goto	l1831
  2231  00065A  EF2F  F003         	
  2232                           l159:
  2233  00065E                     	
  2234                           l1831:
  2235  00065E                     ;main.c: 143: };main.c: 149: if (PORTAbits.RA1 != AC_POWER_OLD) {
  2236                           	btfsc	((c:3968)),c,1	;volatile
  2237  00065E  B280               	goto	u1441
  2238  000660  EF34  F003         	goto	u1440
  2239  000664  EF38  F003         u1441:
  2240  000668                     	clrf	(??_main+0+0)&0ffh,c
  2241  000668  6A43               	incf	(??_main+0+0)&0ffh,c
  2242  00066A  2A43               	goto	u1448
  2243  00066C  EF39  F003         u1440:
  2244  000670                     	clrf	(??_main+0+0)&0ffh,c
  2245  000670  6A43               u1448:
  2246  000672                     	movlw	0
  2247  000672  0E00               	btfsc	(_AC_POWER_OLD/8),c,(_AC_POWER_OLD)&7
  2248  000674  B047               	movlw	1
  2249  000676  0E01               	xorwf	(??_main+0+0),c,w
  2250  000678  1843               	btfsc	status,2
  2251  00067A  B4D8               	goto	u1451
  2252  00067C  EF42  F003         	goto	u1450
  2253  000680  EF44  F003         u1451:
  2254  000684                     	goto	l173
  2255  000684  EF5E  F003         u1450:
  2256  000688                     	line	150
  2257                           	
  2258                           l1833:
  2259  000688                     ;main.c: 150: AC_POWER_OLD = PORTAbits.RA1;
  2260                           	btfsc	((c:3968)),c,1	;volatile
  2261  000688  B280               	goto	u1461
  2262  00068A  EF49  F003         	goto	u1460
  2263  00068E  EF4C  F003         u1461:
  2264  000692                     	bsf	(_AC_POWER_OLD/8),c,(_AC_POWER_OLD)&7
  2265  000692  8047               	goto	u1475
  2266  000694  EF4D  F003         u1460:
  2267  000698                     	bcf	(_AC_POWER_OLD/8),c,(_AC_POWER_OLD)&7
  2268  000698  9047               u1475:
  2269  00069A                     	line	151
  2270                           ;main.c: 151: if (PORTAbits.RA1) {
  2271                           	btfss	((c:3968)),c,1	;volatile
  2272  00069A  A280               	goto	u1481
  2273  00069C  EF52  F003         	goto	u1480
  2274  0006A0  EF54  F003         u1481:
  2275  0006A4                     	goto	l1837
  2276  0006A4  EF59  F003         u1480:
  2277  0006A8                     	line	152
  2278                           	
  2279                           l1835:
  2280  0006A8                     ;main.c: 152: state = state | 0b00000100;
  2281                           	movf	((c:_state)),c,w
  2282  0006A8  5007               	iorlw	low(04h)
  2283  0006AA  0904               	movwf	((c:_state)),c
  2284  0006AC  6E07               	line	153
  2285                           ;main.c: 153: } else {
  2286                           	goto	l173
  2287  0006AE  EF5E  F003         	
  2288                           l174:
  2289  0006B2                     	line	154
  2290                           	
  2291                           l1837:
  2292  0006B2                     ;main.c: 154: state = state & ~0b00000100;
  2293                           	movf	((c:_state)),c,w
  2294  0006B2  5007               	andlw	low(0FBh)
  2295  0006B4  0BFB               	movwf	((c:_state)),c
  2296  0006B6  6E07               	goto	l173
  2297  0006B8  EF5E  F003         	line	155
  2298                           	
  2299                           l175:
  2300  0006BC                     	line	156
  2301                           	
  2302                           l173:
  2303  0006BC                     	line	158
  2304                           ;main.c: 155: };main.c: 156: };main.c: 158: if (PORTBbits.RB2 | PORTAbits.RA7 | ((state 
                                 & 0b00010000) == 0b00010000) ) {
  2305                           	movlw	0
  2306  0006BC  0E00               	btfsc	((c:3969)),c,2	;volatile
  2307  0006BE  B481               	movlw	1
  2308  0006C0  0E01               	btfsc	((c:3968)),c,7	;volatile
  2309  0006C2  BE80               	movlw	1
  2310  0006C4  0E01               
  2311                           	btfsc	wreg,0
  2312  0006C6  B0E8               	goto	u1491
  2313  0006C8  EF68  F003         	goto	u1490
  2314  0006CC  EF6B  F003         u1491:
  2315  0006D0                     	movlw	1
  2316  0006D0  0E01               	goto	u1500
  2317  0006D2  EF6C  F003         u1490:
  2318  0006D6                     	movlw	0
  2319  0006D6  0E00               u1500:
  2320  0006D8                     	movwf	(??_main+0+0)&0ffh,c
  2321  0006D8  6E43               	clrf	(??_main+0+0+1)&0ffh,c
  2322  0006DA  6A44               	
  2323                           	btfsc	((c:_state)),c,(4)&7
  2324  0006DC  B807               	goto	u1511
  2325  0006DE  EF73  F003         	goto	u1510
  2326  0006E2  EF76  F003         u1511:
  2327  0006E6                     	movlw	1
  2328  0006E6  0E01               	goto	u1520
  2329  0006E8  EF77  F003         u1510:
  2330  0006EC                     	movlw	0
  2331  0006EC  0E00               u1520:
  2332  0006EE                     	iorwf	(??_main+0+0),c
  2333  0006EE  1243               	movlw	0
  2334  0006F0  0E00               	iorwf	(??_main+0+1),c
  2335  0006F2  1244               	movf	(??_main+0+0),c,w
  2336  0006F4  5043               iorwf	(??_main+0+1),c,w
  2337  0006F6  1044               	btfsc	status,2
  2338  0006F8  B4D8               	goto	u1531
  2339  0006FA  EF81  F003         	goto	u1530
  2340  0006FE  EF83  F003         
  2341                           u1531:
  2342  000702                     	goto	l176
  2343  000702  EFEB  F003         u1530:
  2344  000706                     	line	159
  2345                           	
  2346                           l1839:
  2347  000706                     ;main.c: 159: LATAbits.LATA0 = 1;
  2348                           	bsf	((c:3977)),c,0	;volatile
  2349  000706  8089               	line	160
  2350                           ;main.c: 160: if ((state & 0b00001000) == 0b00001000) {
  2351                           	
  2352                           	btfss	((c:_state)),c,(3)&7
  2353  000708  A607               	goto	u1541
  2354  00070A  EF89  F003         	goto	u1540
  2355  00070E  EF8B  F003         u1541:
  2356  000712                     	goto	l184
  2357  000712  EFEC  F003         u1540:
  2358  000716                     	line	161
  2359                           	
  2360                           l1841:
  2361  000716                     ;main.c: 161: if ((state & 0b00010000) == 0b00010000) {
  2362                           	
  2363                           	btfss	((c:_state)),c,(4)&7
  2364  000716  A807               	goto	u1551
  2365  000718  EF90  F003         	goto	u1550
  2366  00071C  EF92  F003         u1551:
  2367  000720                     	goto	l1859
  2368  000720  EFC5  F003         u1550:
  2369  000724                     	line	162
  2370                           	
  2371                           l1843:
  2372  000724                     ;main.c: 162: if (TMR0IF) {
  2373                           	btfss	c:(32658/8),(32658)&7	;volatile
  2374  000724  A4F2               	goto	u1561
  2375  000726  EF97  F003         	goto	u1560
  2376  00072A  EF99  F003         u1561:
  2377  00072E                     	goto	l184
  2378  00072E  EFEC  F003         u1560:
  2379  000732                     	line	163
  2380                           	
  2381                           l1845:
  2382  000732                     ;main.c: 163: if(cycleAlarmCounter == cycleAlarm){
  2383                           	movf	((c:_cycleAlarm)),c,w
  2384  000732  5045               xorwf	((c:_cycleAlarmCounter)),c,w
  2385  000734  1806               	btfss	status,2
  2386  000736  A4D8               	goto	u1571
  2387  000738  EFA0  F003         	goto	u1570
  2388  00073C  EFA2  F003         
  2389                           u1571:
  2390  000740                     	goto	l1855
  2391  000740  EFBC  F003         u1570:
  2392  000744                     	line	164
  2393                           	
  2394                           l1847:
  2395  000744                     ;main.c: 164: state = state | 0b00000010;
  2396                           	movf	((c:_state)),c,w
  2397  000744  5007               	iorlw	low(02h)
  2398  000746  0902               	movwf	((c:_state)),c
  2399  000748  6E07               	line	165
  2400                           ;main.c: 165: state = state & ~0b00000001;
  2401                           	movf	((c:_state)),c,w
  2402  00074A  5007               	andlw	low(0FEh)
  2403  00074C  0BFE               	movwf	((c:_state)),c
  2404  00074E  6E07               	line	166
  2405                           	
  2406                           l1849:
  2407  000750                     ;main.c: 166: if(allArmed == 0){
  2408                           	movf	((c:_allArmed)),c,w
  2409  000750  5005               	btfss	status,2
  2410  000752  A4D8               	goto	u1581
  2411  000754  EFAE  F003         	goto	u1580
  2412  000758  EFB0  F003         u1581:
  2413  00075C                     	goto	l184
  2414  00075C  EFEC  F003         u1580:
  2415  000760                     	line	167
  2416                           	
  2417                           l1851:
  2418  000760                     ;main.c: 167: allArmed = 1;
  2419                           	movlw	low(01h)
  2420  000760  0E01               	movwf	((c:_allArmed)),c
  2421  000762  6E05               	line	168
  2422                           	
  2423                           l1853:
  2424  000764                     ;main.c: 168: UART_Write_Text((unsigned char *) "ALL_SIREN_ON");
  2425                           		movlw	low(STR_30)
  2426  000764  0E55               	movwf	((c:UART_Write_Text@text)),c
  2427  000766  6E28               	movlw	high(STR_30)
  2428  000768  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2429  00076A  6E29               
  2430                           	call	_UART_Write_Text	;wreg free
  2431  00076C  EC6D  F006         	goto	l184
  2432  000770  EFEC  F003         	line	169
  2433                           	
  2434                           l181:
  2435  000774                     	line	170
  2436                           ;main.c: 169: };main.c: 170: }
  2437                           	goto	l184
  2438  000774  EFEC  F003         	line	171
  2439                           	
  2440                           l180:
  2441  000778                     	line	172
  2442                           	
  2443                           l1855:
  2444  000778                     ;main.c: 171: else{;main.c: 172: cycleAlarmCounter = cycleAlarmCounter + 1;
  2445                           	incf	((c:_cycleAlarmCounter)),c,w
  2446  000778  2806               	movwf	((c:_cycleAlarmCounter)),c
  2447  00077A  6E06               	line	173
  2448                           	
  2449                           l1857:
  2450  00077C                     ;main.c: 173: TMR0IF = 0;
  2451                           	bcf	c:(32658/8),(32658)&7	;volatile
  2452  00077C  94F2               	goto	l184
  2453  00077E  EFEC  F003         	line	174
  2454                           	
  2455                           l182:
  2456  000782                     	goto	l184
  2457  000782  EFEC  F003         	line	175
  2458                           	
  2459                           l179:
  2460  000786                     	line	176
  2461                           ;main.c: 174: };main.c: 175: };main.c: 176: }
  2462                           	goto	l184
  2463  000786  EFEC  F003         	line	177
  2464                           	
  2465                           l178:
  2466  00078A                     	line	178
  2467                           	
  2468                           l1859:
  2469  00078A                     ;main.c: 177: else {;main.c: 178: cycleAlarmCounter = 0;
  2470                           	movlw	low(0)
  2471  00078A  0E00               	movwf	((c:_cycleAlarmCounter)),c
  2472  00078C  6E06               	line	179
  2473                           	
  2474                           l1861:
  2475  00078E                     ;main.c: 179: state = state | 0b00010000;
  2476                           	movf	((c:_state)),c,w
  2477  00078E  5007               	iorlw	low(010h)
  2478  000790  0910               	movwf	((c:_state)),c
  2479  000792  6E07               	line	180
  2480                           	
  2481                           l1863:
  2482  000794                     ;main.c: 180: T0CONbits.TMR0ON = 0b0;
  2483                           	bcf	((c:4053)),c,7	;volatile
  2484  000794  9ED5               	line	181
  2485                           	
  2486                           l1865:
  2487  000796                     ;main.c: 181: TMR0L = 0;
  2488                           	movlw	low(0)
  2489  000796  0E00               	movwf	((c:4054)),c	;volatile
  2490  000798  6ED6               	line	182
  2491                           	
  2492                           l1867:
  2493  00079A                     ;main.c: 182: TMR0H = 0;
  2494                           	movlw	low(0)
  2495  00079A  0E00               	movwf	((c:4055)),c	;volatile
  2496  00079C  6ED7               	line	183
  2497                           	
  2498                           l1869:
  2499  00079E                     ;main.c: 183: T0CONbits.T016BIT = 0b0;
  2500                           	bcf	((c:4053)),c,6	;volatile
  2501  00079E  9CD5               	line	184
  2502                           	
  2503                           l1871:
  2504  0007A0                     ;main.c: 184: T0CONbits.T0CS = 0b0;
  2505                           	bcf	((c:4053)),c,5	;volatile
  2506  0007A0  9AD5               	line	185
  2507                           	
  2508                           l1873:
  2509  0007A2                     ;main.c: 185: T0CONbits.PSA = 0b0;
  2510                           	bcf	((c:4053)),c,3	;volatile
  2511  0007A2  96D5               	line	186
  2512                           	
  2513                           l1875:
  2514  0007A4                     ;main.c: 186: T0CONbits.T0PS = 0b111;
  2515                           		
  2516                           	bsf	((c:4053)),c, 0+0	;volatile
  2517  0007A4  80D5               	bsf	((c:4053)),c, 0+1	;volatile
  2518  0007A6  82D5               	bsf	((c:4053)),c, 0+2	;volatile
  2519  0007A8  84D5               
  2520                           	line	187
  2521                           	
  2522                           l1877:
  2523  0007AA                     ;main.c: 187: T0CONbits.TMR0ON = 0b1;
  2524                           	bsf	((c:4053)),c,7	;volatile
  2525  0007AA  8ED5               	line	188
  2526                           	
  2527                           l1879:
  2528  0007AC                     ;main.c: 188: TMR0IF = 0;
  2529                           	bcf	c:(32658/8),(32658)&7	;volatile
  2530  0007AC  94F2               	line	189
  2531                           	
  2532                           l1881:
  2533  0007AE                     ;main.c: 189: LATBbits.LATB4 = 0b1;
  2534                           	bsf	((c:3978)),c,4	;volatile
  2535  0007AE  888A               	line	190
  2536                           	
  2537                           l1883:
  2538  0007B0                     ;main.c: 190: delay_ms(100);
  2539                           	movlw	high(064h)
  2540  0007B0  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2541  0007B2  6E28               	movlw	low(064h)
  2542  0007B4  0E64               	movwf	((c:delay_ms@repeat_2)),c
  2543  0007B6  6E27               	call	_delay_ms	;wreg free
  2544  0007B8  EC30  F008         	line	191
  2545                           	
  2546                           l1885:
  2547  0007BC                     ;main.c: 191: LATBbits.LATB4 = 0b0;
  2548                           	bcf	((c:3978)),c,4	;volatile
  2549  0007BC  988A               	line	192
  2550                           	
  2551                           l1887:
  2552  0007BE                     ;main.c: 192: delay_ms(100);
  2553                           	movlw	high(064h)
  2554  0007BE  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2555  0007C0  6E28               	movlw	low(064h)
  2556  0007C2  0E64               	movwf	((c:delay_ms@repeat_2)),c
  2557  0007C4  6E27               	call	_delay_ms	;wreg free
  2558  0007C6  EC30  F008         	goto	l184
  2559  0007CA  EFEC  F003         	line	193
  2560                           	
  2561                           l183:
  2562  0007CE                     	goto	l184
  2563  0007CE  EFEC  F003         	line	194
  2564                           	
  2565                           l177:
  2566  0007D2                     	line	195
  2567                           ;main.c: 193: };main.c: 194: };main.c: 195: } else {
  2568                           	goto	l184
  2569  0007D2  EFEC  F003         	
  2570                           l176:
  2571  0007D6                     	line	196
  2572                           ;main.c: 196: LATAbits.LATA0 = 0;
  2573                           	bcf	((c:3977)),c,0	;volatile
  2574  0007D6  9089               	line	197
  2575                           	
  2576                           l184:
  2577  0007D8                     	line	199
  2578                           ;main.c: 197: };main.c: 199: if ((state & 0b00000010) == 0b00000010) {
  2579                           	
  2580                           	btfss	((c:_state)),c,(1)&7
  2581  0007D8  A207               	goto	u1591
  2582  0007DA  EFF1  F003         	goto	u1590
  2583  0007DE  EFF3  F003         u1591:
  2584  0007E2                     	goto	l185
  2585  0007E2  EFF6  F003         u1590:
  2586  0007E6                     	line	200
  2587                           	
  2588                           l1889:
  2589  0007E6                     ;main.c: 200: LATBbits.LATB4 = 0b1;
  2590                           	bsf	((c:3978)),c,4	;volatile
  2591  0007E6  888A               	line	201
  2592                           ;main.c: 201: } else {
  2593                           	goto	l186
  2594  0007E8  EFF7  F003         	
  2595                           l185:
  2596  0007EC                     	line	202
  2597                           ;main.c: 202: LATBbits.LATB4 = 0b0;
  2598                           	bcf	((c:3978)),c,4	;volatile
  2599  0007EC  988A               	line	203
  2600                           	
  2601                           l186:
  2602  0007EE                     	line	205
  2603                           ;main.c: 203: };main.c: 205: if ((state & 0b00000001) == 0b00000001) {
  2604                           	
  2605                           	btfss	((c:_state)),c,(0)&7
  2606  0007EE  A007               	goto	u1601
  2607  0007F0  EFFC  F003         	goto	u1600
  2608  0007F4  EFFE  F003         u1601:
  2609  0007F8                     	goto	l187
  2610  0007F8  EF01  F004         u1600:
  2611  0007FC                     	line	206
  2612                           	
  2613                           l1891:
  2614  0007FC                     ;main.c: 206: LATBbits.LATB5 = 0b1;
  2615                           	bsf	((c:3978)),c,5	;volatile
  2616  0007FC  8A8A               	line	207
  2617                           ;main.c: 207: } else {
  2618                           	goto	l1893
  2619  0007FE  EF04  F004         	
  2620                           l187:
  2621  000802                     	line	208
  2622                           ;main.c: 208: LATBbits.LATB5 = 0b0;
  2623                           	bcf	((c:3978)),c,5	;volatile
  2624  000802  9A8A               	goto	l1893
  2625  000804  EF04  F004         	line	209
  2626                           	
  2627                           l188:
  2628  000808                     	line	211
  2629                           	
  2630                           l1893:
  2631  000808                     ;main.c: 209: };main.c: 211: if (state != old_state) {
  2632                           	movf	((c:_old_state)),c,w
  2633  000808  5046               xorwf	((c:_state)),c,w
  2634  00080A  1807               	btfsc	status,2
  2635  00080C  B4D8               	goto	u1611
  2636  00080E  EF0B  F004         	goto	u1610
  2637  000812  EF0D  F004         
  2638                           u1611:
  2639  000816                     	goto	l1771
  2640  000816  EF3F  F001         u1610:
  2641  00081A                     	line	212
  2642                           	
  2643                           l1895:
  2644  00081A                     ;main.c: 212: if ((state & 0b00000100) != (old_state & 0b00000100)) {
  2645                           	movff	(c:_old_state),??_main+0+0
  2646  00081A  C046  F043         	movlw	04h
  2647  00081E  0E04               	andwf	(??_main+0+0),c
  2648  000820  1643               	movf	((c:_state)),c,w
  2649  000822  5007               	andlw	low(04h)
  2650  000824  0B04               	xorwf	(??_main+0+0),c,w
  2651  000826  1843               	btfsc	status,2
  2652  000828  B4D8               	goto	u1621
  2653  00082A  EF19  F004         	goto	u1620
  2654  00082E  EF1B  F004         u1621:
  2655  000832                     	goto	l1903
  2656  000832  EF25  F004         u1620:
  2657  000836                     	line	213
  2658                           	
  2659                           l1897:
  2660  000836                     ;main.c: 213: LATBbits.LATB4 = 1;
  2661                           	bsf	((c:3978)),c,4	;volatile
  2662  000836  888A               	line	214
  2663                           	
  2664                           l1899:
  2665  000838                     ;main.c: 214: delay_ms(50);
  2666                           	movlw	high(032h)
  2667  000838  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  2668  00083A  6E28               	movlw	low(032h)
  2669  00083C  0E32               	movwf	((c:delay_ms@repeat_2)),c
  2670  00083E  6E27               	call	_delay_ms	;wreg free
  2671  000840  EC30  F008         	line	215
  2672                           	
  2673                           l1901:
  2674  000844                     ;main.c: 215: LATBbits.LATB4 = 0;
  2675                           	bcf	((c:3978)),c,4	;volatile
  2676  000844  988A               	goto	l1903
  2677  000846  EF25  F004         	line	216
  2678                           	
  2679                           l190:
  2680  00084A                     	line	217
  2681                           	
  2682                           l1903:
  2683  00084A                     ;main.c: 216: };main.c: 217: old_state = state;
  2684                           	movff	(c:_state),(c:_old_state)
  2685  00084A  C007  F046         	line	218
  2686                           	
  2687                           l1905:
  2688  00084E                     ;main.c: 218: send_Status();
  2689                           	call	_send_Status	;wreg free
  2690  00084E  EC31  F004         	goto	l1771
  2691  000852  EF3F  F001         	line	219
  2692                           	
  2693                           l189:
  2694  000856                     	goto	l1771
  2695  000856  EF3F  F001         	line	221
  2696                           	
  2697                           l191:
  2698  00085A                     	line	108
  2699                           	goto	l1771
  2700  00085A  EF3F  F001         	
  2701                           l192:
  2702  00085E                     	line	223
  2703                           	
  2704                           l193:
  2705  00085E                     	global	start
  2706                           	goto	start
  2707  00085E  EF3C  F000         	opt stack 0
  2708                           GLOBAL	__end_of_main
  2709                           	__end_of_main:
  2710  000862                     	signat	_main,89
  2711                           	global	_strstr
  2712                           
  2713 ;; *************** function _strstr *****************
  2714 ;; Defined at:
  2715 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  s1              2   19[COMRAM] PTR const unsigned char 
  2718 ;;		 -> NULL(0), UART_buffer(16), 
  2719 ;;  s2              2   21[COMRAM] PTR const unsigned char 
  2720 ;;		 -> STR_29(14), STR_28(12), STR_27(13), STR_26(11), 
  2721 ;;		 -> STR_25(9), STR_24(7), STR_23(13), STR_22(11), 
  2722 ;;		 -> STR_21(14), STR_20(12), STR_19(12), STR_18(10), 
  2723 ;;		 -> STR_17(11), STR_16(9), STR_15(11), STR_14(9), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2   19[COMRAM] PTR unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0
  2735 ;;      Params:         4       0
  2736 ;;      Locals:         0       0
  2737 ;;      Temps:          0       0
  2738 ;;      Totals:         4       0
  2739 ;;Total ram usage:        4 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    2
  2742 ;; This function calls:
  2743 ;;		_strchr
  2744 ;;		_strlen
  2745 ;;		_strncmp
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           psect	text1,class=CODE,space=0,reloc=2,group=2
  2751                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2752                           	line	4
  2753                           global __ptext1
  2754                           __ptext1:
  2755  000AB0                     psect	text1
  2756                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  2757                           	line	4
  2758                           	global	__size_of_strstr
  2759                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  2760  0000                     	
  2761                           _strstr:
  2762  000AB0                     ;incstack = 0
  2763                           	opt	stack 28
  2764                           	line	6
  2765                           	
  2766                           l1703:
  2767  000AB0                     	goto	l1713
  2768  000AB0  EF95  F005         	
  2769                           l885:
  2770  000AB4                     	line	7
  2771                           	
  2772                           l1705:
  2773  000AB4                     		movff	(c:strstr@s1),(c:strncmp@s1)
  2774  000AB4  C036  F02D         	movff	(c:strstr@s1+1),(c:strncmp@s1+1)
  2775  000AB8  C037  F02E         
  2776                           		movff	(c:strstr@s2),(c:strncmp@s2)
  2777  000ABC  C038  F02F         	movff	(c:strstr@s2+1),(c:strncmp@s2+1)
  2778  000AC0  C039  F030         
  2779                           		movff	(c:strstr@s2),(c:strlen@s)
  2780  000AC4  C038  F027         	movff	(c:strstr@s2+1),(c:strlen@s+1)
  2781  000AC8  C039  F028         
  2782                           	call	_strlen	;wreg free
  2783  000ACC  EC97  F007         	movff	0+?_strlen,(c:strncmp@len)
  2784  000AD0  C027  F031         	movff	1+?_strlen,(c:strncmp@len+1)
  2785  000AD4  C028  F032         	call	_strncmp	;wreg free
  2786  000AD8  ECB5  F005         	movf	(0+?_strncmp),c,w
  2787  000ADC  502D               iorwf	(1+?_strncmp),c,w
  2788  000ADE  102E               	btfss	status,2
  2789  000AE0  A4D8               	goto	u1171
  2790  000AE2  EF75  F005         	goto	u1170
  2791  000AE6  EF77  F005         
  2792                           u1171:
  2793  000AEA                     	goto	l1711
  2794  000AEA  EF7F  F005         u1170:
  2795  000AEE                     	line	8
  2796                           	
  2797                           l1707:
  2798  000AEE                     		movff	(c:strstr@s1),(c:?_strstr)
  2799  000AEE  C036  F036         	movff	(c:strstr@s1+1),(c:?_strstr+1)
  2800  000AF2  C037  F037         
  2801                           	goto	l887
  2802  000AF6  EFB4  F005         	
  2803                           l1709:
  2804  000AFA                     	goto	l887
  2805  000AFA  EFB4  F005         	
  2806                           l886:
  2807  000AFE                     	line	9
  2808                           	
  2809                           l1711:
  2810  000AFE                     	movlw	low(01h)
  2811  000AFE  0E01               	addwf	((c:strstr@s1)),c,w
  2812  000B00  2436               	movwf	((c:strchr@ptr)),c
  2813  000B02  6E27               	movlw	high(01h)
  2814  000B04  0E00               	addwfc	((c:strstr@s1+1)),c,w
  2815  000B06  2037               	movwf	1+((c:strchr@ptr)),c
  2816  000B08  6E28               	movff	(c:strstr@s2),tblptrl
  2817  000B0A  C038  FFF6         	movff	(c:strstr@s2+1),tblptrh
  2818  000B0E  C039  FFF7         	if	0	;tblptru may be non-zero
  2819  000B12                     	clrf	tblptru
  2821  000B12                     	if	0	;tblptru may be non-zero
  2822  000B12                     	global __mediumconst
  2823                           movlw	low highword(__mediumconst)
  2826  000B12                     	tblrd	*
  2827  000B12  0008               	
  2828                           	movf	tablat,w
  2829  000B14  50F5               
  2830                           	movwf	((c:strchr@chr)),c
  2831  000B16  6E29               	clrf	((c:strchr@chr+1)),c
  2832  000B18  6A2A               	call	_strchr	;wreg free
  2833  000B1A  EC6B  F007         	movff	0+?_strchr,(c:strstr@s1)
  2834  000B1E  C027  F036         	movff	1+?_strchr,(c:strstr@s1+1)
  2835  000B22  C028  F037         	goto	l1713
  2836  000B26  EF95  F005         	line	10
  2837                           	
  2838                           l884:
  2839  000B2A                     	line	6
  2840                           	
  2841                           l1713:
  2842  000B2A                     	movf	((c:strstr@s1)),c,w
  2843  000B2A  5036               iorwf	((c:strstr@s1+1)),c,w
  2844  000B2C  1037               	btfsc	status,2
  2845  000B2E  B4D8               	goto	u1181
  2846  000B30  EF9C  F005         	goto	u1180
  2847  000B34  EF9E  F005         
  2848                           u1181:
  2849  000B38                     	goto	l1717
  2850  000B38  EFAE  F005         u1180:
  2851  000B3C                     	
  2852                           l1715:
  2853  000B3C                     	movff	(c:strstr@s1),fsr2l
  2854  000B3C  C036  FFD9         	movff	(c:strstr@s1+1),fsr2h
  2855  000B40  C037  FFDA         	movf	indf2,w
  2856  000B44  50DF               	btfss	status,2
  2857  000B46  A4D8               	goto	u1191
  2858  000B48  EFA8  F005         	goto	u1190
  2859  000B4C  EFAA  F005         u1191:
  2860  000B50                     	goto	l1705
  2861  000B50  EF5A  F005         u1190:
  2862  000B54                     	goto	l1717
  2863  000B54  EFAE  F005         	
  2864                           l889:
  2865  000B58                     	goto	l1717
  2866  000B58  EFAE  F005         	
  2867                           l890:
  2868  000B5C                     	line	11
  2869                           	
  2870                           l1717:
  2871  000B5C                     		movlw	low(0)
  2872  000B5C  0E00               	movwf	((c:?_strstr)),c
  2873  000B5E  6E36               	movlw	high(0)
  2874  000B60  0E00               	movwf	((c:?_strstr+1)),c
  2875  000B62  6E37               
  2876                           	goto	l887
  2877  000B64  EFB4  F005         	
  2878                           l1719:
  2879  000B68                     	line	12
  2880                           	
  2881                           l887:
  2882  000B68                     	return	;funcret
  2883  000B68  0012               	opt stack 0
  2884                           GLOBAL	__end_of_strstr
  2885                           	__end_of_strstr:
  2886  000B6A                     	signat	_strstr,8314
  2887                           	global	_strncmp
  2888                           
  2889 ;; *************** function _strncmp *****************
  2890 ;; Defined at:
  2891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  2894 ;;		 -> NULL(0), UART_buffer(16), 
  2895 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  2896 ;;		 -> STR_29(14), STR_28(12), STR_27(13), STR_26(11), 
  2897 ;;		 -> STR_25(9), STR_24(7), STR_23(13), STR_22(11), 
  2898 ;;		 -> STR_21(14), STR_20(12), STR_19(12), STR_18(10), 
  2899 ;;		 -> STR_17(11), STR_16(9), STR_15(11), STR_14(9), 
  2900 ;;  len             2   14[COMRAM] unsigned int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2   10[COMRAM] int 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0
  2912 ;;      Params:         6       0
  2913 ;;      Locals:         0       0
  2914 ;;      Temps:          3       0
  2915 ;;      Totals:         9       0
  2916 ;;Total ram usage:        9 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_strstr
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           psect	text2,class=CODE,space=0,reloc=2,group=2
  2926                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2927                           	line	4
  2928                           global __ptext2
  2929                           __ptext2:
  2930  000B6A                     psect	text2
  2931                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2932                           	line	4
  2933                           	global	__size_of_strncmp
  2934                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  2935  0000                     	
  2936                           _strncmp:
  2937  000B6A                     ;incstack = 0
  2938                           	opt	stack 28
  2939                           	line	6
  2940                           	
  2941                           l1627:
  2942  000B6A                     	goto	l1639
  2943  000B6A  EFFB  F005         	
  2944                           l906:
  2945  000B6E                     	line	7
  2946                           	
  2947                           l1629:
  2948  000B6E                     	movff	(c:strncmp@s1),fsr2l
  2949  000B6E  C02D  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2950  000B72  C02E  FFDA         	movf	indf2,w
  2951  000B76  50DF               	btfsc	status,2
  2952  000B78  B4D8               	goto	u1061
  2953  000B7A  EFC1  F005         	goto	u1060
  2954  000B7E  EFC3  F005         u1061:
  2955  000B82                     	goto	l1633
  2956  000B82  EFD9  F005         u1060:
  2957  000B86                     	
  2958                           l1631:
  2959  000B86                     	movff	(c:strncmp@s1),fsr2l
  2960  000B86  C02D  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2961  000B8A  C02E  FFDA         	movf	indf2,w
  2962  000B8E  50DF               	movwf	(??_strncmp+0+0)&0ffh,c
  2963  000B90  6E33               	movff	(c:strncmp@s2),tblptrl
  2964  000B92  C02F  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2965  000B96  C030  FFF7         	if	0	;tblptru may be non-zero
  2966  000B9A                     	clrf	tblptru
  2968  000B9A                     	if	0	;tblptru may be non-zero
  2969  000B9A                     	global __mediumconst
  2970                           movlw	low highword(__mediumconst)
  2973  000B9A                     	tblrd	*
  2974  000B9A  0008               	
  2975                           	movf	tablat,w
  2976  000B9C  50F5               	xorwf	((??_strncmp+0+0)),c,w
  2977  000B9E  1833               
  2978                           	btfsc	status,2
  2979  000BA0  B4D8               	goto	u1071
  2980  000BA2  EFD5  F005         	goto	u1070
  2981  000BA6  EFD7  F005         u1071:
  2982  000BAA                     	goto	l1637
  2983  000BAA  EFF5  F005         u1070:
  2984  000BAE                     	goto	l1633
  2985  000BAE  EFD9  F005         	
  2986                           l909:
  2987  000BB2                     	line	8
  2988                           	
  2989                           l1633:
  2990  000BB2                     	movff	(c:strncmp@s2),tblptrl
  2991  000BB2  C02F  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2992  000BB6  C030  FFF7         	if	0	;tblptru may be non-zero
  2993  000BBA                     	clrf	tblptru
  2995  000BBA                     	if	0	;tblptru may be non-zero
  2996  000BBA                     	global __mediumconst
  2997                           movlw	low highword(__mediumconst)
  3000  000BBA                     	tblrd	*
  3001  000BBA  0008               	
  3002                           	movf	tablat,w
  3003  000BBC  50F5               	movwf	(??_strncmp+0+0)&0ffh,c
  3004  000BBE  6E33               	clrf	(??_strncmp+0+0+1)&0ffh,c
  3005  000BC0  6A34               
  3006                           	comf	(??_strncmp+0+0),c
  3007  000BC2  1E33               	comf	(??_strncmp+0+1),c
  3008  000BC4  1E34               	infsnz	(??_strncmp+0+0),c
  3009  000BC6  4A33               	incf	(??_strncmp+0+1),c
  3010  000BC8  2A34               	movff	(c:strncmp@s1),fsr2l
  3011  000BCA  C02D  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  3012  000BCE  C02E  FFDA         	movf	indf2,w
  3013  000BD2  50DF               	movwf	(??_strncmp+2+0)&0ffh,c
  3014  000BD4  6E35               	movf	((??_strncmp+2+0)),c,w
  3015  000BD6  5035               	addwf	(??_strncmp+0+0),c,w
  3016  000BD8  2433               	movwf	((c:?_strncmp)),c
  3017  000BDA  6E2D               	movlw	0
  3018  000BDC  0E00               	addwfc	(??_strncmp+0+1),c,w
  3019  000BDE  2034               	movwf	1+((c:?_strncmp)),c
  3020  000BE0  6E2E               	goto	l910
  3021  000BE2  EF10  F006         	
  3022                           l1635:
  3023  000BE6                     	goto	l910
  3024  000BE6  EF10  F006         	
  3025                           l907:
  3026  000BEA                     	line	10
  3027                           	
  3028                           l1637:
  3029  000BEA                     	infsnz	((c:strncmp@s1)),c
  3030  000BEA  4A2D               	incf	((c:strncmp@s1+1)),c
  3031  000BEC  2A2E               	line	11
  3032                           	infsnz	((c:strncmp@s2)),c
  3033  000BEE  4A2F               	incf	((c:strncmp@s2+1)),c
  3034  000BF0  2A30               	goto	l1639
  3035  000BF2  EFFB  F005         	line	12
  3036                           	
  3037                           l905:
  3038  000BF6                     	line	6
  3039                           	
  3040                           l1639:
  3041  000BF6                     	decf	((c:strncmp@len)),c
  3042  000BF6  0631               	btfss	status,0
  3043  000BF8  A0D8               	decf	((c:strncmp@len+1)),c
  3044  000BFA  0632               		incf	((c:strncmp@len)),c,w
  3045  000BFC  2831               	bnz	u1081
  3046  000BFE  E106               	incf	((c:strncmp@len+1)),c,w
  3047  000C00  2832               	btfss	status,2
  3048  000C02  A4D8               	goto	u1081
  3049  000C04  EF06  F006         	goto	u1080
  3050  000C08  EF08  F006         
  3051                           u1081:
  3052  000C0C                     	goto	l1629
  3053  000C0C  EFB7  F005         u1080:
  3054  000C10                     	goto	l1641
  3055  000C10  EF0A  F006         	
  3056                           l911:
  3057  000C14                     	line	13
  3058                           	
  3059                           l1641:
  3060  000C14                     	movlw	high(0)
  3061  000C14  0E00               	movwf	((c:?_strncmp+1)),c
  3062  000C16  6E2E               	movlw	low(0)
  3063  000C18  0E00               	movwf	((c:?_strncmp)),c
  3064  000C1A  6E2D               	goto	l910
  3065  000C1C  EF10  F006         	
  3066                           l1643:
  3067  000C20                     	line	14
  3068                           	
  3069                           l910:
  3070  000C20                     	return	;funcret
  3071  000C20  0012               	opt stack 0
  3072                           GLOBAL	__end_of_strncmp
  3073                           	__end_of_strncmp:
  3074  000C22                     	signat	_strncmp,12410
  3075                           	global	_strlen
  3076                           
  3077 ;; *************** function _strlen *****************
  3078 ;; Defined at:
  3079 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3082 ;;		 -> STR_29(14), STR_28(12), STR_27(13), STR_26(11), 
  3083 ;;		 -> STR_25(9), STR_24(7), STR_23(13), STR_22(11), 
  3084 ;;		 -> STR_21(14), STR_20(12), STR_19(12), STR_18(10), 
  3085 ;;		 -> STR_17(11), STR_16(9), STR_15(11), STR_14(9), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  cp              2    8[COMRAM] PTR const unsigned char 
  3088 ;;		 -> STR_29(14), STR_28(12), STR_27(13), STR_26(11), 
  3089 ;;		 -> STR_25(9), STR_24(7), STR_23(13), STR_22(11), 
  3090 ;;		 -> STR_21(14), STR_20(12), STR_19(12), STR_18(10), 
  3091 ;;		 -> STR_17(11), STR_16(9), STR_15(11), STR_14(9), 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    4[COMRAM] unsigned int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0
  3101 ;;      Params:         2       0
  3102 ;;      Locals:         2       0
  3103 ;;      Temps:          2       0
  3104 ;;      Totals:         6       0
  3105 ;;Total ram usage:        6 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_strstr
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           psect	text3,class=CODE,space=0,reloc=2,group=2
  3115                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3116                           	line	4
  3117                           global __ptext3
  3118                           __ptext3:
  3119  000F2E                     psect	text3
  3120                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  3121                           	line	4
  3122                           	global	__size_of_strlen
  3123                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  3124  0000                     	
  3125                           _strlen:
  3126  000F2E                     ;incstack = 0
  3127                           	opt	stack 28
  3128                           	line	8
  3129                           	
  3130                           l1617:
  3131  000F2E                     		movff	(c:strlen@s),(c:strlen@cp)
  3132  000F2E  C027  F02B         	movff	(c:strlen@s+1),(c:strlen@cp+1)
  3133  000F32  C028  F02C         
  3134                           	line	9
  3135                           	goto	l1621
  3136  000F36  EFA1  F007         	
  3137                           l900:
  3138  000F3A                     	line	10
  3139                           	
  3140                           l1619:
  3141  000F3A                     	infsnz	((c:strlen@cp)),c
  3142  000F3A  4A2B               	incf	((c:strlen@cp+1)),c
  3143  000F3C  2A2C               	goto	l1621
  3144  000F3E  EFA1  F007         	line	11
  3145                           	
  3146                           l899:
  3147  000F42                     	line	9
  3148                           	
  3149                           l1621:
  3150  000F42                     	movff	(c:strlen@cp),tblptrl
  3151  000F42  C02B  FFF6         	movff	(c:strlen@cp+1),tblptrh
  3152  000F46  C02C  FFF7         	if	0	;tblptru may be non-zero
  3153  000F4A                     	clrf	tblptru
  3155  000F4A                     	if	0	;tblptru may be non-zero
  3156  000F4A                     	global __mediumconst
  3157                           movlw	low highword(__mediumconst)
  3160  000F4A                     	tblrd	*
  3161  000F4A  0008               	
  3162                           	movf	tablat,w
  3163  000F4C  50F5               	iorlw	0
  3164  000F4E  0900               	btfss	status,2
  3165  000F50  A4D8               	goto	u1051
  3166  000F52  EFAD  F007         	goto	u1050
  3167  000F56  EFAF  F007         u1051:
  3168  000F5A                     	goto	l1619
  3169  000F5A  EF9D  F007         u1050:
  3170  000F5E                     	goto	l1623
  3171  000F5E  EFB1  F007         	
  3172                           l901:
  3173  000F62                     	line	12
  3174                           	
  3175                           l1623:
  3176  000F62                     	movff	(c:strlen@s),??_strlen+0+0
  3177  000F62  C027  F029         	movff	(c:strlen@s+1),??_strlen+0+0+1
  3178  000F66  C028  F02A         	comf	(??_strlen+0+0),c
  3179  000F6A  1E29               	comf	(??_strlen+0+1),c
  3180  000F6C  1E2A               	infsnz	(??_strlen+0+0),c
  3181  000F6E  4A29               	incf	(??_strlen+0+1),c
  3182  000F70  2A2A               	movf	((c:strlen@cp)),c,w
  3183  000F72  502B               	addwf	(??_strlen+0+0),c,w
  3184  000F74  2429               	movwf	((c:?_strlen)),c
  3185  000F76  6E27               	movf	((c:strlen@cp+1)),c,w
  3186  000F78  502C               	addwfc	(??_strlen+0+1),c,w
  3187  000F7A  202A               	movwf	1+((c:?_strlen)),c
  3188  000F7C  6E28               	goto	l902
  3189  000F7E  EFC1  F007         	
  3190                           l1625:
  3191  000F82                     	line	13
  3192                           	
  3193                           l902:
  3194  000F82                     	return	;funcret
  3195  000F82  0012               	opt stack 0
  3196                           GLOBAL	__end_of_strlen
  3197                           	__end_of_strlen:
  3198  000F84                     	signat	_strlen,4218
  3199                           	global	_strchr
  3200                           
  3201 ;; *************** function _strchr *****************
  3202 ;; Defined at:
  3203 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  3206 ;;		 -> NULL(0), UART_buffer(16), 
  3207 ;;  chr             2    6[COMRAM] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2    4[COMRAM] PTR unsigned char 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0
  3219 ;;      Params:         4       0
  3220 ;;      Locals:         0       0
  3221 ;;      Temps:          1       0
  3222 ;;      Totals:         5       0
  3223 ;;Total ram usage:        5 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_strstr
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           psect	text4,class=CODE,space=0,reloc=2,group=2
  3233                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3234                           	line	4
  3235                           global __ptext4
  3236                           __ptext4:
  3237  000ED6                     psect	text4
  3238                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  3239                           	line	4
  3240                           	global	__size_of_strchr
  3241                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  3242  0000                     	
  3243                           _strchr:
  3244  000ED6                     ;incstack = 0
  3245                           	opt	stack 28
  3246                           	line	6
  3247                           	
  3248                           l893:
  3249  000ED6                     	line	7
  3250                           	
  3251                           l1645:
  3252  000ED6                     	movff	(c:strchr@ptr),fsr2l
  3253  000ED6  C027  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  3254  000EDA  C028  FFDA         	movf	((c:strchr@chr)),c,w
  3255  000EDE  5029               xorwf	postinc2,w
  3256  000EE0  18DE               	btfss	status,2
  3257  000EE2  A4D8               	goto	u1091
  3258  000EE4  EF76  F007         	goto	u1090
  3259  000EE8  EF78  F007         
  3260                           u1091:
  3261  000EEC                     	goto	l1651
  3262  000EEC  EF80  F007         u1090:
  3263  000EF0                     	line	8
  3264                           	
  3265                           l1647:
  3266  000EF0                     		movff	(c:strchr@ptr),(c:?_strchr)
  3267  000EF0  C027  F027         	movff	(c:strchr@ptr+1),(c:?_strchr+1)
  3268  000EF4  C028  F028         
  3269                           	goto	l895
  3270  000EF8  EF96  F007         	
  3271                           l1649:
  3272  000EFC                     	goto	l895
  3273  000EFC  EF96  F007         	
  3274                           l894:
  3275  000F00                     	line	9
  3276                           	
  3277                           l1651:
  3278  000F00                     	movff	(c:strchr@ptr),fsr2l
  3279  000F00  C027  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  3280  000F04  C028  FFDA         	infsnz	((c:strchr@ptr)),c
  3281  000F08  4A27               	incf	((c:strchr@ptr+1)),c
  3282  000F0A  2A28               	movf	indf2,w
  3283  000F0C  50DF               	btfss	status,2
  3284  000F0E  A4D8               	goto	u1101
  3285  000F10  EF8C  F007         	goto	u1100
  3286  000F14  EF8E  F007         u1101:
  3287  000F18                     	goto	l893
  3288  000F18  EF6B  F007         u1100:
  3289  000F1C                     	goto	l1653
  3290  000F1C  EF90  F007         	
  3291                           l896:
  3292  000F20                     	line	10
  3293                           	
  3294                           l1653:
  3295  000F20                     		movlw	low(0)
  3296  000F20  0E00               	movwf	((c:?_strchr)),c
  3297  000F22  6E27               	movlw	high(0)
  3298  000F24  0E00               	movwf	((c:?_strchr+1)),c
  3299  000F26  6E28               
  3300                           	goto	l895
  3301  000F28  EF96  F007         	
  3302                           l1655:
  3303  000F2C                     	line	11
  3304                           	
  3305                           l895:
  3306  000F2C                     	return	;funcret
  3307  000F2C  0012               	opt stack 0
  3308                           GLOBAL	__end_of_strchr
  3309                           	__end_of_strchr:
  3310  000F2E                     	signat	_strchr,8314
  3311                           	global	_send_Status
  3312                           
  3313 ;; *************** function _send_Status *****************
  3314 ;; Defined at:
  3315 ;;		line 28 in file "main.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  temp            4   28[COMRAM] unsigned long 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0
  3329 ;;      Params:         0       0
  3330 ;;      Locals:         4       0
  3331 ;;      Temps:          0       0
  3332 ;;      Totals:         4       0
  3333 ;;Total ram usage:        4 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    4
  3336 ;; This function calls:
  3337 ;;		_ADC_Get
  3338 ;;		_UART_Write_Text
  3339 ;;		___lldiv
  3340 ;;		___lmul
  3341 ;;		_itoa
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3347                           	file	"main.c"
  3348                           	line	28
  3349                           global __ptext5
  3350                           __ptext5:
  3351  000862                     psect	text5
  3352                           	file	"main.c"
  3353                           	line	28
  3354                           	global	__size_of_send_Status
  3355                           	__size_of_send_Status	equ	__end_of_send_Status-_send_Status
  3356  0000                     	
  3357                           _send_Status:
  3358  000862                     ;incstack = 0
  3359                           	opt	stack 26
  3360                           	line	31
  3361                           	
  3362                           l1667:
  3363  000862                     ;main.c: 31: adcValue = ADC_Get();
  3364                           	call	_ADC_Get	;wreg free
  3365  000862  ECEC  F007         	movff	0+?_ADC_Get,(c:_adcValue)
  3366  000866  C02A  F003         	movff	1+?_ADC_Get,(c:_adcValue+1)
  3367  00086A  C02B  F004         	line	33
  3368                           ;main.c: 33: unsigned long temp = ((unsigned long) adcValue * (unsigned long) 5000);
  3369                           	movff	(c:_adcValue),(c:___lmul@multiplier)
  3370  00086E  C003  F027         	movff	(c:_adcValue+1),(c:___lmul@multiplier+1)
  3371  000872  C004  F028         	clrf	((c:___lmul@multiplier+2)),c
  3372  000876  6A29               	clrf	((c:___lmul@multiplier+3)),c
  3373  000878  6A2A               
  3374                           	movlw	low(01388h)
  3375  00087A  0E88               	movwf	((c:___lmul@multiplicand)),c
  3376  00087C  6E2B               	movlw	high(01388h)
  3377  00087E  0E13               	movwf	((c:___lmul@multiplicand+1)),c
  3378  000880  6E2C               	movlw	low highword(01388h)
  3379  000882  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  3380  000884  6E2D               	movlw	high highword(01388h)
  3381  000886  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  3382  000888  6E2E               	call	___lmul	;wreg free
  3383  00088A  EC32  F007         	movff	0+?___lmul,(c:send_Status@temp)
  3384  00088E  C027  F03F         	movff	1+?___lmul,(c:send_Status@temp+1)
  3385  000892  C028  F040         	movff	2+?___lmul,(c:send_Status@temp+2)
  3386  000896  C029  F041         	movff	3+?___lmul,(c:send_Status@temp+3)
  3387  00089A  C02A  F042         	
  3388                           	line	34
  3389                           ;main.c: 34: batValue = temp / 1023;
  3390                           	movff	(c:send_Status@temp),(c:___lldiv@dividend)
  3391  00089E  C03F  F027         	movff	(c:send_Status@temp+1),(c:___lldiv@dividend+1)
  3392  0008A2  C040  F028         	movff	(c:send_Status@temp+2),(c:___lldiv@dividend+2)
  3393  0008A6  C041  F029         	movff	(c:send_Status@temp+3),(c:___lldiv@dividend+3)
  3394  0008AA  C042  F02A         	movlw	low(03FFh)
  3395  0008AE  0EFF               	movwf	((c:___lldiv@divisor)),c
  3396  0008B0  6E2B               	movlw	high(03FFh)
  3397  0008B2  0E03               	movwf	((c:___lldiv@divisor+1)),c
  3398  0008B4  6E2C               	movlw	low highword(03FFh)
  3399  0008B6  0E00               	movwf	((c:___lldiv@divisor+2)),c
  3400  0008B8  6E2D               	movlw	high highword(03FFh)
  3401  0008BA  0E00               	movwf	((c:___lldiv@divisor+3)),c
  3402  0008BC  6E2E               	call	___lldiv	;wreg free
  3403  0008BE  EC11  F006         	movff	0+?___lldiv,(c:_batValue)
  3404  0008C2  C027  F001         	movff	1+?___lldiv,(c:_batValue+1)
  3405  0008C6  C028  F002         	line	35
  3406                           	
  3407                           l1669:
  3408  0008CA                     ;main.c: 35: itoa(buffer, batValue, 10);
  3409                           		movlw	low(_buffer)
  3410  0008CA  0E19               	movwf	((c:itoa@buf)),c
  3411  0008CC  6E37               	movlw	high(_buffer)
  3412  0008CE  0E00               	movwf	((c:itoa@buf+1)),c
  3413  0008D0  6E38               
  3414                           	movff	(c:_batValue),(c:itoa@val)
  3415  0008D2  C001  F039         	movff	(c:_batValue+1),(c:itoa@val+1)
  3416  0008D6  C002  F03A         	movlw	high(0Ah)
  3417  0008DA  0E00               	movwf	((c:itoa@base+1)),c
  3418  0008DC  6E3C               	movlw	low(0Ah)
  3419  0008DE  0E0A               	movwf	((c:itoa@base)),c
  3420  0008E0  6E3B               	call	_itoa	;wreg free
  3421  0008E2  ECC2  F007         	line	36
  3422                           	
  3423                           l1671:
  3424  0008E6                     ;main.c: 36: UART_Write_Text(buffer);
  3425                           		movlw	low(_buffer)
  3426  0008E6  0E19               	movwf	((c:UART_Write_Text@text)),c
  3427  0008E8  6E28               	movlw	high(_buffer)
  3428  0008EA  0E00               	movwf	((c:UART_Write_Text@text+1)),c
  3429  0008EC  6E29               
  3430                           	call	_UART_Write_Text	;wreg free
  3431  0008EE  EC6D  F006         	line	38
  3432                           	
  3433                           l1673:
  3434  0008F2                     ;main.c: 38: if ((state & 0b00010000) == 0b00010000) {
  3435                           	
  3436                           	btfss	((c:_state)),c,(4)&7
  3437  0008F2  A807               	goto	u1121
  3438  0008F4  EF7E  F004         	goto	u1120
  3439  0008F8  EF80  F004         u1121:
  3440  0008FC                     	goto	l1677
  3441  0008FC  EF88  F004         u1120:
  3442  000900                     	line	39
  3443                           	
  3444                           l1675:
  3445  000900                     ;main.c: 39: UART_Write_Text((unsigned char *) "|ON|");
  3446                           		movlw	low(STR_1)
  3447  000900  0EE4               	movwf	((c:UART_Write_Text@text)),c
  3448  000902  6E28               	movlw	high(STR_1)
  3449  000904  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3450  000906  6E29               
  3451                           	call	_UART_Write_Text	;wreg free
  3452  000908  EC6D  F006         	line	40
  3453                           ;main.c: 40: } else {
  3454                           	goto	l1679
  3455  00090C  EF90  F004         	
  3456                           l142:
  3457  000910                     	line	41
  3458                           	
  3459                           l1677:
  3460  000910                     ;main.c: 41: UART_Write_Text((unsigned char *) "|OFF|");
  3461                           		movlw	low(STR_2)
  3462  000910  0EDE               	movwf	((c:UART_Write_Text@text)),c
  3463  000912  6E28               	movlw	high(STR_2)
  3464  000914  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3465  000916  6E29               
  3466                           	call	_UART_Write_Text	;wreg free
  3467  000918  EC6D  F006         	goto	l1679
  3468  00091C  EF90  F004         	line	42
  3469                           	
  3470                           l143:
  3471  000920                     	line	44
  3472                           	
  3473                           l1679:
  3474  000920                     ;main.c: 42: };main.c: 44: if ((state & 0b00001000) == 0b00001000) {
  3475                           	
  3476                           	btfss	((c:_state)),c,(3)&7
  3477  000920  A607               	goto	u1131
  3478  000922  EF95  F004         	goto	u1130
  3479  000926  EF97  F004         u1131:
  3480  00092A                     	goto	l1683
  3481  00092A  EF9F  F004         u1130:
  3482  00092E                     	line	45
  3483                           	
  3484                           l1681:
  3485  00092E                     ;main.c: 45: UART_Write_Text((unsigned char *) "ON|");
  3486                           		movlw	low(STR_3)
  3487  00092E  0EE5               	movwf	((c:UART_Write_Text@text)),c
  3488  000930  6E28               	movlw	high(STR_3)
  3489  000932  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3490  000934  6E29               
  3491                           	call	_UART_Write_Text	;wreg free
  3492  000936  EC6D  F006         	line	46
  3493                           ;main.c: 46: } else {
  3494                           	goto	l1685
  3495  00093A  EFA7  F004         	
  3496                           l144:
  3497  00093E                     	line	47
  3498                           	
  3499                           l1683:
  3500  00093E                     ;main.c: 47: UART_Write_Text((unsigned char *) "OFF|");
  3501                           		movlw	low(STR_4)
  3502  00093E  0EDF               	movwf	((c:UART_Write_Text@text)),c
  3503  000940  6E28               	movlw	high(STR_4)
  3504  000942  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3505  000944  6E29               
  3506                           	call	_UART_Write_Text	;wreg free
  3507  000946  EC6D  F006         	goto	l1685
  3508  00094A  EFA7  F004         	line	48
  3509                           	
  3510                           l145:
  3511  00094E                     	line	50
  3512                           	
  3513                           l1685:
  3514  00094E                     ;main.c: 48: };main.c: 50: if ((state & 0b00000100) == 0b00000100) {
  3515                           	
  3516                           	btfss	((c:_state)),c,(2)&7
  3517  00094E  A407               	goto	u1141
  3518  000950  EFAC  F004         	goto	u1140
  3519  000954  EFAE  F004         u1141:
  3520  000958                     	goto	l1689
  3521  000958  EFB6  F004         u1140:
  3522  00095C                     	line	51
  3523                           	
  3524                           l1687:
  3525  00095C                     ;main.c: 51: UART_Write_Text((unsigned char *) "AC|");
  3526                           		movlw	low(STR_5)
  3527  00095C  0EE9               	movwf	((c:UART_Write_Text@text)),c
  3528  00095E  6E28               	movlw	high(STR_5)
  3529  000960  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3530  000962  6E29               
  3531                           	call	_UART_Write_Text	;wreg free
  3532  000964  EC6D  F006         	line	52
  3533                           ;main.c: 52: } else {
  3534                           	goto	l1691
  3535  000968  EFBE  F004         	
  3536                           l146:
  3537  00096C                     	line	53
  3538                           	
  3539                           l1689:
  3540  00096C                     ;main.c: 53: UART_Write_Text((unsigned char *) "DC|");
  3541                           		movlw	low(STR_6)
  3542  00096C  0EED               	movwf	((c:UART_Write_Text@text)),c
  3543  00096E  6E28               	movlw	high(STR_6)
  3544  000970  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3545  000972  6E29               
  3546                           	call	_UART_Write_Text	;wreg free
  3547  000974  EC6D  F006         	goto	l1691
  3548  000978  EFBE  F004         	line	54
  3549                           	
  3550                           l147:
  3551  00097C                     	line	56
  3552                           	
  3553                           l1691:
  3554  00097C                     ;main.c: 54: };main.c: 56: if ((state & 0b00000010) == 0b00000010) {
  3555                           	
  3556                           	btfss	((c:_state)),c,(1)&7
  3557  00097C  A207               	goto	u1151
  3558  00097E  EFC3  F004         	goto	u1150
  3559  000982  EFC5  F004         u1151:
  3560  000986                     	goto	l1695
  3561  000986  EFCD  F004         u1150:
  3562  00098A                     	line	57
  3563                           	
  3564                           l1693:
  3565  00098A                     ;main.c: 57: UART_Write_Text((unsigned char *) "ON|");
  3566                           		movlw	low(STR_7)
  3567  00098A  0EE5               	movwf	((c:UART_Write_Text@text)),c
  3568  00098C  6E28               	movlw	high(STR_7)
  3569  00098E  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3570  000990  6E29               
  3571                           	call	_UART_Write_Text	;wreg free
  3572  000992  EC6D  F006         	line	58
  3573                           ;main.c: 58: } else {
  3574                           	goto	l1697
  3575  000996  EFD5  F004         	
  3576                           l148:
  3577  00099A                     	line	59
  3578                           	
  3579                           l1695:
  3580  00099A                     ;main.c: 59: UART_Write_Text((unsigned char *) "OFF|");
  3581                           		movlw	low(STR_8)
  3582  00099A  0EDF               	movwf	((c:UART_Write_Text@text)),c
  3583  00099C  6E28               	movlw	high(STR_8)
  3584  00099E  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3585  0009A0  6E29               
  3586                           	call	_UART_Write_Text	;wreg free
  3587  0009A2  EC6D  F006         	goto	l1697
  3588  0009A6  EFD5  F004         	line	60
  3589                           	
  3590                           l149:
  3591  0009AA                     	line	62
  3592                           	
  3593                           l1697:
  3594  0009AA                     ;main.c: 60: };main.c: 62: if ((state & 0b00000001) == 0b00000001) {
  3595                           	
  3596                           	btfss	((c:_state)),c,(0)&7
  3597  0009AA  A007               	goto	u1161
  3598  0009AC  EFDA  F004         	goto	u1160
  3599  0009B0  EFDC  F004         u1161:
  3600  0009B4                     	goto	l1701
  3601  0009B4  EFE4  F004         u1160:
  3602  0009B8                     	line	63
  3603                           	
  3604                           l1699:
  3605  0009B8                     ;main.c: 63: UART_Write_Text((unsigned char *) "ON");
  3606                           		movlw	low(STR_9)
  3607  0009B8  0EC2               	movwf	((c:UART_Write_Text@text)),c
  3608  0009BA  6E28               	movlw	high(STR_9)
  3609  0009BC  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3610  0009BE  6E29               
  3611                           	call	_UART_Write_Text	;wreg free
  3612  0009C0  EC6D  F006         	line	64
  3613                           ;main.c: 64: } else {
  3614                           	goto	l152
  3615  0009C4  EFEC  F004         	
  3616                           l150:
  3617  0009C8                     	line	65
  3618                           	
  3619                           l1701:
  3620  0009C8                     ;main.c: 65: UART_Write_Text((unsigned char *) "OFF");
  3621                           		movlw	low(STR_10)
  3622  0009C8  0EB8               	movwf	((c:UART_Write_Text@text)),c
  3623  0009CA  6E28               	movlw	high(STR_10)
  3624  0009CC  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  3625  0009CE  6E29               
  3626                           	call	_UART_Write_Text	;wreg free
  3627  0009D0  EC6D  F006         	goto	l152
  3628  0009D4  EFEC  F004         	line	66
  3629                           	
  3630                           l151:
  3631  0009D8                     	line	71
  3632                           	
  3633                           l152:
  3634  0009D8                     	return	;funcret
  3635  0009D8  0012               	opt stack 0
  3636                           GLOBAL	__end_of_send_Status
  3637                           	__end_of_send_Status:
  3638  0009DA                     	signat	_send_Status,89
  3639                           	global	_itoa
  3640                           
  3641 ;; *************** function _itoa *****************
  3642 ;; Defined at:
  3643 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3646 ;;		 -> buffer(10), 
  3647 ;;  val             2   22[COMRAM] int 
  3648 ;;  base            2   24[COMRAM] int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  cp              2   26[COMRAM] PTR unsigned char 
  3651 ;;		 -> buffer(10), 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2   20[COMRAM] PTR unsigned char 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0
  3661 ;;      Params:         6       0
  3662 ;;      Locals:         2       0
  3663 ;;      Temps:          0       0
  3664 ;;      Totals:         8       0
  3665 ;;Total ram usage:        8 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    3
  3668 ;; This function calls:
  3669 ;;		_utoa
  3670 ;; This function is called by:
  3671 ;;		_send_Status
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           psect	text6,class=CODE,space=0,reloc=2,group=2
  3675                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3676                           	line	4
  3677                           global __ptext6
  3678                           __ptext6:
  3679  000F84                     psect	text6
  3680                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3681                           	line	4
  3682                           	global	__size_of_itoa
  3683                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  3684  0000                     	
  3685                           _itoa:
  3686  000F84                     ;incstack = 0
  3687                           	opt	stack 26
  3688                           	line	6
  3689                           	
  3690                           l1573:
  3691  000F84                     		movff	(c:itoa@buf),(c:itoa@cp)
  3692  000F84  C037  F03D         	movff	(c:itoa@buf+1),(c:itoa@cp+1)
  3693  000F88  C038  F03E         
  3694                           	line	8
  3695                           	btfsc	((c:itoa@val+1)),c,7
  3696  000F8C  BE3A               	goto	u990
  3697  000F8E  EFCD  F007         	goto	u991
  3698  000F92  EFCB  F007         
  3699                           u991:
  3700  000F96                     	goto	l1581
  3701  000F96  EFDB  F007         u990:
  3702  000F9A                     	line	9
  3703                           	
  3704                           l1575:
  3705  000F9A                     	movff	(c:itoa@buf),fsr2l
  3706  000F9A  C037  FFD9         	movff	(c:itoa@buf+1),fsr2h
  3707  000F9E  C038  FFDA         	movlw	low(02Dh)
  3708  000FA2  0E2D               	movwf	indf2
  3709  000FA4  6EDF               	
  3710                           l1577:
  3711  000FA6                     	infsnz	((c:itoa@buf)),c
  3712  000FA6  4A37               	incf	((c:itoa@buf+1)),c
  3713  000FA8  2A38               	line	10
  3714                           	
  3715                           l1579:
  3716  000FAA                     	negf	((c:itoa@val)),c
  3717  000FAA  6C39               	comf	((c:itoa@val+1)),c
  3718  000FAC  1E3A               	btfsc	status,0
  3719  000FAE  B0D8               	incf	((c:itoa@val+1)),c
  3720  000FB0  2A3A               	goto	l1581
  3721  000FB2  EFDB  F007         	line	11
  3722                           	
  3723                           l860:
  3724  000FB6                     	line	12
  3725                           	
  3726                           l1581:
  3727  000FB6                     		movff	(c:itoa@buf),(c:utoa@buf)
  3728  000FB6  C037  F02E         	movff	(c:itoa@buf+1),(c:utoa@buf+1)
  3729  000FBA  C038  F02F         
  3730                           	movff	(c:itoa@val),(c:utoa@val)
  3731  000FBE  C039  F030         	movff	(c:itoa@val+1),(c:utoa@val+1)
  3732  000FC2  C03A  F031         	movff	(c:itoa@base),(c:utoa@base)
  3733  000FC6  C03B  F032         	movff	(c:itoa@base+1),(c:utoa@base+1)
  3734  000FCA  C03C  F033         	call	_utoa	;wreg free
  3735  000FCE  ECED  F004         	goto	l861
  3736  000FD2  EFEB  F007         	line	13
  3737                           	
  3738                           l1583:
  3739  000FD6                     	line	14
  3740                           ;	Return value of _itoa is never used
  3741                           	
  3742                           l861:
  3743  000FD6                     	return	;funcret
  3744  000FD6  0012               	opt stack 0
  3745                           GLOBAL	__end_of_itoa
  3746                           	__end_of_itoa:
  3747  000FD8                     	signat	_itoa,12410
  3748                           	global	_utoa
  3749                           
  3750 ;; *************** function _utoa *****************
  3751 ;; Defined at:
  3752 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  buf             2   11[COMRAM] PTR unsigned char 
  3755 ;;		 -> buffer(10), 
  3756 ;;  val             2   13[COMRAM] unsigned int 
  3757 ;;  base            2   15[COMRAM] int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  v               2   17[COMRAM] unsigned int 
  3760 ;;  c               1   19[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  2   11[COMRAM] PTR unsigned char 
  3763 ;; Registers used:
  3764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0
  3770 ;;      Params:         6       0
  3771 ;;      Locals:         3       0
  3772 ;;      Temps:          0       0
  3773 ;;      Totals:         9       0
  3774 ;;Total ram usage:        9 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    2
  3777 ;; This function calls:
  3778 ;;		___lwdiv
  3779 ;;		___lwmod
  3780 ;; This function is called by:
  3781 ;;		_itoa
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           psect	text7,class=CODE,space=0,reloc=2,group=2
  3785                           	line	17
  3786                           global __ptext7
  3787                           __ptext7:
  3788  0009DA                     psect	text7
  3789                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3790                           	line	17
  3791                           	global	__size_of_utoa
  3792                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  3793  0000                     	
  3794                           _utoa:
  3795  0009DA                     ;incstack = 0
  3796                           	opt	stack 26
  3797                           	line	22
  3798                           	
  3799                           l1511:
  3800  0009DA                     	movff	(c:utoa@val),(c:utoa@v)
  3801  0009DA  C030  F034         	movff	(c:utoa@val+1),(c:utoa@v+1)
  3802  0009DE  C031  F035         	goto	l1513
  3803  0009E2  EFF3  F004         	line	23
  3804                           	
  3805                           l864:
  3806  0009E6                     	line	24
  3807                           	
  3808                           l1513:
  3809  0009E6                     	movff	(c:utoa@v),(c:___lwdiv@dividend)
  3810  0009E6  C034  F027         	movff	(c:utoa@v+1),(c:___lwdiv@dividend+1)
  3811  0009EA  C035  F028         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3812  0009EE  C032  F029         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3813  0009F2  C033  F02A         	call	___lwdiv	;wreg free
  3814  0009F6  ECB2  F006         	movff	0+?___lwdiv,(c:utoa@v)
  3815  0009FA  C027  F034         	movff	1+?___lwdiv,(c:utoa@v+1)
  3816  0009FE  C028  F035         	line	25
  3817                           	
  3818                           l1515:
  3819  000A02                     	infsnz	((c:utoa@buf)),c
  3820  000A02  4A2E               	incf	((c:utoa@buf+1)),c
  3821  000A04  2A2F               	line	26
  3822                           	
  3823                           l1517:
  3824  000A06                     	movf	((c:utoa@v)),c,w
  3825  000A06  5034               iorwf	((c:utoa@v+1)),c,w
  3826  000A08  1035               	btfss	status,2
  3827  000A0A  A4D8               	goto	u911
  3828  000A0C  EF0A  F005         	goto	u910
  3829  000A10  EF0C  F005         
  3830                           u911:
  3831  000A14                     	goto	l1513
  3832  000A14  EFF3  F004         u910:
  3833  000A18                     	goto	l1519
  3834  000A18  EF0E  F005         	
  3835                           l865:
  3836  000A1C                     	line	27
  3837                           	
  3838                           l1519:
  3839  000A1C                     	movff	(c:utoa@buf),fsr2l
  3840  000A1C  C02E  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3841  000A20  C02F  FFDA         	movlw	low(0)
  3842  000A24  0E00               	movwf	indf2
  3843  000A26  6EDF               	
  3844                           l1521:
  3845  000A28                     	decf	((c:utoa@buf)),c
  3846  000A28  062E               	btfss	status,0
  3847  000A2A  A0D8               	decf	((c:utoa@buf+1)),c
  3848  000A2C  062F               	goto	l1523
  3849  000A2E  EF19  F005         	line	28
  3850                           	
  3851                           l866:
  3852  000A32                     	line	29
  3853                           	
  3854                           l1523:
  3855  000A32                     	movff	(c:utoa@val),(c:___lwmod@dividend)
  3856  000A32  C030  F027         	movff	(c:utoa@val+1),(c:___lwmod@dividend+1)
  3857  000A36  C031  F028         	movff	(c:utoa@base),(c:___lwmod@divisor)
  3858  000A3A  C032  F029         	movff	(c:utoa@base+1),(c:___lwmod@divisor+1)
  3859  000A3E  C033  F02A         	call	___lwmod	;wreg free
  3860  000A42  ECF6  F006         	movf	(0+?___lwmod),c,w
  3861  000A46  5027               	movwf	((c:utoa@c)),c
  3862  000A48  6E36               	line	30
  3863                           	
  3864                           l1525:
  3865  000A4A                     	movff	(c:utoa@val),(c:___lwdiv@dividend)
  3866  000A4A  C030  F027         	movff	(c:utoa@val+1),(c:___lwdiv@dividend+1)
  3867  000A4E  C031  F028         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3868  000A52  C032  F029         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3869  000A56  C033  F02A         	call	___lwdiv	;wreg free
  3870  000A5A  ECB2  F006         	movff	0+?___lwdiv,(c:utoa@val)
  3871  000A5E  C027  F030         	movff	1+?___lwdiv,(c:utoa@val+1)
  3872  000A62  C028  F031         	line	31
  3873                           	
  3874                           l1527:
  3875  000A66                     		movlw	0Ah-1
  3876  000A66  0E09               	cpfsgt	((c:utoa@c)),c
  3877  000A68  6436               	goto	u921
  3878  000A6A  EF39  F005         	goto	u920
  3879  000A6E  EF3B  F005         
  3880                           u921:
  3881  000A72                     	goto	l867
  3882  000A72  EF3D  F005         u920:
  3883  000A76                     	line	32
  3884                           	
  3885                           l1529:
  3886  000A76                     	movlw	(07h)&0ffh
  3887  000A76  0E07               	addwf	((c:utoa@c)),c
  3888  000A78  2636               	
  3889                           l867:
  3890  000A7A                     	line	33
  3891                           	movlw	(030h)&0ffh
  3892  000A7A  0E30               	addwf	((c:utoa@c)),c
  3893  000A7C  2636               	line	34
  3894                           	
  3895                           l1531:
  3896  000A7E                     	movff	(c:utoa@buf),fsr2l
  3897  000A7E  C02E  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3898  000A82  C02F  FFDA         	movff	(c:utoa@c),indf2
  3899  000A86  C036  FFDF         
  3900                           	
  3901                           l1533:
  3902  000A8A                     	decf	((c:utoa@buf)),c
  3903  000A8A  062E               	btfss	status,0
  3904  000A8C  A0D8               	decf	((c:utoa@buf+1)),c
  3905  000A8E  062F               	line	35
  3906                           	
  3907                           l1535:
  3908  000A90                     	movf	((c:utoa@val)),c,w
  3909  000A90  5030               iorwf	((c:utoa@val+1)),c,w
  3910  000A92  1031               	btfss	status,2
  3911  000A94  A4D8               	goto	u931
  3912  000A96  EF4F  F005         	goto	u930
  3913  000A9A  EF51  F005         
  3914                           u931:
  3915  000A9E                     	goto	l1523
  3916  000A9E  EF19  F005         u930:
  3917  000AA2                     	goto	l1537
  3918  000AA2  EF53  F005         	
  3919                           l868:
  3920  000AA6                     	line	36
  3921                           	
  3922                           l1537:
  3923  000AA6                     ;	Return value of _utoa is never used
  3924                           	infsnz	((c:utoa@buf)),c
  3925  000AA6  4A2E               	incf	((c:utoa@buf+1)),c
  3926  000AA8  2A2F               	goto	l869
  3927  000AAA  EF57  F005         	
  3928                           l1539:
  3929  000AAE                     	line	37
  3930                           	
  3931                           l869:
  3932  000AAE                     	return	;funcret
  3933  000AAE  0012               	opt stack 0
  3934                           GLOBAL	__end_of_utoa
  3935                           	__end_of_utoa:
  3936  000AB0                     	signat	_utoa,12410
  3937                           	global	___lwmod
  3938                           
  3939 ;; *************** function ___lwmod *****************
  3940 ;; Defined at:
  3941 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  dividend        2    4[COMRAM] unsigned int 
  3944 ;;  divisor         2    6[COMRAM] unsigned int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  counter         1    8[COMRAM] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  2    4[COMRAM] unsigned int 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0
  3956 ;;      Params:         4       0
  3957 ;;      Locals:         1       0
  3958 ;;      Temps:          0       0
  3959 ;;      Totals:         5       0
  3960 ;;Total ram usage:        5 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_utoa
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           psect	text8,class=CODE,space=0,reloc=2,group=1
  3970                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3971                           	line	7
  3972                           global __ptext8
  3973                           __ptext8:
  3974  000DEC                     psect	text8
  3975                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3976                           	line	7
  3977                           	global	__size_of___lwmod
  3978                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3979  0000                     	
  3980                           ___lwmod:
  3981  000DEC                     ;incstack = 0
  3982                           	opt	stack 26
  3983                           	line	12
  3984                           	
  3985                           l1489:
  3986  000DEC                     	movf	((c:___lwmod@divisor)),c,w
  3987  000DEC  5029               iorwf	((c:___lwmod@divisor+1)),c,w
  3988  000DEE  102A               	btfsc	status,2
  3989  000DF0  B4D8               	goto	u871
  3990  000DF2  EFFD  F006         	goto	u870
  3991  000DF6  EFFF  F006         
  3992                           u871:
  3993  000DFA                     	goto	l685
  3994  000DFA  EF2D  F007         u870:
  3995  000DFE                     	line	13
  3996                           	
  3997                           l1491:
  3998  000DFE                     	movlw	low(01h)
  3999  000DFE  0E01               	movwf	((c:___lwmod@counter)),c
  4000  000E00  6E2B               	line	14
  4001                           	goto	l1495
  4002  000E02  EF09  F007         	
  4003                           l687:
  4004  000E06                     	line	15
  4005                           	
  4006                           l1493:
  4007  000E06                     	bcf	status,0
  4008  000E06  90D8               	rlcf	((c:___lwmod@divisor)),c
  4009  000E08  3629               	rlcf	((c:___lwmod@divisor+1)),c
  4010  000E0A  362A               	line	16
  4011                           	incf	((c:___lwmod@counter)),c
  4012  000E0C  2A2B               	goto	l1495
  4013  000E0E  EF09  F007         	line	17
  4014                           	
  4015                           l686:
  4016  000E12                     	line	14
  4017                           	
  4018                           l1495:
  4019  000E12                     	
  4020                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  4021  000E12  AE2A               	goto	u881
  4022  000E14  EF0E  F007         	goto	u880
  4023  000E18  EF10  F007         u881:
  4024  000E1C                     	goto	l1493
  4025  000E1C  EF03  F007         u880:
  4026  000E20                     	goto	l1497
  4027  000E20  EF14  F007         	
  4028                           l688:
  4029  000E24                     	goto	l1497
  4030  000E24  EF14  F007         	line	18
  4031                           	
  4032                           l689:
  4033  000E28                     	line	19
  4034                           	
  4035                           l1497:
  4036  000E28                     		movf	((c:___lwmod@divisor)),c,w
  4037  000E28  5029               	subwf	((c:___lwmod@dividend)),c,w
  4038  000E2A  5C27               	movf	((c:___lwmod@divisor+1)),c,w
  4039  000E2C  502A               	subwfb	((c:___lwmod@dividend+1)),c,w
  4040  000E2E  5828               	btfss	status,0
  4041  000E30  A0D8               	goto	u891
  4042  000E32  EF1D  F007         	goto	u890
  4043  000E36  EF1F  F007         
  4044                           u891:
  4045  000E3A                     	goto	l1501
  4046  000E3A  EF25  F007         u890:
  4047  000E3E                     	line	20
  4048                           	
  4049                           l1499:
  4050  000E3E                     	movf	((c:___lwmod@divisor)),c,w
  4051  000E3E  5029               	subwf	((c:___lwmod@dividend)),c
  4052  000E40  5E27               	movf	((c:___lwmod@divisor+1)),c,w
  4053  000E42  502A               	subwfb	((c:___lwmod@dividend+1)),c
  4054  000E44  5A28               
  4055                           	goto	l1501
  4056  000E46  EF25  F007         	
  4057                           l690:
  4058  000E4A                     	line	21
  4059                           	
  4060                           l1501:
  4061  000E4A                     	bcf	status,0
  4062  000E4A  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  4063  000E4C  322A               	rrcf	((c:___lwmod@divisor)),c
  4064  000E4E  3229               	line	22
  4065                           	
  4066                           l1503:
  4067  000E50                     	decfsz	((c:___lwmod@counter)),c
  4068  000E50  2E2B               	
  4069                           	goto	l1497
  4070  000E52  EF14  F007         	goto	l685
  4071  000E56  EF2D  F007         	
  4072                           l691:
  4073  000E5A                     	line	23
  4074                           	
  4075                           l685:
  4076  000E5A                     	line	24
  4077                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  4078  000E5A  C027  F027         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  4079  000E5E  C028  F028         	line	25
  4080                           	
  4081                           l692:
  4082  000E62                     	return	;funcret
  4083  000E62  0012               	opt stack 0
  4084                           GLOBAL	__end_of___lwmod
  4085                           	__end_of___lwmod:
  4086  000E64                     	signat	___lwmod,8314
  4087                           	global	___lwdiv
  4088                           
  4089 ;; *************** function ___lwdiv *****************
  4090 ;; Defined at:
  4091 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  dividend        2    4[COMRAM] unsigned int 
  4094 ;;  divisor         2    6[COMRAM] unsigned int 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  quotient        2    8[COMRAM] unsigned int 
  4097 ;;  counter         1   10[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    4[COMRAM] unsigned int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0
  4107 ;;      Params:         4       0
  4108 ;;      Locals:         3       0
  4109 ;;      Temps:          0       0
  4110 ;;      Totals:         7       0
  4111 ;;Total ram usage:        7 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_utoa
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           psect	text9,class=CODE,space=0,reloc=2,group=1
  4121                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4122                           	line	7
  4123                           global __ptext9
  4124                           __ptext9:
  4125  000D64                     psect	text9
  4126                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4127                           	line	7
  4128                           	global	__size_of___lwdiv
  4129                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4130  0000                     	
  4131                           ___lwdiv:
  4132  000D64                     ;incstack = 0
  4133                           	opt	stack 26
  4134                           	line	13
  4135                           	
  4136                           l1467:
  4137  000D64                     	movlw	high(0)
  4138  000D64  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  4139  000D66  6E2C               	movlw	low(0)
  4140  000D68  0E00               	movwf	((c:___lwdiv@quotient)),c
  4141  000D6A  6E2B               	line	14
  4142                           	
  4143                           l1469:
  4144  000D6C                     	movf	((c:___lwdiv@divisor)),c,w
  4145  000D6C  5029               iorwf	((c:___lwdiv@divisor+1)),c,w
  4146  000D6E  102A               	btfsc	status,2
  4147  000D70  B4D8               	goto	u841
  4148  000D72  EFBD  F006         	goto	u840
  4149  000D76  EFBF  F006         
  4150                           u841:
  4151  000D7A                     	goto	l675
  4152  000D7A  EFF1  F006         u840:
  4153  000D7E                     	line	15
  4154                           	
  4155                           l1471:
  4156  000D7E                     	movlw	low(01h)
  4157  000D7E  0E01               	movwf	((c:___lwdiv@counter)),c
  4158  000D80  6E2D               	line	16
  4159                           	goto	l1475
  4160  000D82  EFC9  F006         	
  4161                           l677:
  4162  000D86                     	line	17
  4163                           	
  4164                           l1473:
  4165  000D86                     	bcf	status,0
  4166  000D86  90D8               	rlcf	((c:___lwdiv@divisor)),c
  4167  000D88  3629               	rlcf	((c:___lwdiv@divisor+1)),c
  4168  000D8A  362A               	line	18
  4169                           	incf	((c:___lwdiv@counter)),c
  4170  000D8C  2A2D               	goto	l1475
  4171  000D8E  EFC9  F006         	line	19
  4172                           	
  4173                           l676:
  4174  000D92                     	line	16
  4175                           	
  4176                           l1475:
  4177  000D92                     	
  4178                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  4179  000D92  AE2A               	goto	u851
  4180  000D94  EFCE  F006         	goto	u850
  4181  000D98  EFD0  F006         u851:
  4182  000D9C                     	goto	l1473
  4183  000D9C  EFC3  F006         u850:
  4184  000DA0                     	goto	l1477
  4185  000DA0  EFD4  F006         	
  4186                           l678:
  4187  000DA4                     	goto	l1477
  4188  000DA4  EFD4  F006         	line	20
  4189                           	
  4190                           l679:
  4191  000DA8                     	line	21
  4192                           	
  4193                           l1477:
  4194  000DA8                     	bcf	status,0
  4195  000DA8  90D8               	rlcf	((c:___lwdiv@quotient)),c
  4196  000DAA  362B               	rlcf	((c:___lwdiv@quotient+1)),c
  4197  000DAC  362C               	line	22
  4198                           	
  4199                           l1479:
  4200  000DAE                     		movf	((c:___lwdiv@divisor)),c,w
  4201  000DAE  5029               	subwf	((c:___lwdiv@dividend)),c,w
  4202  000DB0  5C27               	movf	((c:___lwdiv@divisor+1)),c,w
  4203  000DB2  502A               	subwfb	((c:___lwdiv@dividend+1)),c,w
  4204  000DB4  5828               	btfss	status,0
  4205  000DB6  A0D8               	goto	u861
  4206  000DB8  EFE0  F006         	goto	u860
  4207  000DBC  EFE2  F006         
  4208                           u861:
  4209  000DC0                     	goto	l1485
  4210  000DC0  EFE9  F006         u860:
  4211  000DC4                     	line	23
  4212                           	
  4213                           l1481:
  4214  000DC4                     	movf	((c:___lwdiv@divisor)),c,w
  4215  000DC4  5029               	subwf	((c:___lwdiv@dividend)),c
  4216  000DC6  5E27               	movf	((c:___lwdiv@divisor+1)),c,w
  4217  000DC8  502A               	subwfb	((c:___lwdiv@dividend+1)),c
  4218  000DCA  5A28               
  4219                           	line	24
  4220                           	
  4221                           l1483:
  4222  000DCC                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  4223  000DCC  802B               	goto	l1485
  4224  000DCE  EFE9  F006         	line	25
  4225                           	
  4226                           l680:
  4227  000DD2                     	line	26
  4228                           	
  4229                           l1485:
  4230  000DD2                     	bcf	status,0
  4231  000DD2  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  4232  000DD4  322A               	rrcf	((c:___lwdiv@divisor)),c
  4233  000DD6  3229               	line	27
  4234                           	
  4235                           l1487:
  4236  000DD8                     	decfsz	((c:___lwdiv@counter)),c
  4237  000DD8  2E2D               	
  4238                           	goto	l1477
  4239  000DDA  EFD4  F006         	goto	l675
  4240  000DDE  EFF1  F006         	
  4241                           l681:
  4242  000DE2                     	line	28
  4243                           	
  4244                           l675:
  4245  000DE2                     	line	29
  4246                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  4247  000DE2  C02B  F027         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  4248  000DE6  C02C  F028         	line	30
  4249                           	
  4250                           l682:
  4251  000DEA                     	return	;funcret
  4252  000DEA  0012               	opt stack 0
  4253                           GLOBAL	__end_of___lwdiv
  4254                           	__end_of___lwdiv:
  4255  000DEC                     	signat	___lwdiv,8314
  4256                           	global	___lmul
  4257                           
  4258 ;; *************** function ___lmul *****************
  4259 ;; Defined at:
  4260 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  multiplier      4    4[COMRAM] unsigned long 
  4263 ;;  multiplicand    4    8[COMRAM] unsigned long 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  product         4   12[COMRAM] unsigned long 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  4    4[COMRAM] unsigned long 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0
  4275 ;;      Params:         8       0
  4276 ;;      Locals:         4       0
  4277 ;;      Temps:          0       0
  4278 ;;      Totals:        12       0
  4279 ;;Total ram usage:       12 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_send_Status
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           psect	text10,class=CODE,space=0,reloc=2,group=1
  4289                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4290                           	line	15
  4291                           global __ptext10
  4292                           __ptext10:
  4293  000E64                     psect	text10
  4294                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4295                           	line	15
  4296                           	global	__size_of___lmul
  4297                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  4298  0000                     	
  4299                           ___lmul:
  4300  000E64                     ;incstack = 0
  4301                           	opt	stack 28
  4302                           	line	119
  4303                           	
  4304                           l1585:
  4305  000E64                     	movlw	low(0)
  4306  000E64  0E00               	movwf	((c:___lmul@product)),c
  4307  000E66  6E2F               	movlw	high(0)
  4308  000E68  0E00               	movwf	((c:___lmul@product+1)),c
  4309  000E6A  6E30               	movlw	low highword(0)
  4310  000E6C  0E00               	movwf	((c:___lmul@product+2)),c
  4311  000E6E  6E31               	movlw	high highword(0)
  4312  000E70  0E00               	movwf	((c:___lmul@product+3)),c
  4313  000E72  6E32               	goto	l1587
  4314  000E74  EF3C  F007         	line	120
  4315                           	
  4316                           l205:
  4317  000E78                     	line	121
  4318                           	
  4319                           l1587:
  4320  000E78                     	
  4321                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  4322  000E78  A027               	goto	u1001
  4323  000E7A  EF41  F007         	goto	u1000
  4324  000E7E  EF43  F007         u1001:
  4325  000E82                     	goto	l1591
  4326  000E82  EF4D  F007         u1000:
  4327  000E86                     	line	122
  4328                           	
  4329                           l1589:
  4330  000E86                     	movf	((c:___lmul@multiplicand)),c,w
  4331  000E86  502B               	addwf	((c:___lmul@product)),c
  4332  000E88  262F               	movf	((c:___lmul@multiplicand+1)),c,w
  4333  000E8A  502C               	addwfc	((c:___lmul@product+1)),c
  4334  000E8C  2230               	movf	((c:___lmul@multiplicand+2)),c,w
  4335  000E8E  502D               	addwfc	((c:___lmul@product+2)),c
  4336  000E90  2231               	movf	((c:___lmul@multiplicand+3)),c,w
  4337  000E92  502E               	addwfc	((c:___lmul@product+3)),c
  4338  000E94  2232               	goto	l1591
  4339  000E96  EF4D  F007         	
  4340                           l206:
  4341  000E9A                     	line	123
  4342                           	
  4343                           l1591:
  4344  000E9A                     	bcf	status,0
  4345  000E9A  90D8               	rlcf	((c:___lmul@multiplicand)),c
  4346  000E9C  362B               	rlcf	((c:___lmul@multiplicand+1)),c
  4347  000E9E  362C               	rlcf	((c:___lmul@multiplicand+2)),c
  4348  000EA0  362D               	rlcf	((c:___lmul@multiplicand+3)),c
  4349  000EA2  362E               	line	124
  4350                           	
  4351                           l1593:
  4352  000EA4                     	bcf	status,0
  4353  000EA4  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  4354  000EA6  322A               	rrcf	((c:___lmul@multiplier+2)),c
  4355  000EA8  3229               	rrcf	((c:___lmul@multiplier+1)),c
  4356  000EAA  3228               	rrcf	((c:___lmul@multiplier)),c
  4357  000EAC  3227               	line	125
  4358                           	movf	((c:___lmul@multiplier)),c,w
  4359  000EAE  5027               iorwf	((c:___lmul@multiplier+1)),c,w
  4360  000EB0  1028               iorwf	((c:___lmul@multiplier+2)),c,w
  4361  000EB2  1029               iorwf	((c:___lmul@multiplier+3)),c,w
  4362  000EB4  102A               	btfss	status,2
  4363  000EB6  A4D8               	goto	u1011
  4364  000EB8  EF60  F007         	goto	u1010
  4365  000EBC  EF62  F007         
  4366                           u1011:
  4367  000EC0                     	goto	l1587
  4368  000EC0  EF3C  F007         u1010:
  4369  000EC4                     	
  4370                           l207:
  4371  000EC4                     	line	128
  4372                           	movff	(c:___lmul@product),(c:?___lmul)
  4373  000EC4  C02F  F027         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  4374  000EC8  C030  F028         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  4375  000ECC  C031  F029         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  4376  000ED0  C032  F02A         	line	129
  4377                           	
  4378                           l208:
  4379  000ED4                     	return	;funcret
  4380  000ED4  0012               	opt stack 0
  4381                           GLOBAL	__end_of___lmul
  4382                           	__end_of___lmul:
  4383  000ED6                     	signat	___lmul,8316
  4384                           	global	___lldiv
  4385                           
  4386 ;; *************** function ___lldiv *****************
  4387 ;; Defined at:
  4388 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  dividend        4    4[COMRAM] unsigned long 
  4391 ;;  divisor         4    8[COMRAM] unsigned long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  quotient        4   12[COMRAM] unsigned long 
  4394 ;;  counter         1   16[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4    4[COMRAM] unsigned long 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0
  4404 ;;      Params:         8       0
  4405 ;;      Locals:         5       0
  4406 ;;      Temps:          0       0
  4407 ;;      Totals:        13       0
  4408 ;;Total ram usage:       13 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    1
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_send_Status
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           psect	text11,class=CODE,space=0,reloc=2,group=1
  4418                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4419                           	line	7
  4420                           global __ptext11
  4421                           __ptext11:
  4422  000C22                     psect	text11
  4423                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4424                           	line	7
  4425                           	global	__size_of___lldiv
  4426                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4427  0000                     	
  4428                           ___lldiv:
  4429  000C22                     ;incstack = 0
  4430                           	opt	stack 28
  4431                           	line	13
  4432                           	
  4433                           l1595:
  4434  000C22                     	movlw	low(0)
  4435  000C22  0E00               	movwf	((c:___lldiv@quotient)),c
  4436  000C24  6E2F               	movlw	high(0)
  4437  000C26  0E00               	movwf	((c:___lldiv@quotient+1)),c
  4438  000C28  6E30               	movlw	low highword(0)
  4439  000C2A  0E00               	movwf	((c:___lldiv@quotient+2)),c
  4440  000C2C  6E31               	movlw	high highword(0)
  4441  000C2E  0E00               	movwf	((c:___lldiv@quotient+3)),c
  4442  000C30  6E32               	line	14
  4443                           	
  4444                           l1597:
  4445  000C32                     	movf	((c:___lldiv@divisor)),c,w
  4446  000C32  502B               iorwf	((c:___lldiv@divisor+1)),c,w
  4447  000C34  102C               iorwf	((c:___lldiv@divisor+2)),c,w
  4448  000C36  102D               iorwf	((c:___lldiv@divisor+3)),c,w
  4449  000C38  102E               	btfsc	status,2
  4450  000C3A  B4D8               	goto	u1021
  4451  000C3C  EF22  F006         	goto	u1020
  4452  000C40  EF24  F006         
  4453                           u1021:
  4454  000C44                     	goto	l223
  4455  000C44  EF64  F006         u1020:
  4456  000C48                     	line	15
  4457                           	
  4458                           l1599:
  4459  000C48                     	movlw	low(01h)
  4460  000C48  0E01               	movwf	((c:___lldiv@counter)),c
  4461  000C4A  6E33               	line	16
  4462                           	goto	l1603
  4463  000C4C  EF30  F006         	
  4464                           l225:
  4465  000C50                     	line	17
  4466                           	
  4467                           l1601:
  4468  000C50                     	bcf	status,0
  4469  000C50  90D8               	rlcf	((c:___lldiv@divisor)),c
  4470  000C52  362B               	rlcf	((c:___lldiv@divisor+1)),c
  4471  000C54  362C               	rlcf	((c:___lldiv@divisor+2)),c
  4472  000C56  362D               	rlcf	((c:___lldiv@divisor+3)),c
  4473  000C58  362E               	line	18
  4474                           	incf	((c:___lldiv@counter)),c
  4475  000C5A  2A33               	goto	l1603
  4476  000C5C  EF30  F006         	line	19
  4477                           	
  4478                           l224:
  4479  000C60                     	line	16
  4480                           	
  4481                           l1603:
  4482  000C60                     	
  4483                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  4484  000C60  AE2E               	goto	u1031
  4485  000C62  EF35  F006         	goto	u1030
  4486  000C66  EF37  F006         u1031:
  4487  000C6A                     	goto	l1601
  4488  000C6A  EF28  F006         u1030:
  4489  000C6E                     	goto	l1605
  4490  000C6E  EF3B  F006         	
  4491                           l226:
  4492  000C72                     	goto	l1605
  4493  000C72  EF3B  F006         	line	20
  4494                           	
  4495                           l227:
  4496  000C76                     	line	21
  4497                           	
  4498                           l1605:
  4499  000C76                     	bcf	status,0
  4500  000C76  90D8               	rlcf	((c:___lldiv@quotient)),c
  4501  000C78  362F               	rlcf	((c:___lldiv@quotient+1)),c
  4502  000C7A  3630               	rlcf	((c:___lldiv@quotient+2)),c
  4503  000C7C  3631               	rlcf	((c:___lldiv@quotient+3)),c
  4504  000C7E  3632               	line	22
  4505                           	
  4506                           l1607:
  4507  000C80                     		movf	((c:___lldiv@divisor)),c,w
  4508  000C80  502B               	subwf	((c:___lldiv@dividend)),c,w
  4509  000C82  5C27               	movf	((c:___lldiv@divisor+1)),c,w
  4510  000C84  502C               	subwfb	((c:___lldiv@dividend+1)),c,w
  4511  000C86  5828               	movf	((c:___lldiv@divisor+2)),c,w
  4512  000C88  502D               	subwfb	((c:___lldiv@dividend+2)),c,w
  4513  000C8A  5829               	movf	((c:___lldiv@divisor+3)),c,w
  4514  000C8C  502E               	subwfb	((c:___lldiv@dividend+3)),c,w
  4515  000C8E  582A               	btfss	status,0
  4516  000C90  A0D8               	goto	u1041
  4517  000C92  EF4D  F006         	goto	u1040
  4518  000C96  EF4F  F006         
  4519                           u1041:
  4520  000C9A                     	goto	l1613
  4521  000C9A  EF5A  F006         u1040:
  4522  000C9E                     	line	23
  4523                           	
  4524                           l1609:
  4525  000C9E                     	movf	((c:___lldiv@divisor)),c,w
  4526  000C9E  502B               	subwf	((c:___lldiv@dividend)),c
  4527  000CA0  5E27               	movf	((c:___lldiv@divisor+1)),c,w
  4528  000CA2  502C               	subwfb	((c:___lldiv@dividend+1)),c
  4529  000CA4  5A28               	movf	((c:___lldiv@divisor+2)),c,w
  4530  000CA6  502D               	subwfb	((c:___lldiv@dividend+2)),c
  4531  000CA8  5A29               	movf	((c:___lldiv@divisor+3)),c,w
  4532  000CAA  502E               	subwfb	((c:___lldiv@dividend+3)),c
  4533  000CAC  5A2A               	line	24
  4534                           	
  4535                           l1611:
  4536  000CAE                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  4537  000CAE  802F               	goto	l1613
  4538  000CB0  EF5A  F006         	line	25
  4539                           	
  4540                           l228:
  4541  000CB4                     	line	26
  4542                           	
  4543                           l1613:
  4544  000CB4                     	bcf	status,0
  4545  000CB4  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  4546  000CB6  322E               	rrcf	((c:___lldiv@divisor+2)),c
  4547  000CB8  322D               	rrcf	((c:___lldiv@divisor+1)),c
  4548  000CBA  322C               	rrcf	((c:___lldiv@divisor)),c
  4549  000CBC  322B               	line	27
  4550                           	
  4551                           l1615:
  4552  000CBE                     	decfsz	((c:___lldiv@counter)),c
  4553  000CBE  2E33               	
  4554                           	goto	l1605
  4555  000CC0  EF3B  F006         	goto	l223
  4556  000CC4  EF64  F006         	
  4557                           l229:
  4558  000CC8                     	line	28
  4559                           	
  4560                           l223:
  4561  000CC8                     	line	29
  4562                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  4563  000CC8  C02F  F027         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  4564  000CCC  C030  F028         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  4565  000CD0  C031  F029         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  4566  000CD4  C032  F02A         	line	30
  4567                           	
  4568                           l230:
  4569  000CD8                     	return	;funcret
  4570  000CD8  0012               	opt stack 0
  4571                           GLOBAL	__end_of___lldiv
  4572                           	__end_of___lldiv:
  4573  000CDA                     	signat	___lldiv,8316
  4574                           	global	_UART_Write_Text
  4575                           
  4576 ;; *************** function _UART_Write_Text *****************
  4577 ;; Defined at:
  4578 ;;		line 38 in file "uart.h"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  text            2    5[COMRAM] PTR unsigned char 
  4581 ;;		 -> STR_30(13), STR_13(15), STR_12(14), STR_11(14), 
  4582 ;;		 -> STR_10(4), STR_9(3), STR_8(5), STR_7(4), 
  4583 ;;		 -> STR_6(4), STR_5(4), STR_4(5), STR_3(4), 
  4584 ;;		 -> STR_2(6), STR_1(5), buffer(10), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  i               2   10[COMRAM] int 
  4587 ;;  toSend          1    9[COMRAM] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0
  4597 ;;      Params:         2       0
  4598 ;;      Locals:         3       0
  4599 ;;      Temps:          2       0
  4600 ;;      Totals:         7       0
  4601 ;;Total ram usage:        7 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    2
  4604 ;; This function calls:
  4605 ;;		_UART_Write_byte
  4606 ;; This function is called by:
  4607 ;;		_send_Status
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4612                           	file	"uart.h"
  4613                           	line	38
  4614                           global __ptext12
  4615                           __ptext12:
  4616  000CDA                     psect	text12
  4617                           	file	"uart.h"
  4618                           	line	38
  4619                           	global	__size_of_UART_Write_Text
  4620                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  4621  0000                     	
  4622                           _UART_Write_Text:
  4623  000CDA                     ;incstack = 0
  4624                           	opt	stack 27
  4625                           	line	40
  4626                           	
  4627                           l1541:
  4628  000CDA                     ;uart.h: 39: unsigned char toSend;;uart.h: 40: for (int i = 0; text[i] != '\0'; i++){
  4629                           	movlw	high(0)
  4630  000CDA  0E00               	movwf	((c:UART_Write_Text@i+1)),c
  4631  000CDC  6E2E               	movlw	low(0)
  4632  000CDE  0E00               	movwf	((c:UART_Write_Text@i)),c
  4633  000CE0  6E2D               	goto	l1549
  4634  000CE2  EF91  F006         	
  4635                           l97:
  4636  000CE6                     	line	41
  4637                           	
  4638                           l1543:
  4639  000CE6                     ;uart.h: 41: toSend = text[i];
  4640                           	movf	((c:UART_Write_Text@i)),c,w
  4641  000CE6  502D               	addwf	((c:UART_Write_Text@text)),c,w
  4642  000CE8  2428               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  4643  000CEA  6E2A               	movf	((c:UART_Write_Text@i+1)),c,w
  4644  000CEC  502E               	addwfc	((c:UART_Write_Text@text+1)),c,w
  4645  000CEE  2029               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  4646  000CF0  6E2B               	movff	??_UART_Write_Text+0+0,tblptrl
  4647  000CF2  C02A  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  4648  000CF6  C02B  FFF7         	clrf	tblptru
  4649  000CFA  6AF8               	
  4650                           	movlw	high __ramtop-1
  4651  000CFC  0E00               	cpfsgt	tblptrh
  4652  000CFE  64F7               	bra	u947
  4653  000D00  D003               	tblrd	*
  4654  000D02  0008               	
  4655                           	movf	tablat,w
  4656  000D04  50F5               	bra	u940
  4657  000D06  D005               u947:
  4658  000D08                     	movff	tblptrl,fsr2l
  4659  000D08  CFF6 FFD9          	movff	tblptrh,fsr2h
  4660  000D0C  CFF7 FFDA          	movf	indf2,w
  4661  000D10  50DF               u940:
  4662  000D12                     	movwf	((c:UART_Write_Text@toSend)),c
  4663  000D12  6E2C               	line	42
  4664                           	
  4665                           l1545:
  4666  000D14                     ;uart.h: 42: UART_Write_byte(toSend);
  4667                           	movf	((c:UART_Write_Text@toSend)),c,w
  4668  000D14  502C               	
  4669                           	call	_UART_Write_byte
  4670  000D16  ECAC  F008         	line	40
  4671                           	
  4672                           l1547:
  4673  000D1A                     	infsnz	((c:UART_Write_Text@i)),c
  4674  000D1A  4A2D               	incf	((c:UART_Write_Text@i+1)),c
  4675  000D1C  2A2E               	goto	l1549
  4676  000D1E  EF91  F006         	
  4677                           l96:
  4678  000D22                     	
  4679                           l1549:
  4680  000D22                     	movf	((c:UART_Write_Text@i)),c,w
  4681  000D22  502D               	addwf	((c:UART_Write_Text@text)),c,w
  4682  000D24  2428               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  4683  000D26  6E2A               	movf	((c:UART_Write_Text@i+1)),c,w
  4684  000D28  502E               	addwfc	((c:UART_Write_Text@text+1)),c,w
  4685  000D2A  2029               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  4686  000D2C  6E2B               	movff	??_UART_Write_Text+0+0,tblptrl
  4687  000D2E  C02A  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  4688  000D32  C02B  FFF7         	clrf	tblptru
  4689  000D36  6AF8               	
  4690                           	movlw	high __ramtop-1
  4691  000D38  0E00               	cpfsgt	tblptrh
  4692  000D3A  64F7               	bra	u957
  4693  000D3C  D003               	tblrd	*
  4694  000D3E  0008               	
  4695                           	movf	tablat,w
  4696  000D40  50F5               	bra	u950
  4697  000D42  D005               u957:
  4698  000D44                     	movff	tblptrl,fsr2l
  4699  000D44  CFF6 FFD9          	movff	tblptrh,fsr2h
  4700  000D48  CFF7 FFDA          	movf	indf2,w
  4701  000D4C  50DF               u950:
  4702  000D4E                     	iorlw	0
  4703  000D4E  0900               	btfss	status,2
  4704  000D50  A4D8               	goto	u961
  4705  000D52  EFAD  F006         	goto	u960
  4706  000D56  EFAF  F006         u961:
  4707  000D5A                     	goto	l1543
  4708  000D5A  EF73  F006         u960:
  4709  000D5E                     	goto	l99
  4710  000D5E  EFB1  F006         	
  4711                           l98:
  4712  000D62                     	line	44
  4713                           	
  4714                           l99:
  4715  000D62                     	return	;funcret
  4716  000D62  0012               	opt stack 0
  4717                           GLOBAL	__end_of_UART_Write_Text
  4718                           	__end_of_UART_Write_Text:
  4719  000D64                     	signat	_UART_Write_Text,4217
  4720                           	global	_UART_Write_byte
  4721                           
  4722 ;; *************** function _UART_Write_byte *****************
  4723 ;; Defined at:
  4724 ;;		line 33 in file "uart.h"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  data            1    wreg     unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  data            1    4[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0
  4738 ;;      Params:         0       0
  4739 ;;      Locals:         1       0
  4740 ;;      Temps:          0       0
  4741 ;;      Totals:         1       0
  4742 ;;Total ram usage:        1 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_UART_Write_Text
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4752                           	line	33
  4753                           global __ptext13
  4754                           __ptext13:
  4755  001158                     psect	text13
  4756                           	file	"uart.h"
  4757                           	line	33
  4758                           	global	__size_of_UART_Write_byte
  4759                           	__size_of_UART_Write_byte	equ	__end_of_UART_Write_byte-_UART_Write_byte
  4760  0000                     	
  4761                           _UART_Write_byte:
  4762  001158                     ;incstack = 0
  4763                           	opt	stack 27
  4764                           ;UART_Write_byte@data stored from wreg
  4765                           	movwf	((c:UART_Write_byte@data)),c
  4766  001158  6E27               	line	34
  4767                           	
  4768                           l1041:
  4769  00115A                     ;uart.h: 34: while (!TRMT);
  4770                           	goto	l90
  4771  00115A  EFAF  F008         	
  4772                           l91:
  4773  00115E                     	
  4774                           l90:
  4775  00115E                     	btfss	c:(32097/8),(32097)&7	;volatile
  4776  00115E  A2AC               	goto	u81
  4777  001160  EFB4  F008         	goto	u80
  4778  001164  EFB6  F008         u81:
  4779  001168                     	goto	l90
  4780  001168  EFAF  F008         u80:
  4781  00116C                     	goto	l1043
  4782  00116C  EFB8  F008         	
  4783                           l92:
  4784  001170                     	line	35
  4785                           	
  4786                           l1043:
  4787  001170                     ;uart.h: 35: TXREG = data;
  4788                           	movff	(c:UART_Write_byte@data),(c:4013)	;volatile
  4789  001170  C027  FFAD         	line	36
  4790                           	
  4791                           l93:
  4792  001174                     	return	;funcret
  4793  001174  0012               	opt stack 0
  4794                           GLOBAL	__end_of_UART_Write_byte
  4795                           	__end_of_UART_Write_byte:
  4796  001176                     	signat	_UART_Write_byte,4217
  4797                           	global	_ADC_Get
  4798                           
  4799 ;; *************** function _ADC_Get *****************
  4800 ;; Defined at:
  4801 ;;		line 37 in file "adc.h"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  advalue         2   11[COMRAM] unsigned int 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2    7[COMRAM] unsigned int 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0
  4815 ;;      Params:         2       0
  4816 ;;      Locals:         2       0
  4817 ;;      Temps:          2       0
  4818 ;;      Totals:         6       0
  4819 ;;Total ram usage:        6 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    2
  4822 ;; This function calls:
  4823 ;;		_delay_ms
  4824 ;; This function is called by:
  4825 ;;		_send_Status
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4829                           	file	"adc.h"
  4830                           	line	37
  4831                           global __ptext14
  4832                           __ptext14:
  4833  000FD8                     psect	text14
  4834                           	file	"adc.h"
  4835                           	line	37
  4836                           	global	__size_of_ADC_Get
  4837                           	__size_of_ADC_Get	equ	__end_of_ADC_Get-_ADC_Get
  4838  0000                     	
  4839                           _ADC_Get:
  4840  000FD8                     ;incstack = 0
  4841                           	opt	stack 27
  4842                           	line	38
  4843                           	
  4844                           l1559:
  4845  000FD8                     ;adc.h: 38: ADCON0bits.ADON = 0b1;
  4846                           	bsf	((c:4034)),c,0	;volatile
  4847  000FD8  80C2               	line	39
  4848                           	
  4849                           l1561:
  4850  000FDA                     ;adc.h: 39: delay_ms(10);
  4851                           	movlw	high(0Ah)
  4852  000FDA  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  4853  000FDC  6E28               	movlw	low(0Ah)
  4854  000FDE  0E0A               	movwf	((c:delay_ms@repeat_2)),c
  4855  000FE0  6E27               	call	_delay_ms	;wreg free
  4856  000FE2  EC30  F008         	line	40
  4857                           	
  4858                           l1563:
  4859  000FE6                     ;adc.h: 40: ADCON0bits.GO_DONE = 1;
  4860                           	bsf	((c:4034)),c,1	;volatile
  4861  000FE6  82C2               	line	41
  4862                           ;adc.h: 41: while(ADCON0bits.GO_DONE == 1);
  4863                           	goto	l115
  4864  000FE8  EFF6  F007         	
  4865                           l116:
  4866  000FEC                     	
  4867                           l115:
  4868  000FEC                     	btfsc	((c:4034)),c,1	;volatile
  4869  000FEC  B2C2               	goto	u981
  4870  000FEE  EFFB  F007         	goto	u980
  4871  000FF2  EFFD  F007         u981:
  4872  000FF6                     	goto	l115
  4873  000FF6  EFF6  F007         u980:
  4874  000FFA                     	goto	l1565
  4875  000FFA  EFFF  F007         	
  4876                           l117:
  4877  000FFE                     	line	42
  4878                           	
  4879                           l1565:
  4880  000FFE                     ;adc.h: 42: unsigned int advalue = (unsigned int)(((unsigned char)ADRESH << 8) + (unsign
                                 ed char)ADRESL);
  4881                           	movf	((c:4036)),c,w	;volatile
  4882  000FFE  50C4               	movwf	(??_ADC_Get+0+0+1)&0ffh,c
  4883  001000  6E2D               	clrf	(??_ADC_Get+0+0)&0ffh,c
  4884  001002  6A2C               	movf	((c:4035)),c,w	;volatile
  4885  001004  50C3               	addwf	(??_ADC_Get+0+0),c,w
  4886  001006  242C               	movwf	((c:ADC_Get@advalue)),c
  4887  001008  6E2E               	movlw	0
  4888  00100A  0E00               	addwfc	(??_ADC_Get+0+1),c,w
  4889  00100C  202D               	movwf	1+((c:ADC_Get@advalue)),c
  4890  00100E  6E2F               	line	43
  4891                           	
  4892                           l1567:
  4893  001010                     ;adc.h: 43: ADCON0bits.ADON = 0b0;
  4894                           	bcf	((c:4034)),c,0	;volatile
  4895  001010  90C2               	line	44
  4896                           	
  4897                           l1569:
  4898  001012                     ;adc.h: 44: return advalue;
  4899                           	movff	(c:ADC_Get@advalue),(c:?_ADC_Get)
  4900  001012  C02E  F02A         	movff	(c:ADC_Get@advalue+1),(c:?_ADC_Get+1)
  4901  001016  C02F  F02B         	goto	l118
  4902  00101A  EF0F  F008         	
  4903                           l1571:
  4904  00101E                     	line	45
  4905                           	
  4906                           l118:
  4907  00101E                     	return	;funcret
  4908  00101E  0012               	opt stack 0
  4909                           GLOBAL	__end_of_ADC_Get
  4910                           	__end_of_ADC_Get:
  4911  001020                     	signat	_ADC_Get,90
  4912                           	global	_delay_s
  4913                           
  4914 ;; *************** function _delay_s *****************
  4915 ;; Defined at:
  4916 ;;		line 22 in file "delay.h"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  repeat_3        2    7[COMRAM] int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0
  4930 ;;      Params:         2       0
  4931 ;;      Locals:         0       0
  4932 ;;      Temps:          0       0
  4933 ;;      Totals:         2       0
  4934 ;;Total ram usage:        2 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    2
  4937 ;; This function calls:
  4938 ;;		_delay_ms
  4939 ;; This function is called by:
  4940 ;;		_main
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4944                           	file	"delay.h"
  4945                           	line	22
  4946                           global __ptext15
  4947                           __ptext15:
  4948  001102                     psect	text15
  4949                           	file	"delay.h"
  4950                           	line	22
  4951                           	global	__size_of_delay_s
  4952                           	__size_of_delay_s	equ	__end_of_delay_s-_delay_s
  4953  0000                     	
  4954                           _delay_s:
  4955  001102                     ;incstack = 0
  4956                           	opt	stack 28
  4957                           	line	23
  4958                           	
  4959                           l1657:
  4960  001102                     ;delay.h: 23: while(repeat_3--){
  4961                           	goto	l1661
  4962  001102  EF8B  F008         	
  4963                           l78:
  4964  001106                     	line	24
  4965                           	
  4966                           l1659:
  4967  001106                     ;delay.h: 24: delay_ms(1000);
  4968                           	movlw	high(03E8h)
  4969  001106  0E03               	movwf	((c:delay_ms@repeat_2+1)),c
  4970  001108  6E28               	movlw	low(03E8h)
  4971  00110A  0EE8               	movwf	((c:delay_ms@repeat_2)),c
  4972  00110C  6E27               	call	_delay_ms	;wreg free
  4973  00110E  EC30  F008         	goto	l1661
  4974  001112  EF8B  F008         	line	25
  4975                           	
  4976                           l77:
  4977  001116                     	line	23
  4978                           	
  4979                           l1661:
  4980  001116                     	decf	((c:delay_s@repeat_3)),c
  4981  001116  062A               	btfss	status,0
  4982  001118  A0D8               	decf	((c:delay_s@repeat_3+1)),c
  4983  00111A  062B               		incf	((c:delay_s@repeat_3)),c,w
  4984  00111C  282A               	bnz	u1111
  4985  00111E  E106               	incf	((c:delay_s@repeat_3+1)),c,w
  4986  001120  282B               	btfss	status,2
  4987  001122  A4D8               	goto	u1111
  4988  001124  EF96  F008         	goto	u1110
  4989  001128  EF98  F008         
  4990                           u1111:
  4991  00112C                     	goto	l1659
  4992  00112C  EF83  F008         u1110:
  4993  001130                     	goto	l80
  4994  001130  EF9A  F008         	
  4995                           l79:
  4996  001134                     	line	26
  4997                           	
  4998                           l80:
  4999  001134                     	return	;funcret
  5000  001134  0012               	opt stack 0
  5001                           GLOBAL	__end_of_delay_s
  5002                           	__end_of_delay_s:
  5003  001136                     	signat	_delay_s,4217
  5004                           	global	_delay_ms
  5005                           
  5006 ;; *************** function _delay_ms *****************
  5007 ;; Defined at:
  5008 ;;		line 16 in file "delay.h"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  repeat_2        2    4[COMRAM] int 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0
  5022 ;;      Params:         2       0
  5023 ;;      Locals:         0       0
  5024 ;;      Temps:          1       0
  5025 ;;      Totals:         3       0
  5026 ;;Total ram usage:        3 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_delay_s
  5033 ;;		_ADC_Get
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           psect	text16,class=CODE,space=0,reloc=2,group=0
  5038                           	line	16
  5039                           global __ptext16
  5040                           __ptext16:
  5041  001060                     psect	text16
  5042                           	file	"delay.h"
  5043                           	line	16
  5044                           	global	__size_of_delay_ms
  5045                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  5046  0000                     	
  5047                           _delay_ms:
  5048  001060                     ;incstack = 0
  5049                           	opt	stack 27
  5050                           	line	17
  5051                           	
  5052                           l1505:
  5053  001060                     ;delay.h: 17: while(repeat_2--){
  5054                           	goto	l1509
  5055  001060  EF3C  F008         	
  5056                           l72:
  5057  001064                     	line	18
  5058                           	
  5059                           l1507:
  5060  001064                     ;delay.h: 18: _delay((unsigned long)((1)*(32000000/4000.0)));
  5061                           	opt asmopt_push
  5062                           opt asmopt_off
  5063                           movlw	11
  5064  001064  0E0B               movwf	(??_delay_ms+0+0)&0ffh,c,f
  5065  001066  6E29               	movlw	98
  5066  001068  0E62               u1637:
  5067  00106A                     decfsz	wreg,f
  5068  00106A  2EE8               	bra	u1637
  5069  00106C  D7FE               	decfsz	(??_delay_ms+0+0)&0ffh,c,f
  5070  00106E  2E29               	bra	u1637
  5071  001070  D7FC               	nop2
  5072  001072  D000               opt asmopt_pop
  5073                           
  5074                           	goto	l1509
  5075  001074  EF3C  F008         	line	19
  5076                           	
  5077                           l71:
  5078  001078                     	line	17
  5079                           	
  5080                           l1509:
  5081  001078                     	decf	((c:delay_ms@repeat_2)),c
  5082  001078  0627               	btfss	status,0
  5083  00107A  A0D8               	decf	((c:delay_ms@repeat_2+1)),c
  5084  00107C  0628               		incf	((c:delay_ms@repeat_2)),c,w
  5085  00107E  2827               	bnz	u901
  5086  001080  E106               	incf	((c:delay_ms@repeat_2+1)),c,w
  5087  001082  2828               	btfss	status,2
  5088  001084  A4D8               	goto	u901
  5089  001086  EF47  F008         	goto	u900
  5090  00108A  EF49  F008         
  5091                           u901:
  5092  00108E                     	goto	l1507
  5093  00108E  EF32  F008         u900:
  5094  001092                     	goto	l74
  5095  001092  EF4B  F008         	
  5096                           l73:
  5097  001096                     	line	20
  5098                           	
  5099                           l74:
  5100  001096                     	return	;funcret
  5101  001096  0012               	opt stack 0
  5102                           GLOBAL	__end_of_delay_ms
  5103                           	__end_of_delay_ms:
  5104  001098                     	signat	_delay_ms,4217
  5105                           	global	_UART_clean_buffer
  5106                           
  5107 ;; *************** function _UART_clean_buffer *****************
  5108 ;; Defined at:
  5109 ;;		line 46 in file "uart.h"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0
  5123 ;;      Params:         0       0
  5124 ;;      Locals:         0       0
  5125 ;;      Temps:          0       0
  5126 ;;      Totals:         0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    2
  5130 ;; This function calls:
  5131 ;;		_memset
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           psect	text17,class=CODE,space=0,reloc=2,group=0
  5137                           	file	"uart.h"
  5138                           	line	46
  5139                           global __ptext17
  5140                           __ptext17:
  5141  001136                     psect	text17
  5142                           	file	"uart.h"
  5143                           	line	46
  5144                           	global	__size_of_UART_clean_buffer
  5145                           	__size_of_UART_clean_buffer	equ	__end_of_UART_clean_buffer-_UART_clean_buffer
  5146  0000                     	
  5147                           _UART_clean_buffer:
  5148  001136                     ;incstack = 0
  5149                           	opt	stack 28
  5150                           	line	47
  5151                           	
  5152                           l1663:
  5153  001136                     ;uart.h: 47: memset(UART_buffer, 45, sizeof (UART_buffer));
  5154                           		movlw	low(_UART_buffer)
  5155  001136  0E09               	movwf	((c:memset@p1)),c
  5156  001138  6E27               	movlw	high(_UART_buffer)
  5157  00113A  0E00               	movwf	((c:memset@p1+1)),c
  5158  00113C  6E28               
  5159                           	movlw	high(02Dh)
  5160  00113E  0E00               	movwf	((c:memset@c+1)),c
  5161  001140  6E2A               	movlw	low(02Dh)
  5162  001142  0E2D               	movwf	((c:memset@c)),c
  5163  001144  6E29               	movlw	high(010h)
  5164  001146  0E00               	movwf	((c:memset@n+1)),c
  5165  001148  6E2C               	movlw	low(010h)
  5166  00114A  0E10               	movwf	((c:memset@n)),c
  5167  00114C  6E2B               	call	_memset	;wreg free
  5168  00114E  EC10  F008         	line	48
  5169                           	
  5170                           l1665:
  5171  001152                     ;uart.h: 48: UART_Buffer_Ptr = 0;
  5172                           	movlw	low(0)
  5173  001152  0E00               	movwf	((c:_UART_Buffer_Ptr)),c
  5174  001154  6E08               	line	49
  5175                           	
  5176                           l102:
  5177  001156                     	return	;funcret
  5178  001156  0012               	opt stack 0
  5179                           GLOBAL	__end_of_UART_clean_buffer
  5180                           	__end_of_UART_clean_buffer:
  5181  001158                     	signat	_UART_clean_buffer,89
  5182                           	global	_memset
  5183                           
  5184 ;; *************** function _memset *****************
  5185 ;; Defined at:
  5186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  p1              2    4[COMRAM] PTR void 
  5189 ;;		 -> UART_buffer(16), 
  5190 ;;  c               2    6[COMRAM] int 
  5191 ;;  n               2    8[COMRAM] unsigned int 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  p               2   10[COMRAM] PTR unsigned char 
  5194 ;;		 -> UART_buffer(16), 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    4[COMRAM] PTR void 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0
  5204 ;;      Params:         6       0
  5205 ;;      Locals:         2       0
  5206 ;;      Temps:          0       0
  5207 ;;      Totals:         8       0
  5208 ;;Total ram usage:        8 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_UART_clean_buffer
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           psect	text18,class=CODE,space=0,reloc=2,group=2
  5218                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5219                           	line	8
  5220                           global __ptext18
  5221                           __ptext18:
  5222  001020                     psect	text18
  5223                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  5224                           	line	8
  5225                           	global	__size_of_memset
  5226                           	__size_of_memset	equ	__end_of_memset-_memset
  5227  0000                     	
  5228                           _memset:
  5229  001020                     ;incstack = 0
  5230                           	opt	stack 28
  5231                           	line	18
  5232                           	
  5233                           l1551:
  5234  001020                     		movff	(c:memset@p1),(c:memset@p)
  5235  001020  C027  F02D         	movff	(c:memset@p1+1),(c:memset@p+1)
  5236  001024  C028  F02E         
  5237                           	line	19
  5238                           	goto	l1557
  5239  001028  EF20  F008         	
  5240                           l873:
  5241  00102C                     	line	20
  5242                           	
  5243                           l1553:
  5244  00102C                     	movff	(c:memset@p),fsr2l
  5245  00102C  C02D  FFD9         	movff	(c:memset@p+1),fsr2h
  5246  001030  C02E  FFDA         	movff	(c:memset@c),indf2
  5247  001034  C029  FFDF         
  5248                           	
  5249                           l1555:
  5250  001038                     	infsnz	((c:memset@p)),c
  5251  001038  4A2D               	incf	((c:memset@p+1)),c
  5252  00103A  2A2E               	goto	l1557
  5253  00103C  EF20  F008         	
  5254                           l872:
  5255  001040                     	line	19
  5256                           	
  5257                           l1557:
  5258  001040                     	decf	((c:memset@n)),c
  5259  001040  062B               	btfss	status,0
  5260  001042  A0D8               	decf	((c:memset@n+1)),c
  5261  001044  062C               		incf	((c:memset@n)),c,w
  5262  001046  282B               	bnz	u971
  5263  001048  E106               	incf	((c:memset@n+1)),c,w
  5264  00104A  282C               	btfss	status,2
  5265  00104C  A4D8               	goto	u971
  5266  00104E  EF2B  F008         	goto	u970
  5267  001052  EF2D  F008         
  5268                           u971:
  5269  001056                     	goto	l1553
  5270  001056  EF16  F008         u970:
  5271  00105A                     	goto	l875
  5272  00105A  EF2F  F008         	
  5273                           l874:
  5274  00105E                     	line	22
  5275                           ;	Return value of _memset is never used
  5276                           	
  5277                           l875:
  5278  00105E                     	return	;funcret
  5279  00105E  0012               	opt stack 0
  5280                           GLOBAL	__end_of_memset
  5281                           	__end_of_memset:
  5282  001060                     	signat	_memset,12410
  5283                           	global	_UART_Init
  5284                           
  5285 ;; *************** function _UART_Init *****************
  5286 ;; Defined at:
  5287 ;;		line 12 in file "uart.h"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0
  5301 ;;      Params:         0       0
  5302 ;;      Locals:         0       0
  5303 ;;      Temps:          0       0
  5304 ;;      Totals:         0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5315                           	file	"uart.h"
  5316                           	line	12
  5317                           global __ptext19
  5318                           __ptext19:
  5319  001176                     psect	text19
  5320                           	file	"uart.h"
  5321                           	line	12
  5322                           	global	__size_of_UART_Init
  5323                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  5324  0000                     	
  5325                           _UART_Init:
  5326  001176                     ;incstack = 0
  5327                           	opt	stack 29
  5328                           	line	14
  5329                           	
  5330                           l1197:
  5331  001176                     ;uart.h: 14: PIE1bits.RCIE = 0b1;
  5332                           	bsf	((c:3997)),c,5	;volatile
  5333  001176  8A9D               	line	15
  5334                           ;uart.h: 15: INTCONbits.PEIE = 0b1;
  5335                           	bsf	((c:4082)),c,6	;volatile
  5336  001178  8CF2               	line	16
  5337                           ;uart.h: 16: INTCONbits.GIE = 0b1;
  5338                           	bsf	((c:4082)),c,7	;volatile
  5339  00117A  8EF2               	line	19
  5340                           ;uart.h: 19: RCSTAbits.SPEN = 0b1;
  5341                           	bsf	((c:4011)),c,7	;volatile
  5342  00117C  8EAB               	line	20
  5343                           ;uart.h: 20: RCSTAbits.RX9 = 0b0;
  5344                           	bcf	((c:4011)),c,6	;volatile
  5345  00117E  9CAB               	line	21
  5346                           ;uart.h: 21: RCSTAbits.CREN = 0b1;
  5347                           	bsf	((c:4011)),c,4	;volatile
  5348  001180  88AB               	line	23
  5349                           ;uart.h: 23: TXSTAbits.TX9 = 0b0;
  5350                           	bcf	((c:4012)),c,6	;volatile
  5351  001182  9CAC               	line	24
  5352                           ;uart.h: 24: TXSTAbits.SYNC = 0b0;
  5353                           	bcf	((c:4012)),c,4	;volatile
  5354  001184  98AC               	line	25
  5355                           ;uart.h: 25: TXSTAbits.BRGH = 0b0;
  5356                           	bcf	((c:4012)),c,2	;volatile
  5357  001186  94AC               	line	26
  5358                           ;uart.h: 26: TXSTAbits.TXEN = 0b1;
  5359                           	bsf	((c:4012)),c,5	;volatile
  5360  001188  8AAC               	line	28
  5361                           ;uart.h: 28: BAUDCONbits.BRG16 = 0b0;
  5362                           	bcf	((c:4024)),c,3	;volatile
  5363  00118A  96B8               	line	29
  5364                           ;uart.h: 29: BAUDCONbits.ABDEN = 0b0;
  5365                           	bcf	((c:4024)),c,0	;volatile
  5366  00118C  90B8               	line	30
  5367                           	
  5368                           l1199:
  5369  00118E                     ;uart.h: 30: SPBRG = 51;
  5370                           	movlw	low(033h)
  5371  00118E  0E33               	movwf	((c:4015)),c	;volatile
  5372  001190  6EAF               	line	31
  5373                           	
  5374                           l87:
  5375  001192                     	return	;funcret
  5376  001192  0012               	opt stack 0
  5377                           GLOBAL	__end_of_UART_Init
  5378                           	__end_of_UART_Init:
  5379  001194                     	signat	_UART_Init,89
  5380                           	global	_IC_Init
  5381                           
  5382 ;; *************** function _IC_Init *****************
  5383 ;; Defined at:
  5384 ;;		line 2 in file "ic.h"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		None
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0
  5398 ;;      Params:         0       0
  5399 ;;      Locals:         0       0
  5400 ;;      Temps:          0       0
  5401 ;;      Totals:         0       0
  5402 ;;Total ram usage:        0 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           psect	text20,class=CODE,space=0,reloc=2,group=0
  5412                           	file	"ic.h"
  5413                           	line	2
  5414                           global __ptext20
  5415                           __ptext20:
  5416  001098                     psect	text20
  5417                           	file	"ic.h"
  5418                           	line	2
  5419                           	global	__size_of_IC_Init
  5420                           	__size_of_IC_Init	equ	__end_of_IC_Init-_IC_Init
  5421  0000                     	
  5422                           _IC_Init:
  5423  001098                     ;incstack = 0
  5424                           	opt	stack 29
  5425                           	line	4
  5426                           	
  5427                           l1207:
  5428  001098                     ;ic.h: 4: TRISAbits.RA0 = 0b0;
  5429                           	bcf	((c:3986)),c,0	;volatile
  5430  001098  9092               	line	5
  5431                           ;ic.h: 5: TRISAbits.RA1 = 0b1;
  5432                           	bsf	((c:3986)),c,1	;volatile
  5433  00109A  8292               	line	6
  5434                           ;ic.h: 6: TRISAbits.RA2 = 0b1;
  5435                           	bsf	((c:3986)),c,2	;volatile
  5436  00109C  8492               	line	7
  5437                           ;ic.h: 7: TRISAbits.RA3 = 0b1;
  5438                           	bsf	((c:3986)),c,3	;volatile
  5439  00109E  8692               	line	8
  5440                           ;ic.h: 8: TRISAbits.RA4 = 0b1;
  5441                           	bsf	((c:3986)),c,4	;volatile
  5442  0010A0  8892               	line	10
  5443                           ;ic.h: 10: TRISAbits.RA6 = 0b1;
  5444                           	bsf	((c:3986)),c,6	;volatile
  5445  0010A2  8C92               	line	11
  5446                           ;ic.h: 11: TRISAbits.RA7 = 0b1;
  5447                           	bsf	((c:3986)),c,7	;volatile
  5448  0010A4  8E92               	line	13
  5449                           ;ic.h: 13: TRISBbits.RB0 = 0b0;
  5450                           	bcf	((c:3987)),c,0	;volatile
  5451  0010A6  9093               	line	14
  5452                           ;ic.h: 14: TRISBbits.RB1 = 0b0;
  5453                           	bcf	((c:3987)),c,1	;volatile
  5454  0010A8  9293               	line	15
  5455                           ;ic.h: 15: TRISBbits.RB2 = 0b1;
  5456                           	bsf	((c:3987)),c,2	;volatile
  5457  0010AA  8493               	line	16
  5458                           ;ic.h: 16: TRISBbits.RB3 = 0b0;
  5459                           	bcf	((c:3987)),c,3	;volatile
  5460  0010AC  9693               	line	17
  5461                           ;ic.h: 17: TRISBbits.RB4 = 0b0;
  5462                           	bcf	((c:3987)),c,4	;volatile
  5463  0010AE  9893               	line	18
  5464                           ;ic.h: 18: TRISBbits.RB5 = 0b0;
  5465                           	bcf	((c:3987)),c,5	;volatile
  5466  0010B0  9A93               	line	21
  5467                           ;ic.h: 21: ADCON1bits.PCFG3 = 0b0;
  5468                           	bcf	((c:4033)),c,3	;volatile
  5469  0010B2  96C1               	line	22
  5470                           ;ic.h: 22: ADCON1bits.PCFG2 = 0b1;
  5471                           	bsf	((c:4033)),c,2	;volatile
  5472  0010B4  84C1               	line	23
  5473                           ;ic.h: 23: ADCON1bits.PCFG1 = 0b1;
  5474                           	bsf	((c:4033)),c,1	;volatile
  5475  0010B6  82C1               	line	24
  5476                           ;ic.h: 24: ADCON1bits.PCFG0 = 0b1;
  5477                           	bsf	((c:4033)),c,0	;volatile
  5478  0010B8  80C1               	line	27
  5479                           ;ic.h: 27: OSCCONbits.IRCF0 = 0b1;
  5480                           	bsf	((c:4051)),c,4	;volatile
  5481  0010BA  88D3               	line	28
  5482                           ;ic.h: 28: OSCCONbits.IRCF1 = 0b1;
  5483                           	bsf	((c:4051)),c,5	;volatile
  5484  0010BC  8AD3               	line	29
  5485                           ;ic.h: 29: OSCCONbits.IRCF2 = 0b1;
  5486                           	bsf	((c:4051)),c,6	;volatile
  5487  0010BE  8CD3               	line	32
  5488                           ;ic.h: 32: OSCTUNEbits.PLLEN = 1;
  5489                           	bsf	((c:3995)),c,6	;volatile
  5490  0010C0  8C9B               	line	34
  5491                           ;ic.h: 34: T0CONbits.TMR0ON = 0;
  5492                           	bcf	((c:4053)),c,7	;volatile
  5493  0010C2  9ED5               	line	37
  5494                           ;ic.h: 37: LATBbits.LATB0 = 0b0;
  5495                           	bcf	((c:3978)),c,0	;volatile
  5496  0010C4  908A               	line	38
  5497                           ;ic.h: 38: LATBbits.LATB1 = 0b0;
  5498                           	bcf	((c:3978)),c,1	;volatile
  5499  0010C6  928A               	line	40
  5500                           ;ic.h: 40: LATBbits.LATB4 = 0b0;
  5501                           	bcf	((c:3978)),c,4	;volatile
  5502  0010C8  988A               	line	41
  5503                           ;ic.h: 41: LATBbits.LATB5 = 0b0;
  5504                           	bcf	((c:3978)),c,5	;volatile
  5505  0010CA  9A8A               	line	42
  5506                           	
  5507                           l121:
  5508  0010CC                     	return	;funcret
  5509  0010CC  0012               	opt stack 0
  5510                           GLOBAL	__end_of_IC_Init
  5511                           	__end_of_IC_Init:
  5512  0010CE                     	signat	_IC_Init,89
  5513                           	global	_ADC_Init
  5514                           
  5515 ;; *************** function _ADC_Init *****************
  5516 ;; Defined at:
  5517 ;;		line 8 in file "adc.h"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		None
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0
  5531 ;;      Params:         0       0
  5532 ;;      Locals:         0       0
  5533 ;;      Temps:          0       0
  5534 ;;      Totals:         0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_main
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           psect	text21,class=CODE,space=0,reloc=2,group=0
  5545                           	file	"adc.h"
  5546                           	line	8
  5547                           global __ptext21
  5548                           __ptext21:
  5549  001194                     psect	text21
  5550                           	file	"adc.h"
  5551                           	line	8
  5552                           	global	__size_of_ADC_Init
  5553                           	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  5554  0000                     	
  5555                           _ADC_Init:
  5556  001194                     ;incstack = 0
  5557                           	opt	stack 29
  5558                           	line	11
  5559                           	
  5560                           l1205:
  5561  001194                     ;adc.h: 11: ADCON0bits.CHS0 = 0b1;
  5562                           	bsf	((c:4034)),c,2	;volatile
  5563  001194  84C2               	line	12
  5564                           ;adc.h: 12: ADCON0bits.CHS1 = 0b1;
  5565                           	bsf	((c:4034)),c,3	;volatile
  5566  001196  86C2               	line	18
  5567                           ;adc.h: 18: ADCON1bits.VCFG0 = 0b0;
  5568                           	bcf	((c:4033)),c,4	;volatile
  5569  001198  98C1               	line	21
  5570                           ;adc.h: 21: ADCON1bits.PCFG3 = 0b0;
  5571                           	bcf	((c:4033)),c,3	;volatile
  5572  00119A  96C1               	line	24
  5573                           ;adc.h: 24: ADCON2bits.ADFM = 0b1;
  5574                           	bsf	((c:4032)),c,7	;volatile
  5575  00119C  8EC0               	line	27
  5576                           ;adc.h: 27: ADCON2bits.ACQT2 = 0b1;
  5577                           	bsf	((c:4032)),c,5	;volatile
  5578  00119E  8AC0               	line	28
  5579                           ;adc.h: 28: ADCON2bits.ACQT1 = 0b0;
  5580                           	bcf	((c:4032)),c,4	;volatile
  5581  0011A0  98C0               	line	29
  5582                           ;adc.h: 29: ADCON2bits.ACQT1 = 0b0;
  5583                           	bcf	((c:4032)),c,4	;volatile
  5584  0011A2  98C0               	line	32
  5585                           ;adc.h: 32: ADCON2bits.ADCS2 = 0b0;
  5586                           	bcf	((c:4032)),c,2	;volatile
  5587  0011A4  94C0               	line	33
  5588                           ;adc.h: 33: ADCON2bits.ADCS1 = 0b0;
  5589                           	bcf	((c:4032)),c,1	;volatile
  5590  0011A6  92C0               	line	34
  5591                           ;adc.h: 34: ADCON2bits.ADCS0 = 0b0;
  5592                           	bcf	((c:4032)),c,0	;volatile
  5593  0011A8  90C0               	line	35
  5594                           	
  5595                           l112:
  5596  0011AA                     	return	;funcret
  5597  0011AA  0012               	opt stack 0
  5598                           GLOBAL	__end_of_ADC_Init
  5599                           	__end_of_ADC_Init:
  5600  0011AC                     	signat	_ADC_Init,89
  5601                           	global	_UART_add_buffer
  5602                           
  5603 ;; *************** function _UART_add_buffer *****************
  5604 ;; Defined at:
  5605 ;;		line 51 in file "uart.h"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0
  5619 ;;      Params:         0       0
  5620 ;;      Locals:         0       0
  5621 ;;      Temps:          4       0
  5622 ;;      Totals:         4       0
  5623 ;;Total ram usage:        4 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		Interrupt level 2
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           psect	intcode,class=CODE,space=0,reloc=2
  5632                           global __pintcode
  5633                           __pintcode:
  5634  000008                     psect	intcode
  5635                           	file	"uart.h"
  5636                           	line	51
  5637                           	global	__size_of_UART_add_buffer
  5638                           	__size_of_UART_add_buffer	equ	__end_of_UART_add_buffer-_UART_add_buffer
  5639  0000                     	
  5640                           _UART_add_buffer:
  5641  000008                     ;incstack = 0
  5642                           	opt	stack 26
  5643                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  5644  000008  8248               	movff	fsr2l+0,??_UART_add_buffer+0
  5645  00000A  CFD9 F023          	movff	fsr2h+0,??_UART_add_buffer+1
  5646  00000E  CFDA F024          	movff	prodl+0,??_UART_add_buffer+2
  5647  000012  CFF3 F025          	movff	prodh+0,??_UART_add_buffer+3
  5648  000016  CFF4 F026          	line	54
  5649                           	
  5650                           i2l1267:
  5651  00001A                     ;uart.h: 54: LATBbits.LATB3 = 1;
  5652                           	bsf	((c:3978)),c,3	;volatile
  5653  00001A  868A               	line	55
  5654                           ;uart.h: 55: if (PIR1bits.RCIF) {
  5655                           	btfss	((c:3998)),c,5	;volatile
  5656  00001C  AA9E               	goto	i2u39_41
  5657  00001E  EF13  F000         	goto	i2u39_40
  5658  000022  EF15  F000         i2u39_41:
  5659  000026                     	goto	i2l1279
  5660  000026  EF31  F000         i2u39_40:
  5661  00002A                     	line	64
  5662                           	
  5663                           i2l1269:
  5664  00002A                     ;uart.h: 64: UART_buffer[UART_Buffer_Ptr] = RCREG;
  5665                           	movf	((c:_UART_Buffer_Ptr)),c,w
  5666  00002A  5008               	mullw	01h
  5667  00002C  0D01               	movlw	low(_UART_buffer)
  5668  00002E  0E09               	addwf	(prodl),c,w
  5669  000030  24F3               	movwf	c:fsr2l
  5670  000032  6ED9               	movlw	high(_UART_buffer)
  5671  000034  0E00               	addwfc	prod+1,w
  5672  000036  20F4               	movwf	1+c:fsr2l
  5673  000038  6EDA               	movff	(c:4014),indf2	;volatile
  5674  00003A  CFAE FFDF          
  5675                           	line	65
  5676                           	
  5677                           i2l1271:
  5678  00003E                     ;uart.h: 65: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr + (unsigne
                                 d char)1);
  5679                           	incf	((c:_UART_Buffer_Ptr)),c,w
  5680  00003E  2808               	movwf	((c:_UART_Buffer_Ptr)),c
  5681  000040  6E08               	line	66
  5682                           	
  5683                           i2l1273:
  5684  000042                     ;uart.h: 66: if (UART_Buffer_Ptr == 16)
  5685                           		movlw	16
  5686  000042  0E10               	xorwf	((c:_UART_Buffer_Ptr)),c,w
  5687  000044  1808               	btfss	status,2
  5688  000046  A4D8               	goto	i2u40_41
  5689  000048  EF28  F000         	goto	i2u40_40
  5690  00004C  EF2A  F000         
  5691                           i2u40_41:
  5692  000050                     	goto	i2l1277
  5693  000050  EF2E  F000         i2u40_40:
  5694  000054                     	line	67
  5695                           	
  5696                           i2l1275:
  5697  000054                     ;uart.h: 67: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr - (unsigne
                                 d char)1);
  5698                           	decf	((c:_UART_Buffer_Ptr)),c,w
  5699  000054  0408               	movwf	((c:_UART_Buffer_Ptr)),c
  5700  000056  6E08               	goto	i2l1277
  5701  000058  EF2E  F000         	
  5702                           i2l108:
  5703  00005C                     	line	69
  5704                           	
  5705                           i2l1277:
  5706  00005C                     ;uart.h: 69: PIR1bits.RCIF = 0;
  5707                           	bcf	((c:3998)),c,5	;volatile
  5708  00005C  9A9E               	goto	i2l1279
  5709  00005E  EF31  F000         	line	71
  5710                           	
  5711                           i2l107:
  5712  000062                     	line	72
  5713                           	
  5714                           i2l1279:
  5715  000062                     ;uart.h: 71: };uart.h: 72: LATBbits.LATB3 = 0;
  5716                           	bcf	((c:3978)),c,3	;volatile
  5717  000062  968A               	line	73
  5718                           	
  5719                           i2l109:
  5720  000064                     	movff	??_UART_add_buffer+3,prodh+0
  5721  000064  C026  FFF4         	movff	??_UART_add_buffer+2,prodl+0
  5722  000068  C025  FFF3         	movff	??_UART_add_buffer+1,fsr2h+0
  5723  00006C  C024  FFDA         	movff	??_UART_add_buffer+0,fsr2l+0
  5724  000070  C023  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5725  000074  9248               	retfie f
  5726  000076  0011               	opt stack 0
  5727                           GLOBAL	__end_of_UART_add_buffer
  5728                           	__end_of_UART_add_buffer:
  5729  000078                     	signat	_UART_add_buffer,89
  5730                           psect	smallconst
  5731                           	db 0	; dummy byte at the end
  5732  0001F1  00                 	global	__smallconst
  5733                           	global	__mediumconst
  5734                           	GLOBAL	__activetblptr
  5735                           __activetblptr	EQU	2
  5736  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5737                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5738                           	GLOBAL	__Lrparam
  5739                           	FNCONF	rparam,??,?
  5740                           	GLOBAL	___rparam_used
  5741                           	___rparam_used EQU 1
  5742  0000                     	GLOBAL	___param_bank
  5743                           	___param_bank EQU 0
  5744  0000                     GLOBAL	__Lparam, __Hparam
  5745                           GLOBAL	__Lrparam, __Hrparam
  5746                           __Lparam	EQU	__Lrparam
  5747  0000                     __Hparam	EQU	__Hrparam
  5748  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  5749                           	global	btemp
  5750                           btemp:
  5751  000048                     	ds	1
  5752  000048                     	global	int$flags
  5753                           	int$flags	set btemp
  5754  0000                     	global	wtemp8
  5755                           	wtemp8 set btemp+1
  5756  0000                     	global	ttemp5
  5757                           	ttemp5 set btemp+1
  5758  0000                     	global	ttemp6
  5759                           	ttemp6 set btemp+4
  5760  0000                     	global	ttemp7
  5761                           	ttemp7 set btemp+8
  5762  0000                     	end


Data Sizes:
    Strings     240
    Constant    0
    Data        2
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      71
    BANK0           128      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_29(CODE[14]), STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[11]), 
		 -> STR_25(CODE[9]), STR_24(CODE[7]), STR_23(CODE[13]), STR_22(CODE[11]), 
		 -> STR_21(CODE[14]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[10]), 
		 -> STR_17(CODE[11]), STR_16(CODE[9]), STR_15(CODE[11]), STR_14(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
		 -> STR_30(CODE[13]), STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), 
		 -> STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), 
		 -> STR_2(CODE[6]), STR_1(CODE[5]), buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_send_Status
    _strstr->_strncmp
    _strncmp->_strlen
    _send_Status->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_Write_Text->_UART_Write_byte
    _ADC_Get->_delay_ms
    _delay_s->_delay_ms
    _UART_clean_buffer->_memset

Critical Paths under _UART_add_buffer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_add_buffer in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10881
                                             32 COMRAM     2     2      0
                           _ADC_Init
                            _IC_Init
                          _UART_Init
                    _UART_Write_Text
                  _UART_clean_buffer
                           _delay_ms
                            _delay_s
                        _send_Status
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    3377
                                             19 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     362
                                             10 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _send_Status                                          4     4      0    4326
                                             28 COMRAM     4     4      0
                            _ADC_Get
                    _UART_Write_Text
                            ___lldiv
                             ___lmul
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             20 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                             11 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      7     5      2    1268
                                              5 COMRAM     7     5      2
                    _UART_Write_byte
 ---------------------------------------------------------------------------------
 (3) _UART_Write_byte                                      1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get                                              6     4      2     653
                                              7 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     956
                                              7 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             3     1      2     630
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_clean_buffer                                    0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IC_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _UART_add_buffer                                      4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IC_Init
   _UART_Init
   _UART_Write_Text
     _UART_Write_byte
   _UART_clean_buffer
     _memset
   _delay_ms
   _delay_s
     _delay_ms
   _send_Status
     _ADC_Get
       _delay_ms
     _UART_Write_Text
       _UART_Write_byte
     ___lldiv
     ___lmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _UART_add_buffer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     22      47       1       56.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47       5        0.0%
DATA                 0      0      47       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 25 00:45:27 2018

                        l71 1078                          l72 1064                          l80 1134  
                        l73 1096                          l74 1096                          l90 115E  
                        l91 115E                          l92 1170                          l77 1116  
                        l93 1174                          l78 1106                          l87 1192  
                        l79 1134                          l96 0D22                          l97 0CE6  
                        l98 0D62                          l99 0D62                          u80 116C  
                        u81 1168                 __CFG_BORV$3 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                         l102 1156                         l112 11AA  
                       l121 10CC                         l115 0FEC                         l116 0FEC  
                       l117 0FFE                         l205 0E78                         l118 101E  
                       l230 0CD8                         l206 0E9A                         l150 09C8  
                       l142 0910                         l223 0CC8                         l207 0EC4  
                       l151 09D8                         l143 0920                         l224 0C60  
                       l208 0ED4                         l152 09D8                         l144 093E  
                       l160 0364                         l225 0C50                         l145 094E  
                       l161 065A                         l226 0C72                         l146 096C  
                       l170 05CE                         l162 03E8                         l227 0C76  
                       l147 097C                         l163 0656                         l171 0646  
                       l228 0CB4                         l148 099A                         l180 0778  
                       l172 0642                         l164 045C                         l229 0CC8  
                       l149 09AA                         l181 0774                         l173 06BC  
                       l165 0652                         l157 027E                         l190 084A  
                       l182 0782                         l174 06B2                         l166 04D0  
                       l158 02F0                         l191 085A                         l183 07CE  
                       l175 06BC                         l159 065E                         l167 064E  
                       l192 085E                         l184 07D8                         l176 07D6  
                       l168 055A                         l193 085E                         l185 07EC  
                       l177 07D2                         l169 064A                         l186 07EE  
                       l178 078A                         l187 0802                         l179 0786  
                       l188 0808                         l189 0856                         l900 0F3A  
                       l901 0F62                         l902 0F82                         l910 0C20  
                       l911 0C14                         l680 0DD2                         l681 0DE2  
                       l905 0BF6                         l682 0DEA                         l690 0E4A  
                       l906 0B6E                         l675 0DE2                         l691 0E5A  
                       l907 0BEA                         l676 0D92                         l692 0E62  
                       l860 0FB6                         l677 0D86                         l685 0E5A  
                       l861 0FD6                         l909 0BB2                         l678 0DA4  
                       l686 0E12                         l679 0DA8                         l687 0E06  
                       l872 1040                         l688 0E24                         l864 09E6  
                       l873 102C                         l689 0E28                         l865 0A1C  
                       l874 105E                         l866 0A32                         l890 0B5C  
                       l875 105E                         l867 0A7A                         l868 0AA6  
                       l884 0B2A                         l869 0AAE                         l893 0ED6  
                       l885 0AB4                         l894 0F00                         l886 0AFE  
                       l895 0F2C                         l887 0B68                         l896 0F20  
                       l889 0B58                         l899 0F42                __CFG_CPB$OFF 000000  
              __CFG_CPD$OFF 000000                         u900 1092                         u901 108E  
                       u910 0A18                         u911 0A14                         u840 0D7E  
                       u920 0A76                         u841 0D7A                         u921 0A72  
                       u850 0DA0                         u930 0AA2                         u851 0D9C  
                       u931 0A9E                         u940 0D12                         u860 0DC4  
                       u861 0DC0                         u950 0D4E                         u870 0DFE  
                       u871 0DFA                         u960 0D5E                         u880 0E20  
                       u961 0D5A                         u881 0E1C                         u970 105A  
                       u890 0E3E                         u971 1056                         u947 0D08  
                       u891 0E3A                         u980 0FFA                         u981 0FF6  
                       u957 0D44                         u990 0F9A                         u991 0F96  
           __end_of_ADC_Get 1020                         prod 000FF3                         wreg 000FE8  
         _UART_clean_buffer 1136                __CFG_WDT$OFF 000000                        l1041 115A  
                      l1043 1170                        l1205 1194                        l1207 1098  
                      l1501 0E4A                        l1503 0E50                        l1511 09DA  
                      l1505 1060                        l1601 0C50                        l1521 0A28  
                      l1513 09E6                        l1507 1064                        l1611 0CAE  
                      l1603 0C60                        l1531 0A7E                        l1523 0A32  
                      l1515 0A02                        l1197 1176                        l1509 1078  
                      l1541 0CDA                        l1613 0CB4                        l1605 0C76  
                      l1533 0A8A                        l1525 0A4A                        l1517 0A06  
                      l1701 09C8                        l1621 0F42                        l1199 118E  
                      l1551 1020                        l1543 0CE6                        l1615 0CBE  
                      l1607 0C80                        l1471 0D7E                        l1535 0A90  
                      l1527 0A66                        l1519 0A1C                        l1623 0F62  
                      l1631 0B86                        l1711 0AFE                        l1703 0AB0  
                      l1553 102C                        l1561 0FDA                        l1545 0D14  
                      l1609 0C9E                        l1481 0DC4                        l1473 0D86  
                      l1537 0AA6                        l1529 0A76                        l1625 0F82  
                      l1617 0F2E                        l1641 0C14                        l1633 0BB2  
                      l1705 0AB4                        l1713 0B2A                        l1801 045C  
                      l1721 01F2                        l1555 1038                        l1571 101E  
                      l1563 0FE6                        l1547 0D1A                        l1483 0DCC  
                      l1475 0D92                        l1467 0D64                        l1491 0DFE  
                      l1539 0AAE                        l1651 0F00                        l1619 0F3A  
                      l1643 0C20                        l1635 0BE6                        l1627 0B6A  
                      l1715 0B3C                        l1707 0AEE                        l1811 053A  
                      l1803 04C2                        l1731 020C                        l1723 01F6  
                      l1557 1040                        l1661 1116                        l1565 0FFE  
                      l1549 0D22                        l1485 0DD2                        l1477 0DA8  
                      l1469 0D6C                        l1493 0E06                        l1581 0FB6  
                      l1573 0F84                        l1653 0F20                        l1645 0ED6  
                      l1637 0BEA                        l1629 0B6E                        l1717 0B5C  
                      l1709 0AFA                        l1901 0844                        l1821 05C0  
                      l1813 053C                        l1805 04C6                        l1741 0220  
                      l1733 020E                        l1725 01FA                        l1663 1136  
                      l1567 1010                        l1559 0FD8                        l1591 0E9A  
                      l1487 0DD8                        l1479 0DAE                        l1495 0E12  
                      l1583 0FD6                        l1575 0F9A                        l1671 08E6  
                      l1655 0F2C                        l1647 0EF0                        l1639 0BF6  
                      l1719 0B68                        l1903 084A                        l1823 05C4  
                      l1815 0548                        l1807 04D0                        l1831 065E  
                      l1751 0234                        l1743 0222                        l1735 0210  
                      l1727 01FE             __end_of_IC_Init 10CE                        l1665 1152  
                      l1657 1102                        l1569 1012                        l1593 0EA4  
                      l1585 0E64                        l1497 0E28                        l1489 0DEC  
                      l1577 0FA6                        l1681 092E                        l1673 08F2  
                      l1649 0EFC                        l1905 084E                        l1841 0716  
                      l1833 0688                        l1825 05CE                        l1817 054A  
                      l1809 0536                        l1761 0252                        l1753 0236  
                      l1745 0224                        l1737 0212                        l1729 0200  
                      l1659 1106                        l1595 0C22                        l1587 0E78  
                      l1499 0E3E                        l1579 0FAA                        l1691 097C  
                      l1683 093E                        l1675 0900                        l1667 0862  
                      l1851 0760                        l1843 0724                        l1835 06A8  
                      l1827 0634                        l1819 055A                        l1771 027E  
                      l1763 0254                        l1755 0242                        l1747 0226  
                      l1739 0214                        l1597 0C32                        l1589 0E86  
                      l1693 098A                        l1685 094E                        l1677 0910  
                      l1669 08CA                        l1861 078E                        l1853 0764  
                      l1845 0732                        l1837 06B2                        l1829 0638  
                      l1781 035A                        l1773 02E4                        l1765 0256  
                      l1757 0244                        l1749 0232                        l1599 0C48  
                      l1695 099A                        l1687 095C                        l1679 0920  
                      l1871 07A0                        l1863 0794                        l1847 0744  
                      l1855 0778                        l1839 0706                        l1791 03DA  
                      l1783 0364                        l1775 02E8                        l1767 0262  
                      l1759 0246                        l1697 09AA                        l1689 096C  
                      l1881 07AE                        l1873 07A2                        l1865 0796  
                      l1857 077C                        l1849 0750                        l1793 03E0  
                      l1785 03CA                        l1777 02F0                        l1769 026E  
                      l1699 09B8                        l1891 07FC                        l1883 07B0  
                      l1875 07A4                        l1867 079A                        l1859 078A  
                      l1787 03CE                        l1795 03E8                        l1779 0356  
                      l1893 0808                        l1885 07BC                        l1877 07AA  
                      l1869 079E                        l1797 044E                        l1789 03D4  
                      l1895 081A                        l1887 07BE                        l1879 07AC  
                      l1799 0452                        l1897 0836                        l1889 07E6  
                      l1899 0838                        STR_1 01E4                        STR_2 01DE  
                      STR_3 01E5                        STR_4 01DF                        STR_5 01E9  
                      STR_6 01ED                        STR_7 01E5                        STR_8 01DF  
                      STR_9 01C2                        u1000 0E86                        u1001 0E82  
                      u1010 0EC4                        u1011 0EC0                        u1020 0C48  
                      u1100 0F1C                        u1021 0C44                        u1101 0F18  
                      u1110 1130                        u1030 0C6E                        u1111 112C  
                      u1031 0C6A                        u1040 0C9E                        u1120 0900  
                      u1200 02A6                        u1041 0C9A                        u1121 08FC  
                      u1201 02A0                        u1130 092E                        u1050 0F5E  
                      u1210 02D2                        u1202 02A8                        u1131 092A  
                      u1051 0F5A                        u1211 02CC                        u1140 095C  
                      u1060 0B86                        u1300 043C                        u1220 02E4  
                      u1212 02D4                        u1141 0958                        u1061 0B82  
                      u1301 0436                        u1221 02E0                        u1150 098A  
                      u1070 0BAE                        u1310 044E                        u1302 043E  
                      u1230 0318                        u1151 0986                        u1071 0BAA  
                      u1311 044A                        u1231 0312                        u1160 09B8  
                      u1080 0C10                        u1400 05C0                        u1320 0484  
                      u1240 0344                        u1232 031A                        u1161 09B4  
                      u1081 0C0C                        u1401 05BC                        u1321 047E  
                      u1241 033E                        u1090 0EF0                        u1170 0AEE  
                      u1410 05F6                        u1330 04B0                        u1322 0486  
                      u1250 0356                        u1242 0346                        u1091 0EEC  
                      u1171 0AEA                        u1411 05F0                        u1331 04AA  
                      u1251 0352                        u1180 0B3C                        u1500 06D8  
                      u1420 0622                        u1412 05F8                        u1340 04C2  
                      u1332 04B2                        u1260 038C                        u1181 0B38  
                      u1421 061C                        u1341 04BE                        u1261 0386  
                      u1190 0B54                        u1510 06EC                        u1430 0634  
                      u1422 0624                        u1350 04F8                        u1270 03B8  
                      u1262 038E                        u1191 0B50                        u1511 06E6  
                      u1431 0630                        u1351 04F2                        u1271 03B2  
                      u1600 07FC                        u1520 06EE                        u1440 0670  
                      u1360 0524                        u1352 04FA                        u1280 03CA  
                      u1272 03BA                        u1601 07F8                        u1441 0668  
                      u1361 051E                        u1281 03C6                        u1610 081A  
                      u1530 0706                        u1450 0688                        u1370 0536  
                      u1362 0526                        u1290 0410                        u1611 0816  
                      u1531 0702                        u1451 0684                        u1371 0532  
                      u1291 040A                        u1620 0836                        u1540 0716  
                      u1460 0698                        u1380 0582                        u1292 0412  
                      u1621 0832                        u1541 0712                        u1461 0692  
                      u1381 057C                        u1550 0724                        u1390 05AE  
                      u1382 0584                        u1551 0720                        u1391 05A8  
                      u1560 0732                        u1480 06A8                        u1448 0672  
                      u1392 05B0                        u1561 072E                        u1481 06A4  
                      u1570 0744                        u1490 06D6                        u1571 0740  
                      u1491 06D0                        u1475 069A                        u1580 0760  
                      u1637 106A                        u1581 075C                        u1590 07E6  
                      u1591 07E2                        _TRMT 007D61          ?_UART_clean_buffer 0023  
             __CFG_BOR$BOHW 000000           __CFG_T1OSCMX$HIGH 000000                        _main 01F2  
                      _itoa 0F84                        fsr2h 000FDA                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 0048                        _utoa 09DA  
          __end_of_ADC_Init 11AC                        prodh 000FF4                        prodl 000FF3  
                      start 0078               __CFG_IESO$OFF 000000         ??_UART_clean_buffer 002F  
              ___param_bank 000000     __end_of_UART_add_buffer 0078     __end_of_UART_Write_Text 0D64  
   __end_of_UART_Write_byte 1176                       ?_main 0023                       ?_itoa 0037  
                     STR_10 01B8                       STR_11 0110                       STR_20 017A  
                     STR_12 011E                       STR_21 013A                       STR_13 0101  
                     STR_30 0155                       STR_14 01CE                       STR_22 019C  
                     STR_15 01A7                       STR_23 0155                       STR_24 01D7  
                     STR_16 01BC                       STR_25 01C5                       STR_17 0186  
                     STR_18 01B2                       STR_26 0191                       STR_19 0162  
                     STR_27 0148                       STR_28 016E                       STR_29 012C  
           __end_of___lldiv 0CDA                       ?_utoa 002E             __end_of___lwdiv 0DEC  
           __end_of___lwmod 0E64                       i2l107 0062                       i2l108 005C  
                     i2l109 0064                       _RCREG 000FAE                       _TMR0H 000FD7  
                     _TMR0L 000FD6                       _SPBRG 000FAF                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000             __end_of_delay_s 1136               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000         ___lmul@multiplicand 002B   __end_of_UART_clean_buffer 1158  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
        __size_of_UART_Init 001E               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       _state 0007  
            __pbitbssCOMRAM 0238                       tablat 000FF5                       ttemp5 0049  
                     ttemp6 004C                       ttemp7 0050                       utoa@c 0036  
                     utoa@v 0034                       status 000FD8                       wtemp8 0049  
           __end_of_strncmp 0C22             delay_s@repeat_3 002A              __CFG_MCLRE$OFF 000000  
           __initialization 10CE              __CFG_HPOL$HIGH 000000                __end_of_main 0862  
              __end_of_itoa 0FD8                __end_of_utoa 0AB0                   ??_ADC_Get 002C  
            __CFG_LPOL$HIGH 000000                      ??_main 0043                      ??_itoa 003D  
                    ??_utoa 0034               __activetblptr 000002                   ??_IC_Init 0027  
              ?_send_Status 0023                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    i2l1271 003E                      i2l1273 0042                      i2l1275 0054  
                    i2l1267 001A                      i2l1277 005C                      i2l1269 002A  
                    i2l1279 0062                      _TMR0IF 007F92            __end_of_delay_ms 1098  
            __CFG_XINST$OFF 000000           __end_of_UART_Init 1194                      ___lmul 0E64  
          ?_UART_add_buffer 0023              __CFG_STVREN$ON 000000            ?_UART_Write_Text 0028  
                 ??___lldiv 002F                   ??___lwdiv 002B                   ??___lwmod 002B  
          ?_UART_Write_byte 0023                      _buffer 0019                      _memset 1020  
                    clear_0 10EE                   ??_delay_s 002C                      _strchr 0ED6  
                    _strlen 0F2E                      _strstr 0AB0                      itoa@cp 003D  
              __pdataCOMRAM 0045                   ?_ADC_Init 0023                __mediumconst 0000  
__size_of_UART_clean_buffer 0022                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_strncmp 0033                _AC_POWER_OLD 0238  
                __accesstop 0080     __end_of__initialization 10F4             __CFG_FLTAMX$RA5 000000  
             ___rparam_used 000001              __pcstackCOMRAM 0023             __CFG_OSC$INTIO2 000000  
                ??_ADC_Init 0027                     ?___lmul 0027                     ?_memset 0027  
            ___lmul@product 002F                     _ADC_Get 0FD8                     ?_strchr 0027  
                   ?_strlen 0027                     ?_strstr 0036            __CFG_BBSIZ$BB256 000000  
                   _IC_Init 1098                   ?_delay_ms 0027                     i2u40_40 0054  
                   i2u40_41 0050                     i2u39_40 002A                     i2u39_41 0026  
      __size_of_send_Status 0178                  _cycleAlarm 0045             __CFG_PWMPIN$OFF 000000  
          delay_ms@repeat_2 0027                     __Hparam 0000                     __Lparam 0000  
           __size_of___lmul 0072                     ___lldiv 0C22       UART_Write_Text@toSend 002C  
                   ___lwdiv 0D64                     ___lwmod 0DEC                __psmallconst 0100  
                   __pcinit 10CE             __size_of_memset 0040                     _delay_s 1102  
                   __ramtop 0100                     __ptext0 01F2                     __ptext1 0AB0  
                   __ptext2 0B6A                     __ptext3 0F2E                     __ptext4 0ED6  
                   __ptext5 0862                     __ptext6 0F84                     __ptext7 09DA  
                   __ptext8 0DEC                     __ptext9 0D64                   _T0CONbits 000FD5  
           __size_of_strchr 0058             __size_of_strlen 0056             __size_of_strstr 00BA  
                ??_delay_ms 0029                     _strncmp 0B6A        end_of_initialization 10F4  
                   itoa@buf 0037                     memset@c 0029                     itoa@val 0039  
                   memset@n 002B                     memset@p 002D               __Lmediumconst 0000  
           ___lldiv@divisor 002B              ADC_Get@advalue 002E             ___lldiv@counter 0033  
                 _RCSTAbits 000FAB                     postinc0 000FEE                     postinc2 000FDE  
                   utoa@buf 002E                     utoa@val 0030                     strlen@s 0027  
                 _UART_Init 1176                   _PORTAbits 000F80                   _PORTBbits 000F81  
                 _TRISAbits 000F92                   _TRISBbits 000F93           __size_of_ADC_Init 0018  
                 _TXSTAbits 000FAC              __end_of___lmul 0ED6                 _BAUDCONbits 000FB8  
                ?_UART_Init 0023               __pidataCOMRAM 11AC              __end_of_memset 1060  
  __size_of_UART_add_buffer 0070    __size_of_UART_Write_Text 008A              __end_of_strchr 0F2E  
            __end_of_strlen 0F84              __end_of_strstr 0B6A         start_initialization 10CE  
  __size_of_UART_Write_byte 001E                    ??___lmul 002F                    ??_memset 002D  
                  ?_ADC_Get 002A                    ??_strchr 002B                    ??_strlen 0029  
                  ??_strstr 003A                 __pbssCOMRAM 0001                    ?_IC_Init 0023  
         __size_of_delay_ms 0038            ___lwdiv@dividend 0027           _cycleAlarmCounter 0006  
                 __pintcode 0008                    ?___lldiv 0027                    ?___lwdiv 0027  
                  ?___lwmod 0027                 ??_UART_Init 0027                    ?_delay_s 002A  
               __smallconst 0100               ??_send_Status 003F                    _ADC_Init 1194  
          ___lwdiv@quotient 002B                    ?_strncmp 002D           ??_UART_add_buffer 0023  
         ??_UART_Write_Text 002A           ??_UART_Write_byte 0027                   _old_state 0046  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _PIE1bits 000F9D  
                  _PIR1bits 000F9E            __CFG_WDTPS$32768 000000            __size_of_ADC_Get 0048  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
          __size_of_IC_Init 0036             _UART_Buffer_Ptr 0008           ___lmul@multiplier 0027  
       __end_of_send_Status 09DA                    __Hrparam 0000                    __Lrparam 0000  
           send_Status@temp 003F            __size_of___lldiv 00B8            __size_of___lwdiv 0088  
          __size_of___lwmod 0078                    _adcValue 0003            __size_of_delay_s 0034  
                  _batValue 0001                    _allArmed 0005                    _delay_ms 1060  
           ___lwdiv@divisor 0029             ___lwdiv@counter 002D                    __ptext10 0E64  
                  __ptext11 0C22                    __ptext20 1098                    __ptext12 0CDA  
                  __ptext21 1194                    __ptext13 1158                    __ptext14 0FD8  
                  __ptext15 1102                    __ptext16 1060                    __ptext17 1136  
                  __ptext18 1020                    __ptext19 1176            __size_of_strncmp 00B8  
       UART_Write_Text@text 0028               __size_of_main 0670               __size_of_itoa 0054  
             __size_of_utoa 00D6                  strncmp@len 0031                    int$flags 0048  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2                 _send_Status 0862  
                  itoa@base 003B                    memset@p1 0027                    intlevel2 0000  
                 strchr@chr 0029            ___lwmod@dividend 0027                   strchr@ptr 0027  
          ___lldiv@dividend 0027                   strncmp@s1 002D                   strncmp@s2 002F  
                _OSCCONbits 000FD3         UART_Write_byte@data 0027                 _UART_buffer 0009  
                  utoa@base 0032             _UART_add_buffer 0008             _UART_Write_Text 0CDA  
           _UART_Write_byte 1158            ___lldiv@quotient 002F             ___lwmod@divisor 0029  
                  strlen@cp 002B             ___lwmod@counter 002B                    strstr@s1 0036  
                  strstr@s2 0038            UART_Write_Text@i 002D  
