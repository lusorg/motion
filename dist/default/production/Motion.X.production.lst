

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 11 14:12:18 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F1330 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   112                           OVDCONS equ 0F82h ;# 
   113  0000                     # 552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   114                           OVDCOND equ 0F83h ;# 
   115  0000                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   116                           DTCON equ 0F84h ;# 
   117  0000                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   118                           PWMCON1 equ 0F85h ;# 
   119  0000                     # 752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   120                           PWMCON0 equ 0F86h ;# 
   121  0000                     # 818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   122                           SEVTCMPH equ 0F87h ;# 
   123  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   124                           SEVTCMPL equ 0F88h ;# 
   125  0000                     # 858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   126                           LATA equ 0F89h ;# 
   127  0000                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   128                           LATB equ 0F8Ah ;# 
   129  0000                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   130                           FLTCONFIG equ 0F8Bh ;# 
   131  0000                     # 1121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   132                           PDC2H equ 0F8Ch ;# 
   133  0000                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   134                           PDC2L equ 0F8Dh ;# 
   135  0000                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   136                           PDC1H equ 0F8Eh ;# 
   137  0000                     # 1181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   138                           PDC1L equ 0F8Fh ;# 
   139  0000                     # 1201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   140                           PDC0H equ 0F90h ;# 
   141  0000                     # 1221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   142                           PDC0L equ 0F91h ;# 
   143  0000                     # 1241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   144                           TRISA equ 0F92h ;# 
   145  0000                     # 1246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   146                           DDRA equ 0F92h ;# 
   147  0000                     # 1463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   148                           TRISB equ 0F93h ;# 
   149  0000                     # 1468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   150                           DDRB equ 0F93h ;# 
   151  0000                     # 1685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   152                           PTPERH equ 0F95h ;# 
   153  0000                     # 1705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   154                           PTPERL equ 0F96h ;# 
   155  0000                     # 1725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   156                           PTMRH equ 0F97h ;# 
   157  0000                     # 1745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   158                           PTMRL equ 0F98h ;# 
   159  0000                     # 1765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   160                           PTCON1 equ 0F99h ;# 
   161  0000                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   162                           PTCON0 equ 0F9Ah ;# 
   163  0000                     # 1874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   164                           OSCTUNE equ 0F9Bh ;# 
   165  0000                     # 1939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   166                           PIE1 equ 0F9Dh ;# 
   167  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   168                           PIR1 equ 0F9Eh ;# 
   169  0000                     # 2081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   170                           IPR1 equ 0F9Fh ;# 
   171  0000                     # 2152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   172                           PIE2 equ 0FA0h ;# 
   173  0000                     # 2187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   174                           PIR2 equ 0FA1h ;# 
   175  0000                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   176                           IPR2 equ 0FA2h ;# 
   177  0000                     # 2257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   178                           PIE3 equ 0FA3h ;# 
   179  0000                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   180                           PIR3 equ 0FA4h ;# 
   181  0000                     # 2326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   182                           IPR3 equ 0FA5h ;# 
   183  0000                     # 2356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   184                           EECON1 equ 0FA6h ;# 
   185  0000                     # 2422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   186                           EECON2 equ 0FA7h ;# 
   187  0000                     # 2429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   188                           EEDATA equ 0FA8h ;# 
   189  0000                     # 2436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   190                           EEADR equ 0FA9h ;# 
   191  0000                     # 2443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   192                           RCSTA equ 0FABh ;# 
   193  0000                     # 2448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   194                           RCSTA1 equ 0FABh ;# 
   195  0000                     # 2653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   196                           TXSTA equ 0FACh ;# 
   197  0000                     # 2658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   198                           TXSTA1 equ 0FACh ;# 
   199  0000                     # 2909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   200                           TXREG equ 0FADh ;# 
   201  0000                     # 2914 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   202                           TXREG1 equ 0FADh ;# 
   203  0000                     # 2921 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   204                           RCREG equ 0FAEh ;# 
   205  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   206                           RCREG1 equ 0FAEh ;# 
   207  0000                     # 2933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   208                           SPBRG equ 0FAFh ;# 
   209  0000                     # 2938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   210                           SPBRG1 equ 0FAFh ;# 
   211  0000                     # 2945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   212                           SPBRGH equ 0FB0h ;# 
   213  0000                     # 2952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   214                           CMCON equ 0FB4h ;# 
   215  0000                     # 3038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   216                           CVRCON equ 0FB5h ;# 
   217  0000                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   218                           BAUDCON equ 0FB8h ;# 
   219  0000                     # 3114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   220                           BAUDCTL equ 0FB8h ;# 
   221  0000                     # 3289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   222                           ADCON2 equ 0FC0h ;# 
   223  0000                     # 3360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   224                           ADCON1 equ 0FC1h ;# 
   225  0000                     # 3433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   226                           ADCON0 equ 0FC2h ;# 
   227  0000                     # 3554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   228                           ADRES equ 0FC3h ;# 
   229  0000                     # 3561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   230                           ADRESL equ 0FC3h ;# 
   231  0000                     # 3568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   232                           ADRESH equ 0FC4h ;# 
   233  0000                     # 3575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   234                           T1CON equ 0FCDh ;# 
   235  0000                     # 3680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   236                           TMR1 equ 0FCEh ;# 
   237  0000                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   238                           TMR1L equ 0FCEh ;# 
   239  0000                     # 3694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   240                           TMR1H equ 0FCFh ;# 
   241  0000                     # 3701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   242                           RCON equ 0FD0h ;# 
   243  0000                     # 3834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   244                           WDTCON equ 0FD1h ;# 
   245  0000                     # 3862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   246                           LVDCON equ 0FD2h ;# 
   247  0000                     # 3927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   248                           OSCCON equ 0FD3h ;# 
   249  0000                     # 4010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   250                           T0CON equ 0FD5h ;# 
   251  0000                     # 4089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   252                           TMR0 equ 0FD6h ;# 
   253  0000                     # 4096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   254                           TMR0L equ 0FD6h ;# 
   255  0000                     # 4103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   256                           TMR0H equ 0FD7h ;# 
   257  0000                     # 4110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   258                           STATUS equ 0FD8h ;# 
   259  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   260                           FSR2 equ 0FD9h ;# 
   261  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   262                           FSR2L equ 0FD9h ;# 
   263  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   264                           FSR2H equ 0FDAh ;# 
   265  0000                     # 4202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   266                           PLUSW2 equ 0FDBh ;# 
   267  0000                     # 4209 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   268                           PREINC2 equ 0FDCh ;# 
   269  0000                     # 4216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   270                           POSTDEC2 equ 0FDDh ;# 
   271  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   272                           POSTINC2 equ 0FDEh ;# 
   273  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   274                           INDF2 equ 0FDFh ;# 
   275  0000                     # 4237 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   276                           BSR equ 0FE0h ;# 
   277  0000                     # 4244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   278                           FSR1 equ 0FE1h ;# 
   279  0000                     # 4251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   280                           FSR1L equ 0FE1h ;# 
   281  0000                     # 4258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   282                           FSR1H equ 0FE2h ;# 
   283  0000                     # 4265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   284                           PLUSW1 equ 0FE3h ;# 
   285  0000                     # 4272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   286                           PREINC1 equ 0FE4h ;# 
   287  0000                     # 4279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   288                           POSTDEC1 equ 0FE5h ;# 
   289  0000                     # 4286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   290                           POSTINC1 equ 0FE6h ;# 
   291  0000                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   292                           INDF1 equ 0FE7h ;# 
   293  0000                     # 4300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   294                           WREG equ 0FE8h ;# 
   295  0000                     # 4312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   296                           FSR0 equ 0FE9h ;# 
   297  0000                     # 4319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   298                           FSR0L equ 0FE9h ;# 
   299  0000                     # 4326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   300                           FSR0H equ 0FEAh ;# 
   301  0000                     # 4333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   302                           PLUSW0 equ 0FEBh ;# 
   303  0000                     # 4340 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   304                           PREINC0 equ 0FECh ;# 
   305  0000                     # 4347 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   306                           POSTDEC0 equ 0FEDh ;# 
   307  0000                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   308                           POSTINC0 equ 0FEEh ;# 
   309  0000                     # 4361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   310                           INDF0 equ 0FEFh ;# 
   311  0000                     # 4368 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   312                           INTCON3 equ 0FF0h ;# 
   313  0000                     # 4480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   314                           INTCON2 equ 0FF1h ;# 
   315  0000                     # 4567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   316                           INTCON equ 0FF2h ;# 
   317  0000                     # 4684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   318                           PROD equ 0FF3h ;# 
   319  0000                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   320                           PRODL equ 0FF3h ;# 
   321  0000                     # 4698 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   322                           PRODH equ 0FF4h ;# 
   323  0000                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   324                           TABLAT equ 0FF5h ;# 
   325  0000                     # 4714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   326                           TBLPTR equ 0FF6h ;# 
   327  0000                     # 4721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   328                           TBLPTRL equ 0FF6h ;# 
   329  0000                     # 4728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   330                           TBLPTRH equ 0FF7h ;# 
   331  0000                     # 4735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   332                           TBLPTRU equ 0FF8h ;# 
   333  0000                     # 4744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   334                           PCLAT equ 0FF9h ;# 
   335  0000                     # 4751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   336                           PC equ 0FF9h ;# 
   337  0000                     # 4758 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   338                           PCL equ 0FF9h ;# 
   339  0000                     # 4765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   340                           PCLATH equ 0FFAh ;# 
   341  0000                     # 4772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   342                           PCLATU equ 0FFBh ;# 
   343  0000                     # 4779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   344                           STKPTR equ 0FFCh ;# 
   345  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   346                           TOS equ 0FFDh ;# 
   347  0000                     # 4860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   348                           TOSL equ 0FFDh ;# 
   349  0000                     # 4867 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   350                           TOSH equ 0FFEh ;# 
   351  0000                     # 4874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1330.h"
   352                           TOSU equ 0FFFh ;# 
   353  0000                     	FNCALL	_main,_ADC_Init
   354                           	FNCALL	_main,_IC_Init
   355                           	FNCALL	_main,_UART_Init
   356                           	FNCALL	_main,_UART_Write_Text
   357                           	FNCALL	_main,_UART_clean_buffer
   358                           	FNCALL	_main,_delay_ms
   359                           	FNCALL	_main,_delay_s
   360                           	FNCALL	_main,_send_Status
   361                           	FNCALL	_main,_strstr
   362                           	FNCALL	_strstr,_strchr
   363                           	FNCALL	_strstr,_strlen
   364                           	FNCALL	_strstr,_strncmp
   365                           	FNCALL	_send_Status,_ADC_Get
   366                           	FNCALL	_send_Status,_UART_Write_Text
   367                           	FNCALL	_send_Status,___lldiv
   368                           	FNCALL	_send_Status,___lmul
   369                           	FNCALL	_send_Status,_itoa
   370                           	FNCALL	_itoa,_utoa
   371                           	FNCALL	_utoa,___lwdiv
   372                           	FNCALL	_utoa,___lwmod
   373                           	FNCALL	_UART_Write_Text,_UART_Write_byte
   374                           	FNCALL	_ADC_Get,_delay_ms
   375                           	FNCALL	_delay_s,_delay_ms
   376                           	FNCALL	_UART_clean_buffer,_memset
   377                           	FNROOT	_main
   378                           	FNCALL	intlevel2,_UART_add_buffer
   379                           	global	intlevel2
   380                           	FNROOT	intlevel2
   381                           	global	_old_state
   382                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   383                           global __pidataCOMRAM
   384                           __pidataCOMRAM:
   385  000DFA                     	file	"main.c"
   386                           	line	19
   387                           
   388                           ;initializer for _old_state
   389                           	db	low(080h)
   390  000DFA  80                 	global	_state
   391                           	global	_UART_Buffer_Ptr
   392                           	global	_UART_buffer
   393                           	global	_AC_POWER_old
   394                           	global	_PORTBbits
   395                           _PORTBbits	set	0xF81
   396  0000                     	global	_PORTAbits
   397                           _PORTAbits	set	0xF80
   398  0000                     	global	_LATBbits
   399                           _LATBbits	set	0xF8A
   400  0000                     	global	_OSCTUNEbits
   401                           _OSCTUNEbits	set	0xF9B
   402  0000                     	global	_OSCCONbits
   403                           _OSCCONbits	set	0xFD3
   404  0000                     	global	_TRISBbits
   405                           _TRISBbits	set	0xF93
   406  0000                     	global	_TRISAbits
   407                           _TRISAbits	set	0xF92
   408  0000                     	global	_ADRESL
   409                           _ADRESL	set	0xFC3
   410  0000                     	global	_ADRESH
   411                           _ADRESH	set	0xFC4
   412  0000                     	global	_ADCON2bits
   413                           _ADCON2bits	set	0xFC0
   414  0000                     	global	_ADCON1bits
   415                           _ADCON1bits	set	0xFC1
   416  0000                     	global	_ADCON0bits
   417                           _ADCON0bits	set	0xFC2
   418  0000                     	global	_RCREG
   419                           _RCREG	set	0xFAE
   420  0000                     	global	_PIR1bits
   421                           _PIR1bits	set	0xF9E
   422  0000                     	global	_LATAbits
   423                           _LATAbits	set	0xF89
   424  0000                     	global	_TXREG
   425                           _TXREG	set	0xFAD
   426  0000                     	global	_SPBRG
   427                           _SPBRG	set	0xFAF
   428  0000                     	global	_BAUDCONbits
   429                           _BAUDCONbits	set	0xFB8
   430  0000                     	global	_TXSTAbits
   431                           _TXSTAbits	set	0xFAC
   432  0000                     	global	_RCSTAbits
   433                           _RCSTAbits	set	0xFAB
   434  0000                     	global	_INTCONbits
   435                           _INTCONbits	set	0xFF2
   436  0000                     	global	_PIE1bits
   437                           _PIE1bits	set	0xF9D
   438  0000                     	global	_TRMT
   439                           _TRMT	set	0x7D61
   440  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   441                           global __psmallconst
   442                           __psmallconst:
   443  000100                     	db	0
   444  000100  00                 	
   445                           STR_13:
   446  000101                     	db	72	;'H'
   447  000101  48                 	db	101	;'e'
   448  000102  65                 	db	108	;'l'
   449  000103  6C                 	db	108	;'l'
   450  000104  6C                 	db	111	;'o'
   451  000105  6F                 	db	32
   452  000106  20                 	db	87	;'W'
   453  000107  57                 	db	111	;'o'
   454  000108  6F                 	db	114	;'r'
   455  000109  72                 	db	108	;'l'
   456  00010A  6C                 	db	100	;'d'
   457  00010B  64                 	db	51	;'3'
   458  00010C  33                 	db	49	;'1'
   459  00010D  31                 	db	10
   460  00010E  0A                 	db	0
   461  00010F  00                 	
   462                           STR_11:
   463  000110                     	db	72	;'H'
   464  000110  48                 	db	101	;'e'
   465  000111  65                 	db	108	;'l'
   466  000112  6C                 	db	108	;'l'
   467  000113  6C                 	db	111	;'o'
   468  000114  6F                 	db	32
   469  000115  20                 	db	87	;'W'
   470  000116  57                 	db	111	;'o'
   471  000117  6F                 	db	114	;'r'
   472  000118  72                 	db	108	;'l'
   473  000119  6C                 	db	100	;'d'
   474  00011A  64                 	db	49	;'1'
   475  00011B  31                 	db	10
   476  00011C  0A                 	db	0
   477  00011D  00                 	
   478                           STR_12:
   479  00011E                     	db	72	;'H'
   480  00011E  48                 	db	101	;'e'
   481  00011F  65                 	db	108	;'l'
   482  000120  6C                 	db	108	;'l'
   483  000121  6C                 	db	111	;'o'
   484  000122  6F                 	db	32
   485  000123  20                 	db	87	;'W'
   486  000124  57                 	db	111	;'o'
   487  000125  6F                 	db	114	;'r'
   488  000126  72                 	db	108	;'l'
   489  000127  6C                 	db	100	;'d'
   490  000128  64                 	db	50	;'2'
   491  000129  32                 	db	10
   492  00012A  0A                 	db	0
   493  00012B  00                 	
   494                           STR_19:
   495  00012C                     	db	69	;'E'
   496  00012C  45                 	db	88	;'X'
   497  00012D  58                 	db	84	;'T'
   498  00012E  54                 	db	82	;'R'
   499  00012F  52                 	db	65	;'A'
   500  000130  41                 	db	95	;'_'
   501  000131  5F                 	db	79	;'O'
   502  000132  4F                 	db	70	;'F'
   503  000133  46                 	db	70	;'F'
   504  000134  46                 	db	0
   505  000135  00                 	
   506                           STR_18:
   507  000136                     	db	69	;'E'
   508  000136  45                 	db	88	;'X'
   509  000137  58                 	db	84	;'T'
   510  000138  54                 	db	82	;'R'
   511  000139  52                 	db	65	;'A'
   512  00013A  41                 	db	95	;'_'
   513  00013B  5F                 	db	79	;'O'
   514  00013C  4F                 	db	78	;'N'
   515  00013D  4E                 	db	0
   516  00013E  00                 	
   517                           STR_16:
   518  00013F                     	db	65	;'A'
   519  00013F  41                 	db	76	;'L'
   520  000140  4C                 	db	65	;'A'
   521  000141  41                 	db	95	;'_'
   522  000142  5F                 	db	79	;'O'
   523  000143  4F                 	db	70	;'F'
   524  000144  46                 	db	70	;'F'
   525  000145  46                 	db	0
   526  000146  00                 	
   527                           STR_15:
   528  000147                     	db	65	;'A'
   529  000147  41                 	db	76	;'L'
   530  000148  4C                 	db	65	;'A'
   531  000149  41                 	db	95	;'_'
   532  00014A  5F                 	db	79	;'O'
   533  00014B  4F                 	db	78	;'N'
   534  00014C  4E                 	db	0
   535  00014D  00                 	
   536                           STR_14:
   537  00014E                     	db	83	;'S'
   538  00014E  53                 	db	84	;'T'
   539  00014F  54                 	db	65	;'A'
   540  000150  41                 	db	84	;'T'
   541  000151  54                 	db	85	;'U'
   542  000152  55                 	db	83	;'S'
   543  000153  53                 	db	0
   544  000154  00                 	
   545                           STR_2:
   546  000155                     	db	124
   547  000155  7C                 	db	79	;'O'
   548  000156  4F                 	db	70	;'F'
   549  000157  46                 	db	70	;'F'
   550  000158  46                 	db	124
   551  000159  7C                 	db	0
   552  00015A  00                 	
   553                           STR_17:
   554  00015B                     	db	66	;'B'
   555  00015B  42                 	db	69	;'E'
   556  00015C  45                 	db	69	;'E'
   557  00015D  45                 	db	80	;'P'
   558  00015E  50                 	db	0
   559  00015F  00                 	
   560                           STR_1:
   561  000160                     	db	124
   562  000160  7C                 	db	79	;'O'
   563  000161  4F                 	db	78	;'N'
   564  000162  4E                 	db	124
   565  000163  7C                 	db	0
   566  000164  00                 	
   567                           STR_5:
   568  000165                     	db	65	;'A'
   569  000165  41                 	db	67	;'C'
   570  000166  43                 	db	124
   571  000167  7C                 	db	0
   572  000168  00                 	
   573                           STR_6:
   574  000169                     	db	68	;'D'
   575  000169  44                 	db	67	;'C'
   576  00016A  43                 	db	124
   577  00016B  7C                 	db	0
   578  00016C  00                 STR_3	equ	STR_1+1
   579  0000                     STR_7	equ	STR_1+1
   580  0000                     STR_4	equ	STR_2+1
   581  0000                     STR_8	equ	STR_2+1
   582  0000                     STR_9	equ	STR_15+4
   583  0000                     STR_10	equ	STR_16+4
   584  0000                     ; #config settings
   585                           global __CFG_OSC$INTIO2
   586                           __CFG_OSC$INTIO2 equ 0x0
   587  0000                     global __CFG_FCMEN$OFF
   588                           __CFG_FCMEN$OFF equ 0x0
   589  0000                     global __CFG_IESO$OFF
   590                           __CFG_IESO$OFF equ 0x0
   591  0000                     global __CFG_PWRT$OFF
   592                           __CFG_PWRT$OFF equ 0x0
   593  0000                     global __CFG_BOR$BOHW
   594                           __CFG_BOR$BOHW equ 0x0
   595  0000                     global __CFG_BORV$3
   596                           __CFG_BORV$3 equ 0x0
   597  0000                     global __CFG_WDT$OFF
   598                           __CFG_WDT$OFF equ 0x0
   599  0000                     global __CFG_WDTPS$32768
   600                           __CFG_WDTPS$32768 equ 0x0
   601  0000                     global __CFG_PWMPIN$OFF
   602                           __CFG_PWMPIN$OFF equ 0x0
   603  0000                     global __CFG_LPOL$HIGH
   604                           __CFG_LPOL$HIGH equ 0x0
   605  0000                     global __CFG_HPOL$HIGH
   606                           __CFG_HPOL$HIGH equ 0x0
   607  0000                     global __CFG_FLTAMX$RA5
   608                           __CFG_FLTAMX$RA5 equ 0x0
   609  0000                     global __CFG_T1OSCMX$HIGH
   610                           __CFG_T1OSCMX$HIGH equ 0x0
   611  0000                     global __CFG_MCLRE$OFF
   612                           __CFG_MCLRE$OFF equ 0x0
   613  0000                     global __CFG_STVREN$ON
   614                           __CFG_STVREN$ON equ 0x0
   615  0000                     global __CFG_BBSIZ$BB256
   616                           __CFG_BBSIZ$BB256 equ 0x0
   617  0000                     global __CFG_XINST$OFF
   618                           __CFG_XINST$OFF equ 0x0
   619  0000                     global __CFG_CP0$OFF
   620                           __CFG_CP0$OFF equ 0x0
   621  0000                     global __CFG_CP1$OFF
   622                           __CFG_CP1$OFF equ 0x0
   623  0000                     global __CFG_CPB$OFF
   624                           __CFG_CPB$OFF equ 0x0
   625  0000                     global __CFG_CPD$OFF
   626                           __CFG_CPD$OFF equ 0x0
   627  0000                     global __CFG_WRT0$OFF
   628                           __CFG_WRT0$OFF equ 0x0
   629  0000                     global __CFG_WRT1$OFF
   630                           __CFG_WRT1$OFF equ 0x0
   631  0000                     global __CFG_WRTC$OFF
   632                           __CFG_WRTC$OFF equ 0x0
   633  0000                     global __CFG_WRTB$OFF
   634                           __CFG_WRTB$OFF equ 0x0
   635  0000                     global __CFG_WRTD$OFF
   636                           __CFG_WRTD$OFF equ 0x0
   637  0000                     global __CFG_EBTR0$OFF
   638                           __CFG_EBTR0$OFF equ 0x0
   639  0000                     global __CFG_EBTR1$OFF
   640                           __CFG_EBTR1$OFF equ 0x0
   641  0000                     global __CFG_EBTRB$OFF
   642                           __CFG_EBTRB$OFF equ 0x0
   643  0000                     	file	"C:\Users\me\AppData\Local\Temp\s4c8."
   644                           	line	#
   645                           psect	cinit,class=CODE,delta=1,reloc=2
   646                           global __pcinit
   647                           __pcinit:
   648  000D56                     global start_initialization
   649                           start_initialization:
   650  000D56                     
   651                           global __initialization
   652                           __initialization:
   653  000D56                     psect	bitbssCOMRAM,class=COMRAM,bit,space=1,noexec
   654                           global __pbitbssCOMRAM
   655                           __pbitbssCOMRAM:
   656  000210                     	global	_AC_POWER_old
   657                           _AC_POWER_old:
   658  000210                            ds      1
   659  000210                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   660                           global __pbssCOMRAM
   661                           __pbssCOMRAM:
   662  000030                     	global	_state
   663                           _state:
   664  000030                            ds      1
   665  000030                     	global	_UART_Buffer_Ptr
   666                           _UART_Buffer_Ptr:
   667  000031                            ds      1
   668  000031                     	global	_UART_buffer
   669                           _UART_buffer:
   670  000032                            ds      16
   671  000032                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   672                           global __pdataCOMRAM
   673                           __pdataCOMRAM:
   674  000043                     	file	"main.c"
   675                           	line	19
   676                           	global	_old_state
   677                           _old_state:
   678  000043                            ds      1
   679  000043                     	file	"C:\Users\me\AppData\Local\Temp\s4c8."
   680                           	line	#
   681                           psect	cinit
   682                           ; Initialize objects allocated to COMRAM (1 bytes)
   683                           	global __pidataCOMRAM
   684                           	; load TBLPTR registers with __pidataCOMRAM
   685                           	movlw	low (__pidataCOMRAM)
   686  000D56  0EFA               	movwf	tblptrl
   687  000D58  6EF6               	movlw	high(__pidataCOMRAM)
   688  000D5A  0E0D               	movwf	tblptrh
   689  000D5C  6EF7               	movlw	low highword(__pidataCOMRAM)
   690  000D5E  0E00               	movwf	tblptru
   691  000D60  6EF8               	tblrd*+ ;fetch initializer
   692  000D62  0009               	movff	tablat, __pdataCOMRAM+0		
   693  000D64  CFF5 F043          	line	#
   694                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   695                           	global __pbitbssCOMRAM
   696                           clrf	(__pbitbssCOMRAM/8+0)&0xffh,c
   697  000D68  6A42               ; Clear objects allocated to COMRAM (18 bytes)
   698                           	global __pbssCOMRAM
   699                           lfsr	0,__pbssCOMRAM
   700  000D6A  EE00  F030         movlw	18
   701  000D6E  0E12               clear_0:
   702  000D70                     clrf	postinc0,c
   703  000D70  6AEE               decf	wreg
   704  000D72  06E8               bnz	clear_0
   705  000D74  E1FD               psect cinit,class=CODE,delta=1
   706                           global end_of_initialization,__end_of__initialization
   707                           
   708                           ;End of C runtime variable initialization code
   709                           
   710                           end_of_initialization:
   711  000D76                     __end_of__initialization:
   712  000D76                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   713  000D76  9044               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   714  000D78  9244               	GLOBAL	__Lmediumconst
   715                           	movlw	low highword(__Lmediumconst)
   716  000D7A  0E00               	movwf	tblptru
   717  000D7C  6EF8               movlb 0
   718  000D7E  0100               goto _main	;jump to C main() function
   719  000D80  EFB7  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   720                           global __pcstackCOMRAM
   721                           __pcstackCOMRAM:
   722  000001                     ?_UART_Init:	; 1 bytes @ 0x0
   723  000001                     ?_UART_Write_byte:	; 1 bytes @ 0x0
   724  000001                     ?_UART_clean_buffer:	; 1 bytes @ 0x0
   725  000001                     ?_UART_add_buffer:	; 1 bytes @ 0x0
   726  000001                     ??_UART_add_buffer:	; 1 bytes @ 0x0
   727  000001                     ?_ADC_Init:	; 1 bytes @ 0x0
   728  000001                     ?_IC_Init:	; 1 bytes @ 0x0
   729  000001                     ?_send_Status:	; 1 bytes @ 0x0
   730  000001                     ?_main:	; 1 bytes @ 0x0
   731  000001                     	ds   4
   732  000001                     ?_delay_ms:	; 1 bytes @ 0x4
   733  000005                     ??_UART_Init:	; 1 bytes @ 0x4
   734  000005                     ??_UART_Write_byte:	; 1 bytes @ 0x4
   735  000005                     ??_ADC_Init:	; 1 bytes @ 0x4
   736  000005                     ??_IC_Init:	; 1 bytes @ 0x4
   737  000005                     ?_memset:	; 2 bytes @ 0x4
   738  000005                     	global	?_strlen
   739                           ?_strlen:	; 2 bytes @ 0x4
   740  000005                     	global	?_strchr
   741                           ?_strchr:	; 2 bytes @ 0x4
   742  000005                     	global	?___lwdiv
   743                           ?___lwdiv:	; 2 bytes @ 0x4
   744  000005                     	global	?___lwmod
   745                           ?___lwmod:	; 2 bytes @ 0x4
   746  000005                     	global	?___lmul
   747                           ?___lmul:	; 4 bytes @ 0x4
   748  000005                     	global	?___lldiv
   749                           ?___lldiv:	; 4 bytes @ 0x4
   750  000005                     	global	UART_Write_byte@data
   751                           UART_Write_byte@data:	; 1 bytes @ 0x4
   752  000005                     	global	delay_ms@repeat_2
   753                           delay_ms@repeat_2:	; 2 bytes @ 0x4
   754  000005                     	global	___lwdiv@dividend
   755                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   756  000005                     	global	___lwmod@dividend
   757                           ___lwmod@dividend:	; 2 bytes @ 0x4
   758  000005                     	global	memset@p1
   759                           memset@p1:	; 2 bytes @ 0x4
   760  000005                     	global	strchr@ptr
   761                           strchr@ptr:	; 2 bytes @ 0x4
   762  000005                     	global	strlen@s
   763                           strlen@s:	; 2 bytes @ 0x4
   764  000005                     	global	___lmul@multiplier
   765                           ___lmul@multiplier:	; 4 bytes @ 0x4
   766  000005                     	global	___lldiv@dividend
   767                           ___lldiv@dividend:	; 4 bytes @ 0x4
   768  000005                     	ds   1
   769  000005                     ?_UART_Write_Text:	; 1 bytes @ 0x5
   770  000006                     	global	UART_Write_Text@text
   771                           UART_Write_Text@text:	; 2 bytes @ 0x5
   772  000006                     	ds   1
   773  000006                     ??_strlen:	; 1 bytes @ 0x6
   774  000007                     ??_delay_ms:	; 1 bytes @ 0x6
   775  000007                     	global	___lwdiv@divisor
   776                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   777  000007                     	global	___lwmod@divisor
   778                           ___lwmod@divisor:	; 2 bytes @ 0x6
   779  000007                     	global	memset@c
   780                           memset@c:	; 2 bytes @ 0x6
   781  000007                     	global	strchr@chr
   782                           strchr@chr:	; 2 bytes @ 0x6
   783  000007                     	ds   1
   784  000007                     ?_delay_s:	; 1 bytes @ 0x7
   785  000008                     ??_UART_Write_Text:	; 1 bytes @ 0x7
   786  000008                     	global	?_ADC_Get
   787                           ?_ADC_Get:	; 2 bytes @ 0x7
   788  000008                     	global	delay_s@repeat_3
   789                           delay_s@repeat_3:	; 2 bytes @ 0x7
   790  000008                     	ds   1
   791  000008                     ??_strchr:	; 1 bytes @ 0x8
   792  000009                     ??___lwdiv:	; 1 bytes @ 0x8
   793  000009                     ??___lwmod:	; 1 bytes @ 0x8
   794  000009                     	global	___lwmod@counter
   795                           ___lwmod@counter:	; 1 bytes @ 0x8
   796  000009                     	global	___lwdiv@quotient
   797                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   798  000009                     	global	memset@n
   799                           memset@n:	; 2 bytes @ 0x8
   800  000009                     	global	strlen@cp
   801                           strlen@cp:	; 2 bytes @ 0x8
   802  000009                     	global	___lmul@multiplicand
   803                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   804  000009                     	global	___lldiv@divisor
   805                           ___lldiv@divisor:	; 4 bytes @ 0x8
   806  000009                     	ds   1
   807  000009                     ??_delay_s:	; 1 bytes @ 0x9
   808  00000A                     ??_ADC_Get:	; 1 bytes @ 0x9
   809  00000A                     	global	UART_Write_Text@toSend
   810                           UART_Write_Text@toSend:	; 1 bytes @ 0x9
   811  00000A                     	ds   1
   812  00000A                     ??_memset:	; 1 bytes @ 0xA
   813  00000B                     	global	?_strncmp
   814                           ?_strncmp:	; 2 bytes @ 0xA
   815  00000B                     	global	___lwdiv@counter
   816                           ___lwdiv@counter:	; 1 bytes @ 0xA
   817  00000B                     	global	UART_Write_Text@i
   818                           UART_Write_Text@i:	; 2 bytes @ 0xA
   819  00000B                     	global	memset@p
   820                           memset@p:	; 2 bytes @ 0xA
   821  00000B                     	global	strncmp@s1
   822                           strncmp@s1:	; 2 bytes @ 0xA
   823  00000B                     	ds   1
   824  00000B                     ?_utoa:	; 2 bytes @ 0xB
   825  00000C                     	global	ADC_Get@advalue
   826                           ADC_Get@advalue:	; 2 bytes @ 0xB
   827  00000C                     	global	utoa@buf
   828                           utoa@buf:	; 2 bytes @ 0xB
   829  00000C                     	ds   1
   830  00000C                     ??_UART_clean_buffer:	; 1 bytes @ 0xC
   831  00000D                     ??___lmul:	; 1 bytes @ 0xC
   832  00000D                     ??___lldiv:	; 1 bytes @ 0xC
   833  00000D                     	global	strncmp@s2
   834                           strncmp@s2:	; 2 bytes @ 0xC
   835  00000D                     	global	___lmul@product
   836                           ___lmul@product:	; 4 bytes @ 0xC
   837  00000D                     	global	___lldiv@quotient
   838                           ___lldiv@quotient:	; 4 bytes @ 0xC
   839  00000D                     	ds   1
   840  00000D                     	global	utoa@val
   841                           utoa@val:	; 2 bytes @ 0xD
   842  00000E                     	ds   1
   843  00000E                     	global	strncmp@len
   844                           strncmp@len:	; 2 bytes @ 0xE
   845  00000F                     	ds   1
   846  00000F                     	global	utoa@base
   847                           utoa@base:	; 2 bytes @ 0xF
   848  000010                     	ds   1
   849  000010                     ??_strncmp:	; 1 bytes @ 0x10
   850  000011                     	global	___lldiv@counter
   851                           ___lldiv@counter:	; 1 bytes @ 0x10
   852  000011                     	ds   1
   853  000011                     ??_utoa:	; 1 bytes @ 0x11
   854  000012                     	global	utoa@v
   855                           utoa@v:	; 2 bytes @ 0x11
   856  000012                     	ds   2
   857  000012                     	global	?_strstr
   858                           ?_strstr:	; 2 bytes @ 0x13
   859  000014                     	global	utoa@c
   860                           utoa@c:	; 1 bytes @ 0x13
   861  000014                     	global	strstr@s1
   862                           strstr@s1:	; 2 bytes @ 0x13
   863  000014                     	ds   1
   864  000014                     ?_itoa:	; 2 bytes @ 0x14
   865  000015                     	global	itoa@buf
   866                           itoa@buf:	; 2 bytes @ 0x14
   867  000015                     	ds   1
   868  000015                     	global	strstr@s2
   869                           strstr@s2:	; 2 bytes @ 0x15
   870  000016                     	ds   1
   871  000016                     	global	itoa@val
   872                           itoa@val:	; 2 bytes @ 0x16
   873  000017                     	ds   1
   874  000017                     ??_strstr:	; 1 bytes @ 0x17
   875  000018                     	ds   1
   876  000018                     	global	itoa@base
   877                           itoa@base:	; 2 bytes @ 0x18
   878  000019                     	ds   2
   879  000019                     ??_itoa:	; 1 bytes @ 0x1A
   880  00001B                     	global	itoa@cp
   881                           itoa@cp:	; 2 bytes @ 0x1A
   882  00001B                     	ds   2
   883  00001B                     ??_send_Status:	; 1 bytes @ 0x1C
   884  00001D                     	global	send_Status@buffer
   885                           send_Status@buffer:	; 10 bytes @ 0x1C
   886  00001D                     	ds   10
   887  00001D                     	global	send_Status@temp
   888                           send_Status@temp:	; 4 bytes @ 0x26
   889  000027                     	ds   4
   890  000027                     	global	send_Status@adcValue
   891                           send_Status@adcValue:	; 2 bytes @ 0x2A
   892  00002B                     	ds   2
   893  00002B                     	global	send_Status@batValue
   894                           send_Status@batValue:	; 2 bytes @ 0x2C
   895  00002D                     	ds   2
   896  00002D                     ??_main:	; 1 bytes @ 0x2E
   897  00002F                     	ds   1
   898  00002F                     ;!
   899                           ;!Data Sizes:
   900                           ;!    Strings     108
   901                           ;!    Constant    0
   902                           ;!    Data        1
   903                           ;!    BSS         18
   904                           ;!    Persistent  0
   905                           ;!    Stack       0
   906                           ;!
   907                           ;!Auto Spaces:
   908                           ;!    Space          Size  Autos    Used
   909                           ;!    COMRAM          126     47      67
   910                           ;!    BANK0           128      0       0
   911                           
   912                           ;!
   913                           ;!Pointer List with Targets:
   914                           ;!
   915                           ;!    strncmp@s2	PTR const unsigned char  size(2) Largest target is 10
   916                           ;!		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
   917                           ;!		 -> STR_15(CODE[7]), STR_14(CODE[7]), 
   918                           ;!
   919                           ;!    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
   920                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   921                           ;!
   922                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 10
   923                           ;!		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
   924                           ;!		 -> STR_15(CODE[7]), STR_14(CODE[7]), 
   925                           ;!
   926                           ;!    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
   927                           ;!		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
   928                           ;!		 -> STR_15(CODE[7]), STR_14(CODE[7]), 
   929                           ;!
   930                           ;!    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
   931                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   932                           ;!
   933                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 16
   934                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   935                           ;!
   936                           ;!    strstr@s2	PTR const unsigned char  size(2) Largest target is 10
   937                           ;!		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
   938                           ;!		 -> STR_15(CODE[7]), STR_14(CODE[7]), 
   939                           ;!
   940                           ;!    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
   941                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   942                           ;!
   943                           ;!    memset@p1	PTR void  size(2) Largest target is 16
   944                           ;!		 -> UART_buffer(COMRAM[16]), 
   945                           ;!
   946                           ;!    memset@p	PTR unsigned char  size(2) Largest target is 16
   947                           ;!		 -> UART_buffer(COMRAM[16]), 
   948                           ;!
   949                           ;!    utoa@buf	PTR unsigned char  size(2) Largest target is 10
   950                           ;!		 -> send_Status@buffer(COMRAM[10]), 
   951                           ;!
   952                           ;!    sp__utoa	PTR unsigned char  size(2) Largest target is 10
   953                           ;!		 -> send_Status@buffer(COMRAM[10]), 
   954                           ;!
   955                           ;!    itoa@buf	PTR unsigned char  size(2) Largest target is 10
   956                           ;!		 -> send_Status@buffer(COMRAM[10]), 
   957                           ;!
   958                           ;!    itoa@cp	PTR unsigned char  size(2) Largest target is 10
   959                           ;!		 -> send_Status@buffer(COMRAM[10]), 
   960                           ;!
   961                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 16
   962                           ;!		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 
   963                           ;!
   964                           ;!    sp__itoa	PTR unsigned char  size(2) Largest target is 10
   965                           ;!		 -> send_Status@buffer(COMRAM[10]), 
   966                           ;!
   967                           ;!    sp__memset	PTR void  size(2) Largest target is 16
   968                           ;!		 -> UART_buffer(COMRAM[16]), 
   969                           ;!
   970                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
   971                           ;!		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[4]), 
   972                           ;!		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[4]), 
   973                           ;!		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[6]), 
   974                           ;!		 -> STR_1(CODE[5]), send_Status@buffer(COMRAM[10]), 
   975                           ;!
   976                           
   977                           
   978                           ;!
   979                           ;!Critical Paths under _main in COMRAM
   980                           ;!
   981                           ;!    _main->_send_Status
   982                           ;!    _strstr->_strncmp
   983                           ;!    _strncmp->_strlen
   984                           ;!    _send_Status->_itoa
   985                           ;!    _itoa->_utoa
   986                           ;!    _utoa->___lwdiv
   987                           ;!    _UART_Write_Text->_UART_Write_byte
   988                           ;!    _ADC_Get->_delay_ms
   989                           ;!    _delay_s->_delay_ms
   990                           ;!    _UART_clean_buffer->_memset
   991                           ;!
   992                           ;!Critical Paths under _UART_add_buffer in COMRAM
   993                           ;!
   994                           ;!    None.
   995                           ;!
   996                           ;!Critical Paths under _main in BANK0
   997                           ;!
   998                           ;!    None.
   999                           ;!
  1000                           ;!Critical Paths under _UART_add_buffer in BANK0
  1001                           ;!
  1002                           ;!    None.
  1003                           
  1004 ;;
  1005 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1006 ;;
  1007                           
  1008                           ;!
  1009                           ;!Call Graph Tables:
  1010                           ;!
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1013                           ;! ---------------------------------------------------------------------------------
  1014                           ;! (0) _main                                                 2     2      0    8851
  1015                           ;!                                             46 COMRAM     1     1      0
  1016                           ;!                           _ADC_Init
  1017                           ;!                            _IC_Init
  1018                           ;!                          _UART_Init
  1019                           ;!                    _UART_Write_Text
  1020                           ;!                  _UART_clean_buffer
  1021                           ;!                           _delay_ms
  1022                           ;!                            _delay_s
  1023                           ;!                        _send_Status
  1024                           ;!                             _strstr
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (1) _strstr                                               4     0      4    1857
  1027                           ;!                                             19 COMRAM     4     0      4
  1028                           ;!                             _strchr
  1029                           ;!                             _strlen
  1030                           ;!                            _strncmp
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (2) _strncmp                                              9     3      6     362
  1033                           ;!                                             10 COMRAM     9     3      6
  1034                           ;!                             _strlen (ARG)
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (2) _strlen                                               6     4      2     166
  1037                           ;!                                              4 COMRAM     6     4      2
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (2) _strchr                                               5     1      4     240
  1040                           ;!                                              4 COMRAM     5     1      4
  1041                           ;! ---------------------------------------------------------------------------------
  1042                           ;! (1) _send_Status                                         18    18      0    4196
  1043                           ;!                                             28 COMRAM    18    18      0
  1044                           ;!                            _ADC_Get
  1045                           ;!                    _UART_Write_Text
  1046                           ;!                            ___lldiv
  1047                           ;!                             ___lmul
  1048                           ;!                               _itoa
  1049                           ;! ---------------------------------------------------------------------------------
  1050                           ;! (2) _itoa                                                 8     2      6    1698
  1051                           ;!                                             20 COMRAM     8     2      6
  1052                           ;!                               _utoa
  1053                           ;! ---------------------------------------------------------------------------------
  1054                           ;! (3) _utoa                                                 9     3      6    1307
  1055                           ;!                                             11 COMRAM     9     3      6
  1056                           ;!                            ___lwdiv
  1057                           ;!                            ___lwmod
  1058                           ;! ---------------------------------------------------------------------------------
  1059                           ;! (4) ___lwmod                                              5     1      4     311
  1060                           ;!                                              4 COMRAM     5     1      4
  1061                           ;! ---------------------------------------------------------------------------------
  1062                           ;! (4) ___lwdiv                                              7     3      4     466
  1063                           ;!                                              4 COMRAM     7     3      4
  1064                           ;! ---------------------------------------------------------------------------------
  1065                           ;! (2) ___lmul                                              12     4      8     370
  1066                           ;!                                              4 COMRAM    12     4      8
  1067                           ;! ---------------------------------------------------------------------------------
  1068                           ;! (2) ___lldiv                                             13     5      8     314
  1069                           ;!                                              4 COMRAM    13     5      8
  1070                           ;! ---------------------------------------------------------------------------------
  1071                           ;! (2) _UART_Write_Text                                      7     5      2    1192
  1072                           ;!                                              5 COMRAM     7     5      2
  1073                           ;!                    _UART_Write_byte
  1074                           ;! ---------------------------------------------------------------------------------
  1075                           ;! (3) _UART_Write_byte                                      1     1      0      15
  1076                           ;!                                              4 COMRAM     1     1      0
  1077                           ;! ---------------------------------------------------------------------------------
  1078                           ;! (2) _ADC_Get                                              6     4      2     501
  1079                           ;!                                              7 COMRAM     6     4      2
  1080                           ;!                           _delay_ms
  1081                           ;! ---------------------------------------------------------------------------------
  1082                           ;! (1) _delay_s                                              2     0      2     804
  1083                           ;!                                              7 COMRAM     2     0      2
  1084                           ;!                           _delay_ms
  1085                           ;! ---------------------------------------------------------------------------------
  1086                           ;! (3) _delay_ms                                             3     1      2     478
  1087                           ;!                                              4 COMRAM     3     1      2
  1088                           ;! ---------------------------------------------------------------------------------
  1089                           ;! (1) _UART_clean_buffer                                    0     0      0     324
  1090                           ;!                             _memset
  1091                           ;! ---------------------------------------------------------------------------------
  1092                           ;! (2) _memset                                               8     2      6     324
  1093                           ;!                                              4 COMRAM     8     2      6
  1094                           ;! ---------------------------------------------------------------------------------
  1095                           ;! (1) _UART_Init                                            0     0      0       0
  1096                           ;! ---------------------------------------------------------------------------------
  1097                           ;! (1) _IC_Init                                              0     0      0       0
  1098                           ;! ---------------------------------------------------------------------------------
  1099                           ;! (1) _ADC_Init                                             0     0      0       0
  1100                           ;! ---------------------------------------------------------------------------------
  1101                           ;! Estimated maximum stack depth 4
  1102                           ;! ---------------------------------------------------------------------------------
  1103                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1104                           ;! ---------------------------------------------------------------------------------
  1105                           ;! (5) _UART_add_buffer                                      4     4      0       0
  1106                           ;!                                              0 COMRAM     4     4      0
  1107                           ;! ---------------------------------------------------------------------------------
  1108                           ;! Estimated maximum stack depth 5
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;!
  1111                           ;! Call Graph Graphs:
  1112                           ;!
  1113                           ;! _main (ROOT)
  1114                           ;!   _ADC_Init
  1115                           ;!   _IC_Init
  1116                           ;!   _UART_Init
  1117                           ;!   _UART_Write_Text
  1118                           ;!     _UART_Write_byte
  1119                           ;!   _UART_clean_buffer
  1120                           ;!     _memset
  1121                           ;!   _delay_ms
  1122                           ;!   _delay_s
  1123                           ;!     _delay_ms
  1124                           ;!   _send_Status
  1125                           ;!     _ADC_Get
  1126                           ;!       _delay_ms
  1127                           ;!     _UART_Write_Text
  1128                           ;!       _UART_Write_byte
  1129                           ;!     ___lldiv
  1130                           ;!     ___lmul
  1131                           ;!     _itoa
  1132                           ;!       _utoa
  1133                           ;!         ___lwdiv
  1134                           ;!         ___lwmod
  1135                           ;!   _strstr
  1136                           ;!     _strchr
  1137                           ;!     _strlen
  1138                           ;!     _strncmp
  1139                           ;!       _strlen (ARG)
  1140                           ;!
  1141                           ;! _UART_add_buffer (ROOT)
  1142                           ;!
  1143                           
  1144                           ;! Address spaces:
  1145                           
  1146                           ;!Name               Size   Autos  Total    Cost      Usage
  1147                           ;!BIGRAM              FF      0       0       6        0.0%
  1148                           ;!EEDATA              80      0       0       0        0.0%
  1149                           ;!BITBANK0            80      0       0       3        0.0%
  1150                           ;!BANK0               80      0       0       4        0.0%
  1151                           ;!BITCOMRAM           7E      0       1       0        0.8%
  1152                           ;!COMRAM              7E     2F      43       1       53.2%
  1153                           ;!BITSFR               0      0       0     200        0.0%
  1154                           ;!SFR                  0      0       0     200        0.0%
  1155                           ;!STACK                0      0       0       2        0.0%
  1156                           ;!NULL                 0      0       0       0        0.0%
  1157                           ;!ABS                  0      0      43       5        0.0%
  1158                           ;!DATA                 0      0      43       7        0.0%
  1159                           ;!CODE                 0      0       0       0        0.0%
  1160                           
  1161                           	global	_main
  1162                           
  1163 ;; *************** function _main *****************
  1164 ;; Defined at:
  1165 ;;		line 69 in file "main.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  counter         1    0        unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0
  1179 ;;      Params:         0       0
  1180 ;;      Locals:         0       0
  1181 ;;      Temps:          1       0
  1182 ;;      Totals:         1       0
  1183 ;;Total ram usage:        1 bytes
  1184 ;; Hardware stack levels required when called:    5
  1185 ;; This function calls:
  1186 ;;		_ADC_Init
  1187 ;;		_IC_Init
  1188 ;;		_UART_Init
  1189 ;;		_UART_Write_Text
  1190 ;;		_UART_clean_buffer
  1191 ;;		_delay_ms
  1192 ;;		_delay_s
  1193 ;;		_send_Status
  1194 ;;		_strstr
  1195 ;; This function is called by:
  1196 ;;		Startup code after reset
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1200                           	file	"main.c"
  1201                           	line	69
  1202                           global __ptext0
  1203                           __ptext0:
  1204  00016E                     psect	text0
  1205                           	file	"main.c"
  1206                           	line	69
  1207                           	global	__size_of_main
  1208                           	__size_of_main	equ	__end_of_main-_main
  1209  0000                     	
  1210                           _main:
  1211  00016E                     ;incstack = 0
  1212                           	opt	stack 26
  1213                           	line	74
  1214                           	
  1215                           l1633:
  1216  00016E                     ;main.c: 74: IC_Init();
  1217                           	call	_IC_Init	;wreg free
  1218  00016E  EC91  F006         	line	75
  1219                           	
  1220                           l1635:
  1221  000172                     ;main.c: 75: UART_Init();
  1222                           	call	_UART_Init	;wreg free
  1223  000172  ECE2  F006         	line	76
  1224                           	
  1225                           l1637:
  1226  000176                     ;main.c: 76: ADC_Init();
  1227                           	call	_ADC_Init	;wreg free
  1228  000176  ECF1  F006         	line	78
  1229                           	
  1230                           l1639:
  1231  00017A                     ;main.c: 78: LATBbits.LATB4 = 1;
  1232                           	bsf	((c:3978)),c,4	;volatile
  1233  00017A  888A               	line	79
  1234                           	
  1235                           l1641:
  1236  00017C                     ;main.c: 79: delay_ms(50);
  1237                           	movlw	high(032h)
  1238  00017C  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1239  00017E  6E06               	movlw	low(032h)
  1240  000180  0E32               	movwf	((c:delay_ms@repeat_2)),c
  1241  000182  6E05               	call	_delay_ms	;wreg free
  1242  000184  EC5B  F006         	line	80
  1243                           	
  1244                           l1643:
  1245  000188                     ;main.c: 80: LATBbits.LATB4 = 0;
  1246                           	bcf	((c:3978)),c,4	;volatile
  1247  000188  988A               	line	82
  1248                           	
  1249                           l1645:
  1250  00018A                     ;main.c: 82: LATAbits.LATA0 = 1;
  1251                           	bsf	((c:3977)),c,0	;volatile
  1252  00018A  8089               	line	83
  1253                           	
  1254                           l1647:
  1255  00018C                     ;main.c: 83: LATBbits.LATB3 = 0;
  1256                           	bcf	((c:3978)),c,3	;volatile
  1257  00018C  968A               	line	84
  1258                           	
  1259                           l1649:
  1260  00018E                     ;main.c: 84: LATBbits.LATB5 = 1;
  1261                           	bsf	((c:3978)),c,5	;volatile
  1262  00018E  8A8A               	line	85
  1263                           	
  1264                           l1651:
  1265  000190                     ;main.c: 85: delay_s(1);
  1266                           	movlw	high(01h)
  1267  000190  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1268  000192  6E09               	movlw	low(01h)
  1269  000194  0E01               	movwf	((c:delay_s@repeat_3)),c
  1270  000196  6E08               	call	_delay_s	;wreg free
  1271  000198  EC77  F006         	line	86
  1272                           	
  1273                           l1653:
  1274  00019C                     ;main.c: 86: LATAbits.LATA0 = 0;
  1275                           	bcf	((c:3977)),c,0	;volatile
  1276  00019C  9089               	line	87
  1277                           	
  1278                           l1655:
  1279  00019E                     ;main.c: 87: LATBbits.LATB3 = 1;
  1280                           	bsf	((c:3978)),c,3	;volatile
  1281  00019E  868A               	line	88
  1282                           	
  1283                           l1657:
  1284  0001A0                     ;main.c: 88: LATBbits.LATB5 = 0;
  1285                           	bcf	((c:3978)),c,5	;volatile
  1286  0001A0  9A8A               	line	89
  1287                           	
  1288                           l1659:
  1289  0001A2                     ;main.c: 89: delay_s(1);
  1290                           	movlw	high(01h)
  1291  0001A2  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1292  0001A4  6E09               	movlw	low(01h)
  1293  0001A6  0E01               	movwf	((c:delay_s@repeat_3)),c
  1294  0001A8  6E08               	call	_delay_s	;wreg free
  1295  0001AA  EC77  F006         	line	90
  1296                           	
  1297                           l1661:
  1298  0001AE                     ;main.c: 90: LATAbits.LATA0 = 1;
  1299                           	bsf	((c:3977)),c,0	;volatile
  1300  0001AE  8089               	line	91
  1301                           	
  1302                           l1663:
  1303  0001B0                     ;main.c: 91: LATBbits.LATB3 = 0;
  1304                           	bcf	((c:3978)),c,3	;volatile
  1305  0001B0  968A               	line	92
  1306                           	
  1307                           l1665:
  1308  0001B2                     ;main.c: 92: delay_s(1);
  1309                           	movlw	high(01h)
  1310  0001B2  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1311  0001B4  6E09               	movlw	low(01h)
  1312  0001B6  0E01               	movwf	((c:delay_s@repeat_3)),c
  1313  0001B8  6E08               	call	_delay_s	;wreg free
  1314  0001BA  EC77  F006         	line	93
  1315                           	
  1316                           l1667:
  1317  0001BE                     ;main.c: 93: LATAbits.LATA0 = 0;
  1318                           	bcf	((c:3977)),c,0	;volatile
  1319  0001BE  9089               	line	94
  1320                           	
  1321                           l1669:
  1322  0001C0                     ;main.c: 94: LATBbits.LATB3 = 1;
  1323                           	bsf	((c:3978)),c,3	;volatile
  1324  0001C0  868A               	line	95
  1325                           	
  1326                           l1671:
  1327  0001C2                     ;main.c: 95: delay_s(1);
  1328                           	movlw	high(01h)
  1329  0001C2  0E00               	movwf	((c:delay_s@repeat_3+1)),c
  1330  0001C4  6E09               	movlw	low(01h)
  1331  0001C6  0E01               	movwf	((c:delay_s@repeat_3)),c
  1332  0001C8  6E08               	call	_delay_s	;wreg free
  1333  0001CA  EC77  F006         	line	96
  1334                           	
  1335                           l1673:
  1336  0001CE                     ;main.c: 96: LATAbits.LATA0 = 0;
  1337                           	bcf	((c:3977)),c,0	;volatile
  1338  0001CE  9089               	line	97
  1339                           	
  1340                           l1675:
  1341  0001D0                     ;main.c: 97: LATBbits.LATB3 = 0;
  1342                           	bcf	((c:3978)),c,3	;volatile
  1343  0001D0  968A               	line	99
  1344                           	
  1345                           l1677:
  1346  0001D2                     ;main.c: 99: UART_Write_Text((unsigned char *) "Hello World1\n");
  1347                           		movlw	low(STR_11)
  1348  0001D2  0E10               	movwf	((c:UART_Write_Text@text)),c
  1349  0001D4  6E06               	movlw	high(STR_11)
  1350  0001D6  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1351  0001D8  6E07               
  1352                           	call	_UART_Write_Text	;wreg free
  1353  0001DA  EC98  F004         	line	100
  1354                           	
  1355                           l1679:
  1356  0001DE                     ;main.c: 100: UART_Write_Text((unsigned char *) "Hello World2\n");
  1357                           		movlw	low(STR_12)
  1358  0001DE  0E1E               	movwf	((c:UART_Write_Text@text)),c
  1359  0001E0  6E06               	movlw	high(STR_12)
  1360  0001E2  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1361  0001E4  6E07               
  1362                           	call	_UART_Write_Text	;wreg free
  1363  0001E6  EC98  F004         	line	101
  1364                           	
  1365                           l1681:
  1366  0001EA                     ;main.c: 101: UART_Write_Text((unsigned char *) "Hello World31\n");
  1367                           		movlw	low(STR_13)
  1368  0001EA  0E01               	movwf	((c:UART_Write_Text@text)),c
  1369  0001EC  6E06               	movlw	high(STR_13)
  1370  0001EE  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  1371  0001F0  6E07               
  1372                           	call	_UART_Write_Text	;wreg free
  1373  0001F2  EC98  F004         	goto	l1683
  1374  0001F6  EFFD  F000         	line	104
  1375                           ;main.c: 103: unsigned char counter;;main.c: 104: while (1) {
  1376                           	
  1377                           l137:
  1378  0001FA                     	line	109
  1379                           	
  1380                           l1683:
  1381  0001FA                     ;main.c: 109: if (strstr(UART_buffer, "STATUS") != (0)) {
  1382                           		movlw	low(_UART_buffer)
  1383  0001FA  0E32               	movwf	((c:strstr@s1)),c
  1384  0001FC  6E14               	movlw	high(_UART_buffer)
  1385  0001FE  0E00               	movwf	((c:strstr@s1+1)),c
  1386  000200  6E15               
  1387                           		movlw	low(STR_14)
  1388  000202  0E4E               	movwf	((c:strstr@s2)),c
  1389  000204  6E16               	movlw	high(STR_14)
  1390  000206  0E01               	movwf	((c:strstr@s2+1)),c
  1391  000208  6E17               
  1392                           	call	_strstr	;wreg free
  1393  00020A  EC83  F003         	movf	(0+?_strstr),c,w
  1394  00020E  5014               iorwf	(1+?_strstr),c,w
  1395  000210  1015               	btfsc	status,2
  1396  000212  B4D8               	goto	u951
  1397  000214  EF0E  F001         	goto	u950
  1398  000218  EF10  F001         
  1399                           u951:
  1400  00021C                     	goto	l1689
  1401  00021C  EF16  F001         u950:
  1402  000220                     	line	110
  1403                           	
  1404                           l1685:
  1405  000220                     ;main.c: 110: UART_clean_buffer();
  1406                           	call	_UART_clean_buffer	;wreg free
  1407  000220  ECC2  F006         	line	111
  1408                           	
  1409                           l1687:
  1410  000224                     ;main.c: 111: send_Status();
  1411                           	call	_send_Status	;wreg free
  1412  000224  EC5C  F002         	line	112
  1413                           ;main.c: 112: } else if (strstr(UART_buffer, "ALA_ON") != (0)) {
  1414                           	goto	l1729
  1415  000228  EFB3  F001         	
  1416                           l138:
  1417  00022C                     	
  1418                           l1689:
  1419  00022C                     		movlw	low(_UART_buffer)
  1420  00022C  0E32               	movwf	((c:strstr@s1)),c
  1421  00022E  6E14               	movlw	high(_UART_buffer)
  1422  000230  0E00               	movwf	((c:strstr@s1+1)),c
  1423  000232  6E15               
  1424                           		movlw	low(STR_15)
  1425  000234  0E47               	movwf	((c:strstr@s2)),c
  1426  000236  6E16               	movlw	high(STR_15)
  1427  000238  0E01               	movwf	((c:strstr@s2+1)),c
  1428  00023A  6E17               
  1429                           	call	_strstr	;wreg free
  1430  00023C  EC83  F003         	movf	(0+?_strstr),c,w
  1431  000240  5014               iorwf	(1+?_strstr),c,w
  1432  000242  1015               	btfsc	status,2
  1433  000244  B4D8               	goto	u961
  1434  000246  EF27  F001         	goto	u960
  1435  00024A  EF29  F001         
  1436                           u961:
  1437  00024E                     	goto	l1695
  1438  00024E  EF30  F001         u960:
  1439  000252                     	line	113
  1440                           	
  1441                           l1691:
  1442  000252                     ;main.c: 113: UART_clean_buffer();
  1443                           	call	_UART_clean_buffer	;wreg free
  1444  000252  ECC2  F006         	line	114
  1445                           	
  1446                           l1693:
  1447  000256                     ;main.c: 114: state = state | 0b00001000;
  1448                           	movf	((c:_state)),c,w
  1449  000256  5030               	iorlw	low(08h)
  1450  000258  0908               	movwf	((c:_state)),c
  1451  00025A  6E30               	line	115
  1452                           ;main.c: 115: } else if (strstr(UART_buffer, "ALA_OFF") != (0)) {
  1453                           	goto	l1729
  1454  00025C  EFB3  F001         	
  1455                           l140:
  1456  000260                     	
  1457                           l1695:
  1458  000260                     		movlw	low(_UART_buffer)
  1459  000260  0E32               	movwf	((c:strstr@s1)),c
  1460  000262  6E14               	movlw	high(_UART_buffer)
  1461  000264  0E00               	movwf	((c:strstr@s1+1)),c
  1462  000266  6E15               
  1463                           		movlw	low(STR_16)
  1464  000268  0E3F               	movwf	((c:strstr@s2)),c
  1465  00026A  6E16               	movlw	high(STR_16)
  1466  00026C  0E01               	movwf	((c:strstr@s2+1)),c
  1467  00026E  6E17               
  1468                           	call	_strstr	;wreg free
  1469  000270  EC83  F003         	movf	(0+?_strstr),c,w
  1470  000274  5014               iorwf	(1+?_strstr),c,w
  1471  000276  1015               	btfsc	status,2
  1472  000278  B4D8               	goto	u971
  1473  00027A  EF41  F001         	goto	u970
  1474  00027E  EF43  F001         
  1475                           u971:
  1476  000282                     	goto	l1705
  1477  000282  EF50  F001         u970:
  1478  000286                     	line	116
  1479                           	
  1480                           l1697:
  1481  000286                     ;main.c: 116: UART_clean_buffer();
  1482                           	call	_UART_clean_buffer	;wreg free
  1483  000286  ECC2  F006         	line	117
  1484                           	
  1485                           l1699:
  1486  00028A                     ;main.c: 117: state = state & ~0b00010000;
  1487                           	movf	((c:_state)),c,w
  1488  00028A  5030               	andlw	low(0EFh)
  1489  00028C  0BEF               	movwf	((c:_state)),c
  1490  00028E  6E30               	line	118
  1491                           	
  1492                           l1701:
  1493  000290                     ;main.c: 118: state = state & ~0b00001000;
  1494                           	movf	((c:_state)),c,w
  1495  000290  5030               	andlw	low(0F7h)
  1496  000292  0BF7               	movwf	((c:_state)),c
  1497  000294  6E30               	line	119
  1498                           	
  1499                           l1703:
  1500  000296                     ;main.c: 119: state = state & ~0b00000010;
  1501                           	movf	((c:_state)),c,w
  1502  000296  5030               	andlw	low(0FDh)
  1503  000298  0BFD               	movwf	((c:_state)),c
  1504  00029A  6E30               	line	120
  1505                           ;main.c: 120: } else if (strstr(UART_buffer, "BEEP") != (0)) {
  1506                           	goto	l1729
  1507  00029C  EFB3  F001         	
  1508                           l142:
  1509  0002A0                     	
  1510                           l1705:
  1511  0002A0                     		movlw	low(_UART_buffer)
  1512  0002A0  0E32               	movwf	((c:strstr@s1)),c
  1513  0002A2  6E14               	movlw	high(_UART_buffer)
  1514  0002A4  0E00               	movwf	((c:strstr@s1+1)),c
  1515  0002A6  6E15               
  1516                           		movlw	low(STR_17)
  1517  0002A8  0E5B               	movwf	((c:strstr@s2)),c
  1518  0002AA  6E16               	movlw	high(STR_17)
  1519  0002AC  0E01               	movwf	((c:strstr@s2+1)),c
  1520  0002AE  6E17               
  1521                           	call	_strstr	;wreg free
  1522  0002B0  EC83  F003         	movf	(0+?_strstr),c,w
  1523  0002B4  5014               iorwf	(1+?_strstr),c,w
  1524  0002B6  1015               	btfsc	status,2
  1525  0002B8  B4D8               	goto	u981
  1526  0002BA  EF61  F001         	goto	u980
  1527  0002BE  EF63  F001         
  1528                           u981:
  1529  0002C2                     	goto	l1717
  1530  0002C2  EF75  F001         u980:
  1531  0002C6                     	line	121
  1532                           	
  1533                           l1707:
  1534  0002C6                     ;main.c: 121: UART_clean_buffer();
  1535                           	call	_UART_clean_buffer	;wreg free
  1536  0002C6  ECC2  F006         	line	122
  1537                           	
  1538                           l1709:
  1539  0002CA                     ;main.c: 122: LATBbits.LATB4 = 0b1;
  1540                           	bsf	((c:3978)),c,4	;volatile
  1541  0002CA  888A               	line	123
  1542                           	
  1543                           l1711:
  1544  0002CC                     ;main.c: 123: delay_ms(250);
  1545                           	movlw	high(0FAh)
  1546  0002CC  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1547  0002CE  6E06               	movlw	low(0FAh)
  1548  0002D0  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  1549  0002D2  6E05               	call	_delay_ms	;wreg free
  1550  0002D4  EC5B  F006         	line	124
  1551                           	
  1552                           l1713:
  1553  0002D8                     ;main.c: 124: LATBbits.LATB4 = 0b0;
  1554                           	bcf	((c:3978)),c,4	;volatile
  1555  0002D8  988A               	line	125
  1556                           	
  1557                           l1715:
  1558  0002DA                     ;main.c: 125: delay_ms(250);
  1559                           	movlw	high(0FAh)
  1560  0002DA  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1561  0002DC  6E06               	movlw	low(0FAh)
  1562  0002DE  0EFA               	movwf	((c:delay_ms@repeat_2)),c
  1563  0002E0  6E05               	call	_delay_ms	;wreg free
  1564  0002E2  EC5B  F006         	line	126
  1565                           ;main.c: 126: } else if (strstr(UART_buffer, "EXTRA_ON") != (0)) {
  1566                           	goto	l1729
  1567  0002E6  EFB3  F001         	
  1568                           l144:
  1569  0002EA                     	
  1570                           l1717:
  1571  0002EA                     		movlw	low(_UART_buffer)
  1572  0002EA  0E32               	movwf	((c:strstr@s1)),c
  1573  0002EC  6E14               	movlw	high(_UART_buffer)
  1574  0002EE  0E00               	movwf	((c:strstr@s1+1)),c
  1575  0002F0  6E15               
  1576                           		movlw	low(STR_18)
  1577  0002F2  0E36               	movwf	((c:strstr@s2)),c
  1578  0002F4  6E16               	movlw	high(STR_18)
  1579  0002F6  0E01               	movwf	((c:strstr@s2+1)),c
  1580  0002F8  6E17               
  1581                           	call	_strstr	;wreg free
  1582  0002FA  EC83  F003         	movf	(0+?_strstr),c,w
  1583  0002FE  5014               iorwf	(1+?_strstr),c,w
  1584  000300  1015               	btfsc	status,2
  1585  000302  B4D8               	goto	u991
  1586  000304  EF86  F001         	goto	u990
  1587  000308  EF88  F001         
  1588                           u991:
  1589  00030C                     	goto	l1723
  1590  00030C  EF8F  F001         u990:
  1591  000310                     	line	127
  1592                           	
  1593                           l1719:
  1594  000310                     ;main.c: 127: UART_clean_buffer();
  1595                           	call	_UART_clean_buffer	;wreg free
  1596  000310  ECC2  F006         	line	128
  1597                           	
  1598                           l1721:
  1599  000314                     ;main.c: 128: state = state | 0b00000001;
  1600                           	movf	((c:_state)),c,w
  1601  000314  5030               	iorlw	low(01h)
  1602  000316  0901               	movwf	((c:_state)),c
  1603  000318  6E30               	line	129
  1604                           ;main.c: 129: } else if (strstr(UART_buffer, "EXTRA_OFF") != (0)) {
  1605                           	goto	l1729
  1606  00031A  EFB3  F001         	
  1607                           l146:
  1608  00031E                     	
  1609                           l1723:
  1610  00031E                     		movlw	low(_UART_buffer)
  1611  00031E  0E32               	movwf	((c:strstr@s1)),c
  1612  000320  6E14               	movlw	high(_UART_buffer)
  1613  000322  0E00               	movwf	((c:strstr@s1+1)),c
  1614  000324  6E15               
  1615                           		movlw	low(STR_19)
  1616  000326  0E2C               	movwf	((c:strstr@s2)),c
  1617  000328  6E16               	movlw	high(STR_19)
  1618  00032A  0E01               	movwf	((c:strstr@s2+1)),c
  1619  00032C  6E17               
  1620                           	call	_strstr	;wreg free
  1621  00032E  EC83  F003         	movf	(0+?_strstr),c,w
  1622  000332  5014               iorwf	(1+?_strstr),c,w
  1623  000334  1015               	btfsc	status,2
  1624  000336  B4D8               	goto	u1001
  1625  000338  EFA0  F001         	goto	u1000
  1626  00033C  EFA2  F001         
  1627                           u1001:
  1628  000340                     	goto	l1729
  1629  000340  EFB3  F001         u1000:
  1630  000344                     	line	130
  1631                           	
  1632                           l1725:
  1633  000344                     ;main.c: 130: UART_clean_buffer();
  1634                           	call	_UART_clean_buffer	;wreg free
  1635  000344  ECC2  F006         	line	131
  1636                           	
  1637                           l1727:
  1638  000348                     ;main.c: 131: state = state & ~0b00000001;
  1639                           	movf	((c:_state)),c,w
  1640  000348  5030               	andlw	low(0FEh)
  1641  00034A  0BFE               	movwf	((c:_state)),c
  1642  00034C  6E30               	goto	l1729
  1643  00034E  EFB3  F001         	line	132
  1644                           	
  1645                           l148:
  1646  000352                     	goto	l1729
  1647  000352  EFB3  F001         	line	138
  1648                           	
  1649                           l147:
  1650  000356                     	goto	l1729
  1651  000356  EFB3  F001         	
  1652                           l145:
  1653  00035A                     	goto	l1729
  1654  00035A  EFB3  F001         	
  1655                           l143:
  1656  00035E                     	goto	l1729
  1657  00035E  EFB3  F001         	
  1658                           l141:
  1659  000362                     	goto	l1729
  1660  000362  EFB3  F001         	
  1661                           l139:
  1662  000366                     	
  1663                           l1729:
  1664  000366                     ;main.c: 132: };main.c: 138: if (PORTAbits.RA1 != AC_POWER_old) {
  1665                           	btfsc	((c:3968)),c,1	;volatile
  1666  000366  B280               	goto	u1011
  1667  000368  EFB8  F001         	goto	u1010
  1668  00036C  EFBC  F001         u1011:
  1669  000370                     	clrf	(??_main+0+0)&0ffh,c
  1670  000370  6A2F               	incf	(??_main+0+0)&0ffh,c
  1671  000372  2A2F               	goto	u1018
  1672  000374  EFBD  F001         u1010:
  1673  000378                     	clrf	(??_main+0+0)&0ffh,c
  1674  000378  6A2F               u1018:
  1675  00037A                     	movlw	0
  1676  00037A  0E00               	btfsc	(_AC_POWER_old/8),c,(_AC_POWER_old)&7
  1677  00037C  B042               	movlw	1
  1678  00037E  0E01               	xorwf	(??_main+0+0),c,w
  1679  000380  182F               	btfsc	status,2
  1680  000382  B4D8               	goto	u1021
  1681  000384  EFC6  F001         	goto	u1020
  1682  000388  EFC8  F001         u1021:
  1683  00038C                     	goto	l1737
  1684  00038C  EFEA  F001         u1020:
  1685  000390                     	line	139
  1686                           	
  1687                           l1731:
  1688  000390                     ;main.c: 139: AC_POWER_old = PORTAbits.RA1;
  1689                           	btfsc	((c:3968)),c,1	;volatile
  1690  000390  B280               	goto	u1031
  1691  000392  EFCD  F001         	goto	u1030
  1692  000396  EFD0  F001         u1031:
  1693  00039A                     	bsf	(_AC_POWER_old/8),c,(_AC_POWER_old)&7
  1694  00039A  8042               	goto	u1045
  1695  00039C  EFD1  F001         u1030:
  1696  0003A0                     	bcf	(_AC_POWER_old/8),c,(_AC_POWER_old)&7
  1697  0003A0  9042               u1045:
  1698  0003A2                     	line	140
  1699                           ;main.c: 140: if (PORTAbits.RA1) {
  1700                           	btfss	((c:3968)),c,1	;volatile
  1701  0003A2  A280               	goto	u1051
  1702  0003A4  EFD6  F001         	goto	u1050
  1703  0003A8  EFD8  F001         u1051:
  1704  0003AC                     	goto	l1735
  1705  0003AC  EFE0  F001         u1050:
  1706  0003B0                     	line	141
  1707                           	
  1708                           l1733:
  1709  0003B0                     ;main.c: 141: state = state | 0b00000100;
  1710                           	movf	((c:_state)),c,w
  1711  0003B0  5030               	iorlw	low(04h)
  1712  0003B2  0904               	movwf	((c:_state)),c
  1713  0003B4  6E30               	line	142
  1714                           ;main.c: 142: state = state | 0b00000001;
  1715                           	movf	((c:_state)),c,w
  1716  0003B6  5030               	iorlw	low(01h)
  1717  0003B8  0901               	movwf	((c:_state)),c
  1718  0003BA  6E30               	line	143
  1719                           ;main.c: 143: } else {
  1720                           	goto	l1737
  1721  0003BC  EFEA  F001         	
  1722                           l150:
  1723  0003C0                     	line	144
  1724                           	
  1725                           l1735:
  1726  0003C0                     ;main.c: 144: state = state & ~0b00000100;
  1727                           	movf	((c:_state)),c,w
  1728  0003C0  5030               	andlw	low(0FBh)
  1729  0003C2  0BFB               	movwf	((c:_state)),c
  1730  0003C4  6E30               	line	145
  1731                           ;main.c: 145: state = state & ~0b00000001;
  1732                           	movf	((c:_state)),c,w
  1733  0003C6  5030               	andlw	low(0FEh)
  1734  0003C8  0BFE               	movwf	((c:_state)),c
  1735  0003CA  6E30               	goto	l1737
  1736  0003CC  EFEA  F001         	line	146
  1737                           	
  1738                           l151:
  1739  0003D0                     	goto	l1737
  1740  0003D0  EFEA  F001         	line	147
  1741                           	
  1742                           l149:
  1743  0003D4                     	line	149
  1744                           	
  1745                           l1737:
  1746  0003D4                     ;main.c: 146: };main.c: 147: };main.c: 149: if (PORTBbits.RB2 | PORTAbits.RA7) {
  1747                           	movlw	0
  1748  0003D4  0E00               	btfsc	((c:3969)),c,2	;volatile
  1749  0003D6  B481               	movlw	1
  1750  0003D8  0E01               	btfsc	((c:3968)),c,7	;volatile
  1751  0003DA  BE80               	movlw	1
  1752  0003DC  0E01               
  1753                           	btfsc	wreg,0
  1754  0003DE  B0E8               	goto	u1061
  1755  0003E0  EFF4  F001         	goto	u1060
  1756  0003E4  EFF8  F001         u1061:
  1757  0003E8                     	clrf	(??_main+0+0)&0ffh,c
  1758  0003E8  6A2F               	incf	(??_main+0+0)&0ffh,c
  1759  0003EA  2A2F               	goto	u1068
  1760  0003EC  EFF9  F001         u1060:
  1761  0003F0                     	clrf	(??_main+0+0)&0ffh,c
  1762  0003F0  6A2F               u1068:
  1763  0003F2                     	movf	(??_main+0+0),c,w
  1764  0003F2  502F               	btfsc	status,2
  1765  0003F4  B4D8               	goto	u1071
  1766  0003F6  EFFF  F001         	goto	u1070
  1767  0003FA  EF01  F002         u1071:
  1768  0003FE                     	goto	l152
  1769  0003FE  EF16  F002         u1070:
  1770  000402                     	line	150
  1771                           	
  1772                           l1739:
  1773  000402                     ;main.c: 150: LATBbits.LATB3 = 1;
  1774                           	bsf	((c:3978)),c,3	;volatile
  1775  000402  868A               	line	151
  1776                           ;main.c: 151: if ((state & 0b00001000) == 0b00001000) {
  1777                           	
  1778                           	btfss	((c:_state)),c,(3)&7
  1779  000404  A630               	goto	u1081
  1780  000406  EF07  F002         	goto	u1080
  1781  00040A  EF09  F002         u1081:
  1782  00040E                     	goto	l154
  1783  00040E  EF17  F002         u1080:
  1784  000412                     	line	152
  1785                           	
  1786                           l1741:
  1787  000412                     ;main.c: 152: state = state | 0b00010000;
  1788                           	movf	((c:_state)),c,w
  1789  000412  5030               	iorlw	low(010h)
  1790  000414  0910               	movwf	((c:_state)),c
  1791  000416  6E30               	line	153
  1792                           ;main.c: 153: state = state | 0b00000010;
  1793                           	movf	((c:_state)),c,w
  1794  000418  5030               	iorlw	low(02h)
  1795  00041A  0902               	movwf	((c:_state)),c
  1796  00041C  6E30               	line	154
  1797                           ;main.c: 154: state = state & ~0b00000001;
  1798                           	movf	((c:_state)),c,w
  1799  00041E  5030               	andlw	low(0FEh)
  1800  000420  0BFE               	movwf	((c:_state)),c
  1801  000422  6E30               	goto	l154
  1802  000424  EF17  F002         	line	155
  1803                           	
  1804                           l153:
  1805  000428                     	line	156
  1806                           ;main.c: 155: };main.c: 156: } else {
  1807                           	goto	l154
  1808  000428  EF17  F002         	
  1809                           l152:
  1810  00042C                     	line	157
  1811                           ;main.c: 157: LATBbits.LATB3 = 0;
  1812                           	bcf	((c:3978)),c,3	;volatile
  1813  00042C  968A               	line	158
  1814                           	
  1815                           l154:
  1816  00042E                     	line	160
  1817                           ;main.c: 158: };main.c: 160: if ((state & 0b00000010) == 0b00000010) {
  1818                           	
  1819                           	btfss	((c:_state)),c,(1)&7
  1820  00042E  A230               	goto	u1091
  1821  000430  EF1C  F002         	goto	u1090
  1822  000434  EF1E  F002         u1091:
  1823  000438                     	goto	l155
  1824  000438  EF21  F002         u1090:
  1825  00043C                     	line	161
  1826                           	
  1827                           l1743:
  1828  00043C                     ;main.c: 161: LATBbits.LATB4 = 0b1;
  1829                           	bsf	((c:3978)),c,4	;volatile
  1830  00043C  888A               	line	162
  1831                           ;main.c: 162: } else {
  1832                           	goto	l156
  1833  00043E  EF22  F002         	
  1834                           l155:
  1835  000442                     	line	163
  1836                           ;main.c: 163: LATBbits.LATB4 = 0b0;
  1837                           	bcf	((c:3978)),c,4	;volatile
  1838  000442  988A               	line	164
  1839                           	
  1840                           l156:
  1841  000444                     	line	166
  1842                           ;main.c: 164: };main.c: 166: if ((state & 0b00000001) == 0b00000001) {
  1843                           	
  1844                           	btfss	((c:_state)),c,(0)&7
  1845  000444  A030               	goto	u1101
  1846  000446  EF27  F002         	goto	u1100
  1847  00044A  EF29  F002         u1101:
  1848  00044E                     	goto	l157
  1849  00044E  EF2C  F002         u1100:
  1850  000452                     	line	167
  1851                           	
  1852                           l1745:
  1853  000452                     ;main.c: 167: LATBbits.LATB5 = 0b1;
  1854                           	bsf	((c:3978)),c,5	;volatile
  1855  000452  8A8A               	line	168
  1856                           ;main.c: 168: } else {
  1857                           	goto	l1747
  1858  000454  EF2F  F002         	
  1859                           l157:
  1860  000458                     	line	169
  1861                           ;main.c: 169: LATBbits.LATB5 = 0b0;
  1862                           	bcf	((c:3978)),c,5	;volatile
  1863  000458  9A8A               	goto	l1747
  1864  00045A  EF2F  F002         	line	170
  1865                           	
  1866                           l158:
  1867  00045E                     	line	172
  1868                           	
  1869                           l1747:
  1870  00045E                     ;main.c: 170: };main.c: 172: if (state != old_state) {
  1871                           	movf	((c:_old_state)),c,w
  1872  00045E  5043               xorwf	((c:_state)),c,w
  1873  000460  1830               	btfsc	status,2
  1874  000462  B4D8               	goto	u1111
  1875  000464  EF36  F002         	goto	u1110
  1876  000468  EF38  F002         
  1877                           u1111:
  1878  00046C                     	goto	l1683
  1879  00046C  EFFD  F000         u1110:
  1880  000470                     	line	173
  1881                           	
  1882                           l1749:
  1883  000470                     ;main.c: 173: if ((state & 0b00000100) != (old_state & 0b00000100)) {
  1884                           	movff	(c:_old_state),??_main+0+0
  1885  000470  C043  F02F         	movlw	04h
  1886  000474  0E04               	andwf	(??_main+0+0),c
  1887  000476  162F               	movf	((c:_state)),c,w
  1888  000478  5030               	andlw	low(04h)
  1889  00047A  0B04               	xorwf	(??_main+0+0),c,w
  1890  00047C  182F               	btfsc	status,2
  1891  00047E  B4D8               	goto	u1121
  1892  000480  EF44  F002         	goto	u1120
  1893  000484  EF46  F002         u1121:
  1894  000488                     	goto	l1757
  1895  000488  EF50  F002         u1120:
  1896  00048C                     	line	174
  1897                           	
  1898                           l1751:
  1899  00048C                     ;main.c: 174: LATBbits.LATB4 = 1;
  1900                           	bsf	((c:3978)),c,4	;volatile
  1901  00048C  888A               	line	175
  1902                           	
  1903                           l1753:
  1904  00048E                     ;main.c: 175: delay_ms(50);
  1905                           	movlw	high(032h)
  1906  00048E  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  1907  000490  6E06               	movlw	low(032h)
  1908  000492  0E32               	movwf	((c:delay_ms@repeat_2)),c
  1909  000494  6E05               	call	_delay_ms	;wreg free
  1910  000496  EC5B  F006         	line	176
  1911                           	
  1912                           l1755:
  1913  00049A                     ;main.c: 176: LATBbits.LATB4 = 0;
  1914                           	bcf	((c:3978)),c,4	;volatile
  1915  00049A  988A               	goto	l1757
  1916  00049C  EF50  F002         	line	177
  1917                           	
  1918                           l160:
  1919  0004A0                     	line	178
  1920                           	
  1921                           l1757:
  1922  0004A0                     ;main.c: 177: };main.c: 178: old_state = state;
  1923                           	movff	(c:_state),(c:_old_state)
  1924  0004A0  C030  F043         	line	179
  1925                           	
  1926                           l1759:
  1927  0004A4                     ;main.c: 179: send_Status();
  1928                           	call	_send_Status	;wreg free
  1929  0004A4  EC5C  F002         	goto	l1683
  1930  0004A8  EFFD  F000         	line	180
  1931                           	
  1932                           l159:
  1933  0004AC                     	goto	l1683
  1934  0004AC  EFFD  F000         	line	182
  1935                           	
  1936                           l161:
  1937  0004B0                     	line	104
  1938                           	goto	l1683
  1939  0004B0  EFFD  F000         	
  1940                           l162:
  1941  0004B4                     	line	184
  1942                           	
  1943                           l163:
  1944  0004B4                     	global	start
  1945                           	goto	start
  1946  0004B4  EF3C  F000         	opt stack 0
  1947                           GLOBAL	__end_of_main
  1948                           	__end_of_main:
  1949  0004B8                     	signat	_main,89
  1950                           	global	_strstr
  1951                           
  1952 ;; *************** function _strstr *****************
  1953 ;; Defined at:
  1954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  s1              2   19[COMRAM] PTR const unsigned char 
  1957 ;;		 -> NULL(0), UART_buffer(16), 
  1958 ;;  s2              2   21[COMRAM] PTR const unsigned char 
  1959 ;;		 -> STR_19(10), STR_18(9), STR_17(5), STR_16(8), 
  1960 ;;		 -> STR_15(7), STR_14(7), 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   19[COMRAM] PTR unsigned char 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0
  1972 ;;      Params:         4       0
  1973 ;;      Locals:         0       0
  1974 ;;      Temps:          0       0
  1975 ;;      Totals:         4       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		_strchr
  1981 ;;		_strlen
  1982 ;;		_strncmp
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           psect	text1,class=CODE,space=0,reloc=2,group=2
  1988                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1989                           	line	4
  1990                           global __ptext1
  1991                           __ptext1:
  1992  000706                     psect	text1
  1993                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strstr.c"
  1994                           	line	4
  1995                           	global	__size_of_strstr
  1996                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  1997  0000                     	
  1998                           _strstr:
  1999  000706                     ;incstack = 0
  2000                           	opt	stack 28
  2001                           	line	6
  2002                           	
  2003                           l1615:
  2004  000706                     	goto	l1625
  2005  000706  EFC0  F003         	
  2006                           l855:
  2007  00070A                     	line	7
  2008                           	
  2009                           l1617:
  2010  00070A                     		movff	(c:strstr@s1),(c:strncmp@s1)
  2011  00070A  C014  F00B         	movff	(c:strstr@s1+1),(c:strncmp@s1+1)
  2012  00070E  C015  F00C         
  2013                           		movff	(c:strstr@s2),(c:strncmp@s2)
  2014  000712  C016  F00D         	movff	(c:strstr@s2+1),(c:strncmp@s2+1)
  2015  000716  C017  F00E         
  2016                           		movff	(c:strstr@s2),(c:strlen@s)
  2017  00071A  C016  F005         	movff	(c:strstr@s2+1),(c:strlen@s+1)
  2018  00071E  C017  F006         
  2019                           	call	_strlen	;wreg free
  2020  000722  ECC2  F005         	movff	0+?_strlen,(c:strncmp@len)
  2021  000726  C005  F00F         	movff	1+?_strlen,(c:strncmp@len+1)
  2022  00072A  C006  F010         	call	_strncmp	;wreg free
  2023  00072E  ECE0  F003         	movf	(0+?_strncmp),c,w
  2024  000732  500B               iorwf	(1+?_strncmp),c,w
  2025  000734  100C               	btfss	status,2
  2026  000736  A4D8               	goto	u921
  2027  000738  EFA0  F003         	goto	u920
  2028  00073C  EFA2  F003         
  2029                           u921:
  2030  000740                     	goto	l1623
  2031  000740  EFAA  F003         u920:
  2032  000744                     	line	8
  2033                           	
  2034                           l1619:
  2035  000744                     		movff	(c:strstr@s1),(c:?_strstr)
  2036  000744  C014  F014         	movff	(c:strstr@s1+1),(c:?_strstr+1)
  2037  000748  C015  F015         
  2038                           	goto	l857
  2039  00074C  EFDF  F003         	
  2040                           l1621:
  2041  000750                     	goto	l857
  2042  000750  EFDF  F003         	
  2043                           l856:
  2044  000754                     	line	9
  2045                           	
  2046                           l1623:
  2047  000754                     	movlw	low(01h)
  2048  000754  0E01               	addwf	((c:strstr@s1)),c,w
  2049  000756  2414               	movwf	((c:strchr@ptr)),c
  2050  000758  6E05               	movlw	high(01h)
  2051  00075A  0E00               	addwfc	((c:strstr@s1+1)),c,w
  2052  00075C  2015               	movwf	1+((c:strchr@ptr)),c
  2053  00075E  6E06               	movff	(c:strstr@s2),tblptrl
  2054  000760  C016  FFF6         	movff	(c:strstr@s2+1),tblptrh
  2055  000764  C017  FFF7         	if	0	;tblptru may be non-zero
  2056  000768                     	clrf	tblptru
  2058  000768                     	if	0	;tblptru may be non-zero
  2059  000768                     	global __mediumconst
  2060                           movlw	low highword(__mediumconst)
  2063  000768                     	tblrd	*
  2064  000768  0008               	
  2065                           	movf	tablat,w
  2066  00076A  50F5               
  2067                           	movwf	((c:strchr@chr)),c
  2068  00076C  6E07               	clrf	((c:strchr@chr+1)),c
  2069  00076E  6A08               	call	_strchr	;wreg free
  2070  000770  EC96  F005         	movff	0+?_strchr,(c:strstr@s1)
  2071  000774  C005  F014         	movff	1+?_strchr,(c:strstr@s1+1)
  2072  000778  C006  F015         	goto	l1625
  2073  00077C  EFC0  F003         	line	10
  2074                           	
  2075                           l854:
  2076  000780                     	line	6
  2077                           	
  2078                           l1625:
  2079  000780                     	movf	((c:strstr@s1)),c,w
  2080  000780  5014               iorwf	((c:strstr@s1+1)),c,w
  2081  000782  1015               	btfsc	status,2
  2082  000784  B4D8               	goto	u931
  2083  000786  EFC7  F003         	goto	u930
  2084  00078A  EFC9  F003         
  2085                           u931:
  2086  00078E                     	goto	l1629
  2087  00078E  EFD9  F003         u930:
  2088  000792                     	
  2089                           l1627:
  2090  000792                     	movff	(c:strstr@s1),fsr2l
  2091  000792  C014  FFD9         	movff	(c:strstr@s1+1),fsr2h
  2092  000796  C015  FFDA         	movf	indf2,w
  2093  00079A  50DF               	btfss	status,2
  2094  00079C  A4D8               	goto	u941
  2095  00079E  EFD3  F003         	goto	u940
  2096  0007A2  EFD5  F003         u941:
  2097  0007A6                     	goto	l1617
  2098  0007A6  EF85  F003         u940:
  2099  0007AA                     	goto	l1629
  2100  0007AA  EFD9  F003         	
  2101                           l859:
  2102  0007AE                     	goto	l1629
  2103  0007AE  EFD9  F003         	
  2104                           l860:
  2105  0007B2                     	line	11
  2106                           	
  2107                           l1629:
  2108  0007B2                     		movlw	low(0)
  2109  0007B2  0E00               	movwf	((c:?_strstr)),c
  2110  0007B4  6E14               	movlw	high(0)
  2111  0007B6  0E00               	movwf	((c:?_strstr+1)),c
  2112  0007B8  6E15               
  2113                           	goto	l857
  2114  0007BA  EFDF  F003         	
  2115                           l1631:
  2116  0007BE                     	line	12
  2117                           	
  2118                           l857:
  2119  0007BE                     	return	;funcret
  2120  0007BE  0012               	opt stack 0
  2121                           GLOBAL	__end_of_strstr
  2122                           	__end_of_strstr:
  2123  0007C0                     	signat	_strstr,8314
  2124                           	global	_strncmp
  2125                           
  2126 ;; *************** function _strncmp *****************
  2127 ;; Defined at:
  2128 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  2131 ;;		 -> NULL(0), UART_buffer(16), 
  2132 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  2133 ;;		 -> STR_19(10), STR_18(9), STR_17(5), STR_16(8), 
  2134 ;;		 -> STR_15(7), STR_14(7), 
  2135 ;;  len             2   14[COMRAM] unsigned int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   10[COMRAM] int 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0
  2147 ;;      Params:         6       0
  2148 ;;      Locals:         0       0
  2149 ;;      Temps:          3       0
  2150 ;;      Totals:         9       0
  2151 ;;Total ram usage:        9 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_strstr
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           psect	text2,class=CODE,space=0,reloc=2,group=2
  2161                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2162                           	line	4
  2163                           global __ptext2
  2164                           __ptext2:
  2165  0007C0                     psect	text2
  2166                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
  2167                           	line	4
  2168                           	global	__size_of_strncmp
  2169                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  2170  0000                     	
  2171                           _strncmp:
  2172  0007C0                     ;incstack = 0
  2173                           	opt	stack 28
  2174                           	line	6
  2175                           	
  2176                           l1539:
  2177  0007C0                     	goto	l1551
  2178  0007C0  EF26  F004         	
  2179                           l876:
  2180  0007C4                     	line	7
  2181                           	
  2182                           l1541:
  2183  0007C4                     	movff	(c:strncmp@s1),fsr2l
  2184  0007C4  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2185  0007C8  C00C  FFDA         	movf	indf2,w
  2186  0007CC  50DF               	btfsc	status,2
  2187  0007CE  B4D8               	goto	u811
  2188  0007D0  EFEC  F003         	goto	u810
  2189  0007D4  EFEE  F003         u811:
  2190  0007D8                     	goto	l1545
  2191  0007D8  EF04  F004         u810:
  2192  0007DC                     	
  2193                           l1543:
  2194  0007DC                     	movff	(c:strncmp@s1),fsr2l
  2195  0007DC  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2196  0007E0  C00C  FFDA         	movf	indf2,w
  2197  0007E4  50DF               	movwf	(??_strncmp+0+0)&0ffh,c
  2198  0007E6  6E11               	movff	(c:strncmp@s2),tblptrl
  2199  0007E8  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2200  0007EC  C00E  FFF7         	if	0	;tblptru may be non-zero
  2201  0007F0                     	clrf	tblptru
  2203  0007F0                     	if	0	;tblptru may be non-zero
  2204  0007F0                     	global __mediumconst
  2205                           movlw	low highword(__mediumconst)
  2208  0007F0                     	tblrd	*
  2209  0007F0  0008               	
  2210                           	movf	tablat,w
  2211  0007F2  50F5               	xorwf	((??_strncmp+0+0)),c,w
  2212  0007F4  1811               
  2213                           	btfsc	status,2
  2214  0007F6  B4D8               	goto	u821
  2215  0007F8  EF00  F004         	goto	u820
  2216  0007FC  EF02  F004         u821:
  2217  000800                     	goto	l1549
  2218  000800  EF20  F004         u820:
  2219  000804                     	goto	l1545
  2220  000804  EF04  F004         	
  2221                           l879:
  2222  000808                     	line	8
  2223                           	
  2224                           l1545:
  2225  000808                     	movff	(c:strncmp@s2),tblptrl
  2226  000808  C00D  FFF6         	movff	(c:strncmp@s2+1),tblptrh
  2227  00080C  C00E  FFF7         	if	0	;tblptru may be non-zero
  2228  000810                     	clrf	tblptru
  2230  000810                     	if	0	;tblptru may be non-zero
  2231  000810                     	global __mediumconst
  2232                           movlw	low highword(__mediumconst)
  2235  000810                     	tblrd	*
  2236  000810  0008               	
  2237                           	movf	tablat,w
  2238  000812  50F5               	movwf	(??_strncmp+0+0)&0ffh,c
  2239  000814  6E11               	clrf	(??_strncmp+0+0+1)&0ffh,c
  2240  000816  6A12               
  2241                           	comf	(??_strncmp+0+0),c
  2242  000818  1E11               	comf	(??_strncmp+0+1),c
  2243  00081A  1E12               	infsnz	(??_strncmp+0+0),c
  2244  00081C  4A11               	incf	(??_strncmp+0+1),c
  2245  00081E  2A12               	movff	(c:strncmp@s1),fsr2l
  2246  000820  C00B  FFD9         	movff	(c:strncmp@s1+1),fsr2h
  2247  000824  C00C  FFDA         	movf	indf2,w
  2248  000828  50DF               	movwf	(??_strncmp+2+0)&0ffh,c
  2249  00082A  6E13               	movf	((??_strncmp+2+0)),c,w
  2250  00082C  5013               	addwf	(??_strncmp+0+0),c,w
  2251  00082E  2411               	movwf	((c:?_strncmp)),c
  2252  000830  6E0B               	movlw	0
  2253  000832  0E00               	addwfc	(??_strncmp+0+1),c,w
  2254  000834  2012               	movwf	1+((c:?_strncmp)),c
  2255  000836  6E0C               	goto	l880
  2256  000838  EF3B  F004         	
  2257                           l1547:
  2258  00083C                     	goto	l880
  2259  00083C  EF3B  F004         	
  2260                           l877:
  2261  000840                     	line	10
  2262                           	
  2263                           l1549:
  2264  000840                     	infsnz	((c:strncmp@s1)),c
  2265  000840  4A0B               	incf	((c:strncmp@s1+1)),c
  2266  000842  2A0C               	line	11
  2267                           	infsnz	((c:strncmp@s2)),c
  2268  000844  4A0D               	incf	((c:strncmp@s2+1)),c
  2269  000846  2A0E               	goto	l1551
  2270  000848  EF26  F004         	line	12
  2271                           	
  2272                           l875:
  2273  00084C                     	line	6
  2274                           	
  2275                           l1551:
  2276  00084C                     	decf	((c:strncmp@len)),c
  2277  00084C  060F               	btfss	status,0
  2278  00084E  A0D8               	decf	((c:strncmp@len+1)),c
  2279  000850  0610               		incf	((c:strncmp@len)),c,w
  2280  000852  280F               	bnz	u831
  2281  000854  E106               	incf	((c:strncmp@len+1)),c,w
  2282  000856  2810               	btfss	status,2
  2283  000858  A4D8               	goto	u831
  2284  00085A  EF31  F004         	goto	u830
  2285  00085E  EF33  F004         
  2286                           u831:
  2287  000862                     	goto	l1541
  2288  000862  EFE2  F003         u830:
  2289  000866                     	goto	l1553
  2290  000866  EF35  F004         	
  2291                           l881:
  2292  00086A                     	line	13
  2293                           	
  2294                           l1553:
  2295  00086A                     	movlw	high(0)
  2296  00086A  0E00               	movwf	((c:?_strncmp+1)),c
  2297  00086C  6E0C               	movlw	low(0)
  2298  00086E  0E00               	movwf	((c:?_strncmp)),c
  2299  000870  6E0B               	goto	l880
  2300  000872  EF3B  F004         	
  2301                           l1555:
  2302  000876                     	line	14
  2303                           	
  2304                           l880:
  2305  000876                     	return	;funcret
  2306  000876  0012               	opt stack 0
  2307                           GLOBAL	__end_of_strncmp
  2308                           	__end_of_strncmp:
  2309  000878                     	signat	_strncmp,12410
  2310                           	global	_strlen
  2311                           
  2312 ;; *************** function _strlen *****************
  2313 ;; Defined at:
  2314 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2317 ;;		 -> STR_19(10), STR_18(9), STR_17(5), STR_16(8), 
  2318 ;;		 -> STR_15(7), STR_14(7), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  cp              2    8[COMRAM] PTR const unsigned char 
  2321 ;;		 -> STR_19(10), STR_18(9), STR_17(5), STR_16(8), 
  2322 ;;		 -> STR_15(7), STR_14(7), 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2    4[COMRAM] unsigned int 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0
  2332 ;;      Params:         2       0
  2333 ;;      Locals:         2       0
  2334 ;;      Temps:          2       0
  2335 ;;      Totals:         6       0
  2336 ;;Total ram usage:        6 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_strstr
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           psect	text3,class=CODE,space=0,reloc=2,group=2
  2346                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2347                           	line	4
  2348                           global __ptext3
  2349                           __ptext3:
  2350  000B84                     psect	text3
  2351                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  2352                           	line	4
  2353                           	global	__size_of_strlen
  2354                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  2355  0000                     	
  2356                           _strlen:
  2357  000B84                     ;incstack = 0
  2358                           	opt	stack 28
  2359                           	line	8
  2360                           	
  2361                           l1529:
  2362  000B84                     		movff	(c:strlen@s),(c:strlen@cp)
  2363  000B84  C005  F009         	movff	(c:strlen@s+1),(c:strlen@cp+1)
  2364  000B88  C006  F00A         
  2365                           	line	9
  2366                           	goto	l1533
  2367  000B8C  EFCC  F005         	
  2368                           l870:
  2369  000B90                     	line	10
  2370                           	
  2371                           l1531:
  2372  000B90                     	infsnz	((c:strlen@cp)),c
  2373  000B90  4A09               	incf	((c:strlen@cp+1)),c
  2374  000B92  2A0A               	goto	l1533
  2375  000B94  EFCC  F005         	line	11
  2376                           	
  2377                           l869:
  2378  000B98                     	line	9
  2379                           	
  2380                           l1533:
  2381  000B98                     	movff	(c:strlen@cp),tblptrl
  2382  000B98  C009  FFF6         	movff	(c:strlen@cp+1),tblptrh
  2383  000B9C  C00A  FFF7         	if	0	;tblptru may be non-zero
  2384  000BA0                     	clrf	tblptru
  2386  000BA0                     	if	0	;tblptru may be non-zero
  2387  000BA0                     	global __mediumconst
  2388                           movlw	low highword(__mediumconst)
  2391  000BA0                     	tblrd	*
  2392  000BA0  0008               	
  2393                           	movf	tablat,w
  2394  000BA2  50F5               	iorlw	0
  2395  000BA4  0900               	btfss	status,2
  2396  000BA6  A4D8               	goto	u801
  2397  000BA8  EFD8  F005         	goto	u800
  2398  000BAC  EFDA  F005         u801:
  2399  000BB0                     	goto	l1531
  2400  000BB0  EFC8  F005         u800:
  2401  000BB4                     	goto	l1535
  2402  000BB4  EFDC  F005         	
  2403                           l871:
  2404  000BB8                     	line	12
  2405                           	
  2406                           l1535:
  2407  000BB8                     	movff	(c:strlen@s),??_strlen+0+0
  2408  000BB8  C005  F007         	movff	(c:strlen@s+1),??_strlen+0+0+1
  2409  000BBC  C006  F008         	comf	(??_strlen+0+0),c
  2410  000BC0  1E07               	comf	(??_strlen+0+1),c
  2411  000BC2  1E08               	infsnz	(??_strlen+0+0),c
  2412  000BC4  4A07               	incf	(??_strlen+0+1),c
  2413  000BC6  2A08               	movf	((c:strlen@cp)),c,w
  2414  000BC8  5009               	addwf	(??_strlen+0+0),c,w
  2415  000BCA  2407               	movwf	((c:?_strlen)),c
  2416  000BCC  6E05               	movf	((c:strlen@cp+1)),c,w
  2417  000BCE  500A               	addwfc	(??_strlen+0+1),c,w
  2418  000BD0  2008               	movwf	1+((c:?_strlen)),c
  2419  000BD2  6E06               	goto	l872
  2420  000BD4  EFEC  F005         	
  2421                           l1537:
  2422  000BD8                     	line	13
  2423                           	
  2424                           l872:
  2425  000BD8                     	return	;funcret
  2426  000BD8  0012               	opt stack 0
  2427                           GLOBAL	__end_of_strlen
  2428                           	__end_of_strlen:
  2429  000BDA                     	signat	_strlen,4218
  2430                           	global	_strchr
  2431                           
  2432 ;; *************** function _strchr *****************
  2433 ;; Defined at:
  2434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  2437 ;;		 -> NULL(0), UART_buffer(16), 
  2438 ;;  chr             2    6[COMRAM] int 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2    4[COMRAM] PTR unsigned char 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0
  2450 ;;      Params:         4       0
  2451 ;;      Locals:         0       0
  2452 ;;      Temps:          1       0
  2453 ;;      Totals:         5       0
  2454 ;;Total ram usage:        5 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_strstr
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           psect	text4,class=CODE,space=0,reloc=2,group=2
  2464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2465                           	line	4
  2466                           global __ptext4
  2467                           __ptext4:
  2468  000B2C                     psect	text4
  2469                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strchr.c"
  2470                           	line	4
  2471                           	global	__size_of_strchr
  2472                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  2473  0000                     	
  2474                           _strchr:
  2475  000B2C                     ;incstack = 0
  2476                           	opt	stack 28
  2477                           	line	6
  2478                           	
  2479                           l863:
  2480  000B2C                     	line	7
  2481                           	
  2482                           l1557:
  2483  000B2C                     	movff	(c:strchr@ptr),fsr2l
  2484  000B2C  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  2485  000B30  C006  FFDA         	movf	((c:strchr@chr)),c,w
  2486  000B34  5007               xorwf	postinc2,w
  2487  000B36  18DE               	btfss	status,2
  2488  000B38  A4D8               	goto	u841
  2489  000B3A  EFA1  F005         	goto	u840
  2490  000B3E  EFA3  F005         
  2491                           u841:
  2492  000B42                     	goto	l1563
  2493  000B42  EFAB  F005         u840:
  2494  000B46                     	line	8
  2495                           	
  2496                           l1559:
  2497  000B46                     		movff	(c:strchr@ptr),(c:?_strchr)
  2498  000B46  C005  F005         	movff	(c:strchr@ptr+1),(c:?_strchr+1)
  2499  000B4A  C006  F006         
  2500                           	goto	l865
  2501  000B4E  EFC1  F005         	
  2502                           l1561:
  2503  000B52                     	goto	l865
  2504  000B52  EFC1  F005         	
  2505                           l864:
  2506  000B56                     	line	9
  2507                           	
  2508                           l1563:
  2509  000B56                     	movff	(c:strchr@ptr),fsr2l
  2510  000B56  C005  FFD9         	movff	(c:strchr@ptr+1),fsr2h
  2511  000B5A  C006  FFDA         	infsnz	((c:strchr@ptr)),c
  2512  000B5E  4A05               	incf	((c:strchr@ptr+1)),c
  2513  000B60  2A06               	movf	indf2,w
  2514  000B62  50DF               	btfss	status,2
  2515  000B64  A4D8               	goto	u851
  2516  000B66  EFB7  F005         	goto	u850
  2517  000B6A  EFB9  F005         u851:
  2518  000B6E                     	goto	l863
  2519  000B6E  EF96  F005         u850:
  2520  000B72                     	goto	l1565
  2521  000B72  EFBB  F005         	
  2522                           l866:
  2523  000B76                     	line	10
  2524                           	
  2525                           l1565:
  2526  000B76                     		movlw	low(0)
  2527  000B76  0E00               	movwf	((c:?_strchr)),c
  2528  000B78  6E05               	movlw	high(0)
  2529  000B7A  0E00               	movwf	((c:?_strchr+1)),c
  2530  000B7C  6E06               
  2531                           	goto	l865
  2532  000B7E  EFC1  F005         	
  2533                           l1567:
  2534  000B82                     	line	11
  2535                           	
  2536                           l865:
  2537  000B82                     	return	;funcret
  2538  000B82  0012               	opt stack 0
  2539                           GLOBAL	__end_of_strchr
  2540                           	__end_of_strchr:
  2541  000B84                     	signat	_strchr,8314
  2542                           	global	_send_Status
  2543                           
  2544 ;; *************** function _send_Status *****************
  2545 ;; Defined at:
  2546 ;;		line 22 in file "main.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  buffer         10   28[COMRAM] unsigned char [10]
  2551 ;;  temp            4   38[COMRAM] unsigned long 
  2552 ;;  batValue        2   44[COMRAM] unsigned int 
  2553 ;;  adcValue        2   42[COMRAM] unsigned int 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0
  2563 ;;      Params:         0       0
  2564 ;;      Locals:        18       0
  2565 ;;      Temps:          0       0
  2566 ;;      Totals:        18       0
  2567 ;;Total ram usage:       18 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    4
  2570 ;; This function calls:
  2571 ;;		_ADC_Get
  2572 ;;		_UART_Write_Text
  2573 ;;		___lldiv
  2574 ;;		___lmul
  2575 ;;		_itoa
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2581                           	file	"main.c"
  2582                           	line	22
  2583                           global __ptext5
  2584                           __ptext5:
  2585  0004B8                     psect	text5
  2586                           	file	"main.c"
  2587                           	line	22
  2588                           	global	__size_of_send_Status
  2589                           	__size_of_send_Status	equ	__end_of_send_Status-_send_Status
  2590  0000                     	
  2591                           _send_Status:
  2592  0004B8                     ;incstack = 0
  2593                           	opt	stack 26
  2594                           	line	27
  2595                           	
  2596                           l1579:
  2597  0004B8                     ;main.c: 24: unsigned char buffer[10];;main.c: 25: unsigned int adcValue;;main.c: 26: un
                                 signed int batValue;;main.c: 27: adcValue = ADC_Get();
  2598                           	call	_ADC_Get	;wreg free
  2599  0004B8  EC17  F006         	movff	0+?_ADC_Get,(c:send_Status@adcValue)
  2600  0004BC  C008  F02B         	movff	1+?_ADC_Get,(c:send_Status@adcValue+1)
  2601  0004C0  C009  F02C         	line	29
  2602                           ;main.c: 29: unsigned long temp = ((unsigned long) adcValue * (unsigned long) 5000);
  2603                           	movff	(c:send_Status@adcValue),(c:___lmul@multiplier)
  2604  0004C4  C02B  F005         	movff	(c:send_Status@adcValue+1),(c:___lmul@multiplier+1)
  2605  0004C8  C02C  F006         	clrf	((c:___lmul@multiplier+2)),c
  2606  0004CC  6A07               	clrf	((c:___lmul@multiplier+3)),c
  2607  0004CE  6A08               
  2608                           	movlw	low(01388h)
  2609  0004D0  0E88               	movwf	((c:___lmul@multiplicand)),c
  2610  0004D2  6E09               	movlw	high(01388h)
  2611  0004D4  0E13               	movwf	((c:___lmul@multiplicand+1)),c
  2612  0004D6  6E0A               	movlw	low highword(01388h)
  2613  0004D8  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2614  0004DA  6E0B               	movlw	high highword(01388h)
  2615  0004DC  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2616  0004DE  6E0C               	call	___lmul	;wreg free
  2617  0004E0  EC5D  F005         	movff	0+?___lmul,(c:send_Status@temp)
  2618  0004E4  C005  F027         	movff	1+?___lmul,(c:send_Status@temp+1)
  2619  0004E8  C006  F028         	movff	2+?___lmul,(c:send_Status@temp+2)
  2620  0004EC  C007  F029         	movff	3+?___lmul,(c:send_Status@temp+3)
  2621  0004F0  C008  F02A         	
  2622                           	line	30
  2623                           ;main.c: 30: batValue = temp / 1023;
  2624                           	movff	(c:send_Status@temp),(c:___lldiv@dividend)
  2625  0004F4  C027  F005         	movff	(c:send_Status@temp+1),(c:___lldiv@dividend+1)
  2626  0004F8  C028  F006         	movff	(c:send_Status@temp+2),(c:___lldiv@dividend+2)
  2627  0004FC  C029  F007         	movff	(c:send_Status@temp+3),(c:___lldiv@dividend+3)
  2628  000500  C02A  F008         	movlw	low(03FFh)
  2629  000504  0EFF               	movwf	((c:___lldiv@divisor)),c
  2630  000506  6E09               	movlw	high(03FFh)
  2631  000508  0E03               	movwf	((c:___lldiv@divisor+1)),c
  2632  00050A  6E0A               	movlw	low highword(03FFh)
  2633  00050C  0E00               	movwf	((c:___lldiv@divisor+2)),c
  2634  00050E  6E0B               	movlw	high highword(03FFh)
  2635  000510  0E00               	movwf	((c:___lldiv@divisor+3)),c
  2636  000512  6E0C               	call	___lldiv	;wreg free
  2637  000514  EC3C  F004         	movff	0+?___lldiv,(c:send_Status@batValue)
  2638  000518  C005  F02D         	movff	1+?___lldiv,(c:send_Status@batValue+1)
  2639  00051C  C006  F02E         	line	31
  2640                           	
  2641                           l1581:
  2642  000520                     ;main.c: 31: itoa(buffer, batValue, 10);
  2643                           		movlw	low(send_Status@buffer)
  2644  000520  0E1D               	movwf	((c:itoa@buf)),c
  2645  000522  6E15               	movlw	high(send_Status@buffer)
  2646  000524  0E00               	movwf	((c:itoa@buf+1)),c
  2647  000526  6E16               
  2648                           	movff	(c:send_Status@batValue),(c:itoa@val)
  2649  000528  C02D  F017         	movff	(c:send_Status@batValue+1),(c:itoa@val+1)
  2650  00052C  C02E  F018         	movlw	high(0Ah)
  2651  000530  0E00               	movwf	((c:itoa@base+1)),c
  2652  000532  6E1A               	movlw	low(0Ah)
  2653  000534  0E0A               	movwf	((c:itoa@base)),c
  2654  000536  6E19               	call	_itoa	;wreg free
  2655  000538  ECED  F005         	line	32
  2656                           	
  2657                           l1583:
  2658  00053C                     ;main.c: 32: UART_Write_Text(buffer);
  2659                           		movlw	low(send_Status@buffer)
  2660  00053C  0E1D               	movwf	((c:UART_Write_Text@text)),c
  2661  00053E  6E06               	movlw	high(send_Status@buffer)
  2662  000540  0E00               	movwf	((c:UART_Write_Text@text+1)),c
  2663  000542  6E07               
  2664                           	call	_UART_Write_Text	;wreg free
  2665  000544  EC98  F004         	line	34
  2666                           	
  2667                           l1585:
  2668  000548                     ;main.c: 34: if ((state & 0b00010000) == 0b00010000) {
  2669                           	
  2670                           	btfss	((c:_state)),c,(4)&7
  2671  000548  A830               	goto	u871
  2672  00054A  EFA9  F002         	goto	u870
  2673  00054E  EFAB  F002         u871:
  2674  000552                     	goto	l1589
  2675  000552  EFB3  F002         u870:
  2676  000556                     	line	35
  2677                           	
  2678                           l1587:
  2679  000556                     ;main.c: 35: UART_Write_Text((unsigned char *) "|ON|");
  2680                           		movlw	low(STR_1)
  2681  000556  0E60               	movwf	((c:UART_Write_Text@text)),c
  2682  000558  6E06               	movlw	high(STR_1)
  2683  00055A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2684  00055C  6E07               
  2685                           	call	_UART_Write_Text	;wreg free
  2686  00055E  EC98  F004         	line	36
  2687                           ;main.c: 36: } else {
  2688                           	goto	l1591
  2689  000562  EFBB  F002         	
  2690                           l122:
  2691  000566                     	line	37
  2692                           	
  2693                           l1589:
  2694  000566                     ;main.c: 37: UART_Write_Text((unsigned char *) "|OFF|");
  2695                           		movlw	low(STR_2)
  2696  000566  0E55               	movwf	((c:UART_Write_Text@text)),c
  2697  000568  6E06               	movlw	high(STR_2)
  2698  00056A  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2699  00056C  6E07               
  2700                           	call	_UART_Write_Text	;wreg free
  2701  00056E  EC98  F004         	goto	l1591
  2702  000572  EFBB  F002         	line	38
  2703                           	
  2704                           l123:
  2705  000576                     	line	40
  2706                           	
  2707                           l1591:
  2708  000576                     ;main.c: 38: };main.c: 40: if ((state & 0b00001000) == 0b00001000) {
  2709                           	
  2710                           	btfss	((c:_state)),c,(3)&7
  2711  000576  A630               	goto	u881
  2712  000578  EFC0  F002         	goto	u880
  2713  00057C  EFC2  F002         u881:
  2714  000580                     	goto	l1595
  2715  000580  EFCA  F002         u880:
  2716  000584                     	line	41
  2717                           	
  2718                           l1593:
  2719  000584                     ;main.c: 41: UART_Write_Text((unsigned char *) "ON|");
  2720                           		movlw	low(STR_3)
  2721  000584  0E61               	movwf	((c:UART_Write_Text@text)),c
  2722  000586  6E06               	movlw	high(STR_3)
  2723  000588  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2724  00058A  6E07               
  2725                           	call	_UART_Write_Text	;wreg free
  2726  00058C  EC98  F004         	line	42
  2727                           ;main.c: 42: } else {
  2728                           	goto	l1597
  2729  000590  EFD2  F002         	
  2730                           l124:
  2731  000594                     	line	43
  2732                           	
  2733                           l1595:
  2734  000594                     ;main.c: 43: UART_Write_Text((unsigned char *) "OFF|");
  2735                           		movlw	low(STR_4)
  2736  000594  0E56               	movwf	((c:UART_Write_Text@text)),c
  2737  000596  6E06               	movlw	high(STR_4)
  2738  000598  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2739  00059A  6E07               
  2740                           	call	_UART_Write_Text	;wreg free
  2741  00059C  EC98  F004         	goto	l1597
  2742  0005A0  EFD2  F002         	line	44
  2743                           	
  2744                           l125:
  2745  0005A4                     	line	46
  2746                           	
  2747                           l1597:
  2748  0005A4                     ;main.c: 44: };main.c: 46: if ((state & 0b00000100) == 0b00000100) {
  2749                           	
  2750                           	btfss	((c:_state)),c,(2)&7
  2751  0005A4  A430               	goto	u891
  2752  0005A6  EFD7  F002         	goto	u890
  2753  0005AA  EFD9  F002         u891:
  2754  0005AE                     	goto	l1601
  2755  0005AE  EFE1  F002         u890:
  2756  0005B2                     	line	47
  2757                           	
  2758                           l1599:
  2759  0005B2                     ;main.c: 47: UART_Write_Text((unsigned char *) "AC|");
  2760                           		movlw	low(STR_5)
  2761  0005B2  0E65               	movwf	((c:UART_Write_Text@text)),c
  2762  0005B4  6E06               	movlw	high(STR_5)
  2763  0005B6  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2764  0005B8  6E07               
  2765                           	call	_UART_Write_Text	;wreg free
  2766  0005BA  EC98  F004         	line	48
  2767                           ;main.c: 48: } else {
  2768                           	goto	l1603
  2769  0005BE  EFE9  F002         	
  2770                           l126:
  2771  0005C2                     	line	49
  2772                           	
  2773                           l1601:
  2774  0005C2                     ;main.c: 49: UART_Write_Text((unsigned char *) "DC|");
  2775                           		movlw	low(STR_6)
  2776  0005C2  0E69               	movwf	((c:UART_Write_Text@text)),c
  2777  0005C4  6E06               	movlw	high(STR_6)
  2778  0005C6  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2779  0005C8  6E07               
  2780                           	call	_UART_Write_Text	;wreg free
  2781  0005CA  EC98  F004         	goto	l1603
  2782  0005CE  EFE9  F002         	line	50
  2783                           	
  2784                           l127:
  2785  0005D2                     	line	52
  2786                           	
  2787                           l1603:
  2788  0005D2                     ;main.c: 50: };main.c: 52: if ((state & 0b00000010) == 0b00000010) {
  2789                           	
  2790                           	btfss	((c:_state)),c,(1)&7
  2791  0005D2  A230               	goto	u901
  2792  0005D4  EFEE  F002         	goto	u900
  2793  0005D8  EFF0  F002         u901:
  2794  0005DC                     	goto	l1607
  2795  0005DC  EFF8  F002         u900:
  2796  0005E0                     	line	53
  2797                           	
  2798                           l1605:
  2799  0005E0                     ;main.c: 53: UART_Write_Text((unsigned char *) "ON|");
  2800                           		movlw	low(STR_7)
  2801  0005E0  0E61               	movwf	((c:UART_Write_Text@text)),c
  2802  0005E2  6E06               	movlw	high(STR_7)
  2803  0005E4  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2804  0005E6  6E07               
  2805                           	call	_UART_Write_Text	;wreg free
  2806  0005E8  EC98  F004         	line	54
  2807                           ;main.c: 54: } else {
  2808                           	goto	l1609
  2809  0005EC  EF00  F003         	
  2810                           l128:
  2811  0005F0                     	line	55
  2812                           	
  2813                           l1607:
  2814  0005F0                     ;main.c: 55: UART_Write_Text((unsigned char *) "OFF|");
  2815                           		movlw	low(STR_8)
  2816  0005F0  0E56               	movwf	((c:UART_Write_Text@text)),c
  2817  0005F2  6E06               	movlw	high(STR_8)
  2818  0005F4  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2819  0005F6  6E07               
  2820                           	call	_UART_Write_Text	;wreg free
  2821  0005F8  EC98  F004         	goto	l1609
  2822  0005FC  EF00  F003         	line	56
  2823                           	
  2824                           l129:
  2825  000600                     	line	58
  2826                           	
  2827                           l1609:
  2828  000600                     ;main.c: 56: };main.c: 58: if ((state & 0b00000001) == 0b00000001) {
  2829                           	
  2830                           	btfss	((c:_state)),c,(0)&7
  2831  000600  A030               	goto	u911
  2832  000602  EF05  F003         	goto	u910
  2833  000606  EF07  F003         u911:
  2834  00060A                     	goto	l1613
  2835  00060A  EF0F  F003         u910:
  2836  00060E                     	line	59
  2837                           	
  2838                           l1611:
  2839  00060E                     ;main.c: 59: UART_Write_Text((unsigned char *) "ON");
  2840                           		movlw	low(STR_9)
  2841  00060E  0E4B               	movwf	((c:UART_Write_Text@text)),c
  2842  000610  6E06               	movlw	high(STR_9)
  2843  000612  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2844  000614  6E07               
  2845                           	call	_UART_Write_Text	;wreg free
  2846  000616  EC98  F004         	line	60
  2847                           ;main.c: 60: } else {
  2848                           	goto	l132
  2849  00061A  EF17  F003         	
  2850                           l130:
  2851  00061E                     	line	61
  2852                           	
  2853                           l1613:
  2854  00061E                     ;main.c: 61: UART_Write_Text((unsigned char *) "OFF");
  2855                           		movlw	low(STR_10)
  2856  00061E  0E43               	movwf	((c:UART_Write_Text@text)),c
  2857  000620  6E06               	movlw	high(STR_10)
  2858  000622  0E01               	movwf	((c:UART_Write_Text@text+1)),c
  2859  000624  6E07               
  2860                           	call	_UART_Write_Text	;wreg free
  2861  000626  EC98  F004         	goto	l132
  2862  00062A  EF17  F003         	line	62
  2863                           	
  2864                           l131:
  2865  00062E                     	line	67
  2866                           	
  2867                           l132:
  2868  00062E                     	return	;funcret
  2869  00062E  0012               	opt stack 0
  2870                           GLOBAL	__end_of_send_Status
  2871                           	__end_of_send_Status:
  2872  000630                     	signat	_send_Status,89
  2873                           	global	_itoa
  2874                           
  2875 ;; *************** function _itoa *****************
  2876 ;; Defined at:
  2877 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2880 ;;		 -> send_Status@buffer(10), 
  2881 ;;  val             2   22[COMRAM] int 
  2882 ;;  base            2   24[COMRAM] int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  cp              2   26[COMRAM] PTR unsigned char 
  2885 ;;		 -> send_Status@buffer(10), 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2   20[COMRAM] PTR unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0
  2895 ;;      Params:         6       0
  2896 ;;      Locals:         2       0
  2897 ;;      Temps:          0       0
  2898 ;;      Totals:         8       0
  2899 ;;Total ram usage:        8 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    3
  2902 ;; This function calls:
  2903 ;;		_utoa
  2904 ;; This function is called by:
  2905 ;;		_send_Status
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           psect	text6,class=CODE,space=0,reloc=2,group=2
  2909                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2910                           	line	4
  2911                           global __ptext6
  2912                           __ptext6:
  2913  000BDA                     psect	text6
  2914                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2915                           	line	4
  2916                           	global	__size_of_itoa
  2917                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  2918  0000                     	
  2919                           _itoa:
  2920  000BDA                     ;incstack = 0
  2921                           	opt	stack 26
  2922                           	line	6
  2923                           	
  2924                           l1485:
  2925  000BDA                     		movff	(c:itoa@buf),(c:itoa@cp)
  2926  000BDA  C015  F01B         	movff	(c:itoa@buf+1),(c:itoa@cp+1)
  2927  000BDE  C016  F01C         
  2928                           	line	8
  2929                           	btfsc	((c:itoa@val+1)),c,7
  2930  000BE2  BE18               	goto	u740
  2931  000BE4  EFF8  F005         	goto	u741
  2932  000BE8  EFF6  F005         
  2933                           u741:
  2934  000BEC                     	goto	l1493
  2935  000BEC  EF06  F006         u740:
  2936  000BF0                     	line	9
  2937                           	
  2938                           l1487:
  2939  000BF0                     	movff	(c:itoa@buf),fsr2l
  2940  000BF0  C015  FFD9         	movff	(c:itoa@buf+1),fsr2h
  2941  000BF4  C016  FFDA         	movlw	low(02Dh)
  2942  000BF8  0E2D               	movwf	indf2
  2943  000BFA  6EDF               	
  2944                           l1489:
  2945  000BFC                     	infsnz	((c:itoa@buf)),c
  2946  000BFC  4A15               	incf	((c:itoa@buf+1)),c
  2947  000BFE  2A16               	line	10
  2948                           	
  2949                           l1491:
  2950  000C00                     	negf	((c:itoa@val)),c
  2951  000C00  6C17               	comf	((c:itoa@val+1)),c
  2952  000C02  1E18               	btfsc	status,0
  2953  000C04  B0D8               	incf	((c:itoa@val+1)),c
  2954  000C06  2A18               	goto	l1493
  2955  000C08  EF06  F006         	line	11
  2956                           	
  2957                           l830:
  2958  000C0C                     	line	12
  2959                           	
  2960                           l1493:
  2961  000C0C                     		movff	(c:itoa@buf),(c:utoa@buf)
  2962  000C0C  C015  F00C         	movff	(c:itoa@buf+1),(c:utoa@buf+1)
  2963  000C10  C016  F00D         
  2964                           	movff	(c:itoa@val),(c:utoa@val)
  2965  000C14  C017  F00E         	movff	(c:itoa@val+1),(c:utoa@val+1)
  2966  000C18  C018  F00F         	movff	(c:itoa@base),(c:utoa@base)
  2967  000C1C  C019  F010         	movff	(c:itoa@base+1),(c:utoa@base+1)
  2968  000C20  C01A  F011         	call	_utoa	;wreg free
  2969  000C24  EC18  F003         	goto	l831
  2970  000C28  EF16  F006         	line	13
  2971                           	
  2972                           l1495:
  2973  000C2C                     	line	14
  2974                           ;	Return value of _itoa is never used
  2975                           	
  2976                           l831:
  2977  000C2C                     	return	;funcret
  2978  000C2C  0012               	opt stack 0
  2979                           GLOBAL	__end_of_itoa
  2980                           	__end_of_itoa:
  2981  000C2E                     	signat	_itoa,12410
  2982                           	global	_utoa
  2983                           
  2984 ;; *************** function _utoa *****************
  2985 ;; Defined at:
  2986 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  buf             2   11[COMRAM] PTR unsigned char 
  2989 ;;		 -> send_Status@buffer(10), 
  2990 ;;  val             2   13[COMRAM] unsigned int 
  2991 ;;  base            2   15[COMRAM] int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  v               2   17[COMRAM] unsigned int 
  2994 ;;  c               1   19[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2   11[COMRAM] PTR unsigned char 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0
  3004 ;;      Params:         6       0
  3005 ;;      Locals:         3       0
  3006 ;;      Temps:          0       0
  3007 ;;      Totals:         9       0
  3008 ;;Total ram usage:        9 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		___lwdiv
  3013 ;;		___lwmod
  3014 ;; This function is called by:
  3015 ;;		_itoa
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           psect	text7,class=CODE,space=0,reloc=2,group=2
  3019                           	line	17
  3020                           global __ptext7
  3021                           __ptext7:
  3022  000630                     psect	text7
  3023                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3024                           	line	17
  3025                           	global	__size_of_utoa
  3026                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  3027  0000                     	
  3028                           _utoa:
  3029  000630                     ;incstack = 0
  3030                           	opt	stack 26
  3031                           	line	22
  3032                           	
  3033                           l1423:
  3034  000630                     	movff	(c:utoa@val),(c:utoa@v)
  3035  000630  C00E  F012         	movff	(c:utoa@val+1),(c:utoa@v+1)
  3036  000634  C00F  F013         	goto	l1425
  3037  000638  EF1E  F003         	line	23
  3038                           	
  3039                           l834:
  3040  00063C                     	line	24
  3041                           	
  3042                           l1425:
  3043  00063C                     	movff	(c:utoa@v),(c:___lwdiv@dividend)
  3044  00063C  C012  F005         	movff	(c:utoa@v+1),(c:___lwdiv@dividend+1)
  3045  000640  C013  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3046  000644  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3047  000648  C011  F008         	call	___lwdiv	;wreg free
  3048  00064C  ECDD  F004         	movff	0+?___lwdiv,(c:utoa@v)
  3049  000650  C005  F012         	movff	1+?___lwdiv,(c:utoa@v+1)
  3050  000654  C006  F013         	line	25
  3051                           	
  3052                           l1427:
  3053  000658                     	infsnz	((c:utoa@buf)),c
  3054  000658  4A0C               	incf	((c:utoa@buf+1)),c
  3055  00065A  2A0D               	line	26
  3056                           	
  3057                           l1429:
  3058  00065C                     	movf	((c:utoa@v)),c,w
  3059  00065C  5012               iorwf	((c:utoa@v+1)),c,w
  3060  00065E  1013               	btfss	status,2
  3061  000660  A4D8               	goto	u661
  3062  000662  EF35  F003         	goto	u660
  3063  000666  EF37  F003         
  3064                           u661:
  3065  00066A                     	goto	l1425
  3066  00066A  EF1E  F003         u660:
  3067  00066E                     	goto	l1431
  3068  00066E  EF39  F003         	
  3069                           l835:
  3070  000672                     	line	27
  3071                           	
  3072                           l1431:
  3073  000672                     	movff	(c:utoa@buf),fsr2l
  3074  000672  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3075  000676  C00D  FFDA         	movlw	low(0)
  3076  00067A  0E00               	movwf	indf2
  3077  00067C  6EDF               	
  3078                           l1433:
  3079  00067E                     	decf	((c:utoa@buf)),c
  3080  00067E  060C               	btfss	status,0
  3081  000680  A0D8               	decf	((c:utoa@buf+1)),c
  3082  000682  060D               	goto	l1435
  3083  000684  EF44  F003         	line	28
  3084                           	
  3085                           l836:
  3086  000688                     	line	29
  3087                           	
  3088                           l1435:
  3089  000688                     	movff	(c:utoa@val),(c:___lwmod@dividend)
  3090  000688  C00E  F005         	movff	(c:utoa@val+1),(c:___lwmod@dividend+1)
  3091  00068C  C00F  F006         	movff	(c:utoa@base),(c:___lwmod@divisor)
  3092  000690  C010  F007         	movff	(c:utoa@base+1),(c:___lwmod@divisor+1)
  3093  000694  C011  F008         	call	___lwmod	;wreg free
  3094  000698  EC21  F005         	movf	(0+?___lwmod),c,w
  3095  00069C  5005               	movwf	((c:utoa@c)),c
  3096  00069E  6E14               	line	30
  3097                           	
  3098                           l1437:
  3099  0006A0                     	movff	(c:utoa@val),(c:___lwdiv@dividend)
  3100  0006A0  C00E  F005         	movff	(c:utoa@val+1),(c:___lwdiv@dividend+1)
  3101  0006A4  C00F  F006         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  3102  0006A8  C010  F007         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  3103  0006AC  C011  F008         	call	___lwdiv	;wreg free
  3104  0006B0  ECDD  F004         	movff	0+?___lwdiv,(c:utoa@val)
  3105  0006B4  C005  F00E         	movff	1+?___lwdiv,(c:utoa@val+1)
  3106  0006B8  C006  F00F         	line	31
  3107                           	
  3108                           l1439:
  3109  0006BC                     		movlw	0Ah-1
  3110  0006BC  0E09               	cpfsgt	((c:utoa@c)),c
  3111  0006BE  6414               	goto	u671
  3112  0006C0  EF64  F003         	goto	u670
  3113  0006C4  EF66  F003         
  3114                           u671:
  3115  0006C8                     	goto	l837
  3116  0006C8  EF68  F003         u670:
  3117  0006CC                     	line	32
  3118                           	
  3119                           l1441:
  3120  0006CC                     	movlw	(07h)&0ffh
  3121  0006CC  0E07               	addwf	((c:utoa@c)),c
  3122  0006CE  2614               	
  3123                           l837:
  3124  0006D0                     	line	33
  3125                           	movlw	(030h)&0ffh
  3126  0006D0  0E30               	addwf	((c:utoa@c)),c
  3127  0006D2  2614               	line	34
  3128                           	
  3129                           l1443:
  3130  0006D4                     	movff	(c:utoa@buf),fsr2l
  3131  0006D4  C00C  FFD9         	movff	(c:utoa@buf+1),fsr2h
  3132  0006D8  C00D  FFDA         	movff	(c:utoa@c),indf2
  3133  0006DC  C014  FFDF         
  3134                           	
  3135                           l1445:
  3136  0006E0                     	decf	((c:utoa@buf)),c
  3137  0006E0  060C               	btfss	status,0
  3138  0006E2  A0D8               	decf	((c:utoa@buf+1)),c
  3139  0006E4  060D               	line	35
  3140                           	
  3141                           l1447:
  3142  0006E6                     	movf	((c:utoa@val)),c,w
  3143  0006E6  500E               iorwf	((c:utoa@val+1)),c,w
  3144  0006E8  100F               	btfss	status,2
  3145  0006EA  A4D8               	goto	u681
  3146  0006EC  EF7A  F003         	goto	u680
  3147  0006F0  EF7C  F003         
  3148                           u681:
  3149  0006F4                     	goto	l1435
  3150  0006F4  EF44  F003         u680:
  3151  0006F8                     	goto	l1449
  3152  0006F8  EF7E  F003         	
  3153                           l838:
  3154  0006FC                     	line	36
  3155                           	
  3156                           l1449:
  3157  0006FC                     ;	Return value of _utoa is never used
  3158                           	infsnz	((c:utoa@buf)),c
  3159  0006FC  4A0C               	incf	((c:utoa@buf+1)),c
  3160  0006FE  2A0D               	goto	l839
  3161  000700  EF82  F003         	
  3162                           l1451:
  3163  000704                     	line	37
  3164                           	
  3165                           l839:
  3166  000704                     	return	;funcret
  3167  000704  0012               	opt stack 0
  3168                           GLOBAL	__end_of_utoa
  3169                           	__end_of_utoa:
  3170  000706                     	signat	_utoa,12410
  3171                           	global	___lwmod
  3172                           
  3173 ;; *************** function ___lwmod *****************
  3174 ;; Defined at:
  3175 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  dividend        2    4[COMRAM] unsigned int 
  3178 ;;  divisor         2    6[COMRAM] unsigned int 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  counter         1    8[COMRAM] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  2    4[COMRAM] unsigned int 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0
  3190 ;;      Params:         4       0
  3191 ;;      Locals:         1       0
  3192 ;;      Temps:          0       0
  3193 ;;      Totals:         5       0
  3194 ;;Total ram usage:        5 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_utoa
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           psect	text8,class=CODE,space=0,reloc=2,group=1
  3204                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3205                           	line	7
  3206                           global __ptext8
  3207                           __ptext8:
  3208  000A42                     psect	text8
  3209                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3210                           	line	7
  3211                           	global	__size_of___lwmod
  3212                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3213  0000                     	
  3214                           ___lwmod:
  3215  000A42                     ;incstack = 0
  3216                           	opt	stack 26
  3217                           	line	12
  3218                           	
  3219                           l1401:
  3220  000A42                     	movf	((c:___lwmod@divisor)),c,w
  3221  000A42  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  3222  000A44  1008               	btfsc	status,2
  3223  000A46  B4D8               	goto	u621
  3224  000A48  EF28  F005         	goto	u620
  3225  000A4C  EF2A  F005         
  3226                           u621:
  3227  000A50                     	goto	l655
  3228  000A50  EF58  F005         u620:
  3229  000A54                     	line	13
  3230                           	
  3231                           l1403:
  3232  000A54                     	movlw	low(01h)
  3233  000A54  0E01               	movwf	((c:___lwmod@counter)),c
  3234  000A56  6E09               	line	14
  3235                           	goto	l1407
  3236  000A58  EF34  F005         	
  3237                           l657:
  3238  000A5C                     	line	15
  3239                           	
  3240                           l1405:
  3241  000A5C                     	bcf	status,0
  3242  000A5C  90D8               	rlcf	((c:___lwmod@divisor)),c
  3243  000A5E  3607               	rlcf	((c:___lwmod@divisor+1)),c
  3244  000A60  3608               	line	16
  3245                           	incf	((c:___lwmod@counter)),c
  3246  000A62  2A09               	goto	l1407
  3247  000A64  EF34  F005         	line	17
  3248                           	
  3249                           l656:
  3250  000A68                     	line	14
  3251                           	
  3252                           l1407:
  3253  000A68                     	
  3254                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  3255  000A68  AE08               	goto	u631
  3256  000A6A  EF39  F005         	goto	u630
  3257  000A6E  EF3B  F005         u631:
  3258  000A72                     	goto	l1405
  3259  000A72  EF2E  F005         u630:
  3260  000A76                     	goto	l1409
  3261  000A76  EF3F  F005         	
  3262                           l658:
  3263  000A7A                     	goto	l1409
  3264  000A7A  EF3F  F005         	line	18
  3265                           	
  3266                           l659:
  3267  000A7E                     	line	19
  3268                           	
  3269                           l1409:
  3270  000A7E                     		movf	((c:___lwmod@divisor)),c,w
  3271  000A7E  5007               	subwf	((c:___lwmod@dividend)),c,w
  3272  000A80  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  3273  000A82  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  3274  000A84  5806               	btfss	status,0
  3275  000A86  A0D8               	goto	u641
  3276  000A88  EF48  F005         	goto	u640
  3277  000A8C  EF4A  F005         
  3278                           u641:
  3279  000A90                     	goto	l1413
  3280  000A90  EF50  F005         u640:
  3281  000A94                     	line	20
  3282                           	
  3283                           l1411:
  3284  000A94                     	movf	((c:___lwmod@divisor)),c,w
  3285  000A94  5007               	subwf	((c:___lwmod@dividend)),c
  3286  000A96  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  3287  000A98  5008               	subwfb	((c:___lwmod@dividend+1)),c
  3288  000A9A  5A06               
  3289                           	goto	l1413
  3290  000A9C  EF50  F005         	
  3291                           l660:
  3292  000AA0                     	line	21
  3293                           	
  3294                           l1413:
  3295  000AA0                     	bcf	status,0
  3296  000AA0  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  3297  000AA2  3208               	rrcf	((c:___lwmod@divisor)),c
  3298  000AA4  3207               	line	22
  3299                           	
  3300                           l1415:
  3301  000AA6                     	decfsz	((c:___lwmod@counter)),c
  3302  000AA6  2E09               	
  3303                           	goto	l1409
  3304  000AA8  EF3F  F005         	goto	l655
  3305  000AAC  EF58  F005         	
  3306                           l661:
  3307  000AB0                     	line	23
  3308                           	
  3309                           l655:
  3310  000AB0                     	line	24
  3311                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  3312  000AB0  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  3313  000AB4  C006  F006         	line	25
  3314                           	
  3315                           l662:
  3316  000AB8                     	return	;funcret
  3317  000AB8  0012               	opt stack 0
  3318                           GLOBAL	__end_of___lwmod
  3319                           	__end_of___lwmod:
  3320  000ABA                     	signat	___lwmod,8314
  3321                           	global	___lwdiv
  3322                           
  3323 ;; *************** function ___lwdiv *****************
  3324 ;; Defined at:
  3325 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  dividend        2    4[COMRAM] unsigned int 
  3328 ;;  divisor         2    6[COMRAM] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  quotient        2    8[COMRAM] unsigned int 
  3331 ;;  counter         1   10[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    4[COMRAM] unsigned int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0
  3341 ;;      Params:         4       0
  3342 ;;      Locals:         3       0
  3343 ;;      Temps:          0       0
  3344 ;;      Totals:         7       0
  3345 ;;Total ram usage:        7 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_utoa
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           psect	text9,class=CODE,space=0,reloc=2,group=1
  3355                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3356                           	line	7
  3357                           global __ptext9
  3358                           __ptext9:
  3359  0009BA                     psect	text9
  3360                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3361                           	line	7
  3362                           	global	__size_of___lwdiv
  3363                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3364  0000                     	
  3365                           ___lwdiv:
  3366  0009BA                     ;incstack = 0
  3367                           	opt	stack 26
  3368                           	line	13
  3369                           	
  3370                           l1379:
  3371  0009BA                     	movlw	high(0)
  3372  0009BA  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  3373  0009BC  6E0A               	movlw	low(0)
  3374  0009BE  0E00               	movwf	((c:___lwdiv@quotient)),c
  3375  0009C0  6E09               	line	14
  3376                           	
  3377                           l1381:
  3378  0009C2                     	movf	((c:___lwdiv@divisor)),c,w
  3379  0009C2  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  3380  0009C4  1008               	btfsc	status,2
  3381  0009C6  B4D8               	goto	u591
  3382  0009C8  EFE8  F004         	goto	u590
  3383  0009CC  EFEA  F004         
  3384                           u591:
  3385  0009D0                     	goto	l645
  3386  0009D0  EF1C  F005         u590:
  3387  0009D4                     	line	15
  3388                           	
  3389                           l1383:
  3390  0009D4                     	movlw	low(01h)
  3391  0009D4  0E01               	movwf	((c:___lwdiv@counter)),c
  3392  0009D6  6E0B               	line	16
  3393                           	goto	l1387
  3394  0009D8  EFF4  F004         	
  3395                           l647:
  3396  0009DC                     	line	17
  3397                           	
  3398                           l1385:
  3399  0009DC                     	bcf	status,0
  3400  0009DC  90D8               	rlcf	((c:___lwdiv@divisor)),c
  3401  0009DE  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  3402  0009E0  3608               	line	18
  3403                           	incf	((c:___lwdiv@counter)),c
  3404  0009E2  2A0B               	goto	l1387
  3405  0009E4  EFF4  F004         	line	19
  3406                           	
  3407                           l646:
  3408  0009E8                     	line	16
  3409                           	
  3410                           l1387:
  3411  0009E8                     	
  3412                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  3413  0009E8  AE08               	goto	u601
  3414  0009EA  EFF9  F004         	goto	u600
  3415  0009EE  EFFB  F004         u601:
  3416  0009F2                     	goto	l1385
  3417  0009F2  EFEE  F004         u600:
  3418  0009F6                     	goto	l1389
  3419  0009F6  EFFF  F004         	
  3420                           l648:
  3421  0009FA                     	goto	l1389
  3422  0009FA  EFFF  F004         	line	20
  3423                           	
  3424                           l649:
  3425  0009FE                     	line	21
  3426                           	
  3427                           l1389:
  3428  0009FE                     	bcf	status,0
  3429  0009FE  90D8               	rlcf	((c:___lwdiv@quotient)),c
  3430  000A00  3609               	rlcf	((c:___lwdiv@quotient+1)),c
  3431  000A02  360A               	line	22
  3432                           	
  3433                           l1391:
  3434  000A04                     		movf	((c:___lwdiv@divisor)),c,w
  3435  000A04  5007               	subwf	((c:___lwdiv@dividend)),c,w
  3436  000A06  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  3437  000A08  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  3438  000A0A  5806               	btfss	status,0
  3439  000A0C  A0D8               	goto	u611
  3440  000A0E  EF0B  F005         	goto	u610
  3441  000A12  EF0D  F005         
  3442                           u611:
  3443  000A16                     	goto	l1397
  3444  000A16  EF14  F005         u610:
  3445  000A1A                     	line	23
  3446                           	
  3447                           l1393:
  3448  000A1A                     	movf	((c:___lwdiv@divisor)),c,w
  3449  000A1A  5007               	subwf	((c:___lwdiv@dividend)),c
  3450  000A1C  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  3451  000A1E  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  3452  000A20  5A06               
  3453                           	line	24
  3454                           	
  3455                           l1395:
  3456  000A22                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  3457  000A22  8009               	goto	l1397
  3458  000A24  EF14  F005         	line	25
  3459                           	
  3460                           l650:
  3461  000A28                     	line	26
  3462                           	
  3463                           l1397:
  3464  000A28                     	bcf	status,0
  3465  000A28  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  3466  000A2A  3208               	rrcf	((c:___lwdiv@divisor)),c
  3467  000A2C  3207               	line	27
  3468                           	
  3469                           l1399:
  3470  000A2E                     	decfsz	((c:___lwdiv@counter)),c
  3471  000A2E  2E0B               	
  3472                           	goto	l1389
  3473  000A30  EFFF  F004         	goto	l645
  3474  000A34  EF1C  F005         	
  3475                           l651:
  3476  000A38                     	line	28
  3477                           	
  3478                           l645:
  3479  000A38                     	line	29
  3480                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  3481  000A38  C009  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  3482  000A3C  C00A  F006         	line	30
  3483                           	
  3484                           l652:
  3485  000A40                     	return	;funcret
  3486  000A40  0012               	opt stack 0
  3487                           GLOBAL	__end_of___lwdiv
  3488                           	__end_of___lwdiv:
  3489  000A42                     	signat	___lwdiv,8314
  3490                           	global	___lmul
  3491                           
  3492 ;; *************** function ___lmul *****************
  3493 ;; Defined at:
  3494 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  multiplier      4    4[COMRAM] unsigned long 
  3497 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  product         4   12[COMRAM] unsigned long 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  4    4[COMRAM] unsigned long 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0
  3509 ;;      Params:         8       0
  3510 ;;      Locals:         4       0
  3511 ;;      Temps:          0       0
  3512 ;;      Totals:        12       0
  3513 ;;Total ram usage:       12 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_send_Status
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           psect	text10,class=CODE,space=0,reloc=2,group=1
  3523                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3524                           	line	15
  3525                           global __ptext10
  3526                           __ptext10:
  3527  000ABA                     psect	text10
  3528                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3529                           	line	15
  3530                           	global	__size_of___lmul
  3531                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3532  0000                     	
  3533                           ___lmul:
  3534  000ABA                     ;incstack = 0
  3535                           	opt	stack 28
  3536                           	line	119
  3537                           	
  3538                           l1497:
  3539  000ABA                     	movlw	low(0)
  3540  000ABA  0E00               	movwf	((c:___lmul@product)),c
  3541  000ABC  6E0D               	movlw	high(0)
  3542  000ABE  0E00               	movwf	((c:___lmul@product+1)),c
  3543  000AC0  6E0E               	movlw	low highword(0)
  3544  000AC2  0E00               	movwf	((c:___lmul@product+2)),c
  3545  000AC4  6E0F               	movlw	high highword(0)
  3546  000AC6  0E00               	movwf	((c:___lmul@product+3)),c
  3547  000AC8  6E10               	goto	l1499
  3548  000ACA  EF67  F005         	line	120
  3549                           	
  3550                           l175:
  3551  000ACE                     	line	121
  3552                           	
  3553                           l1499:
  3554  000ACE                     	
  3555                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  3556  000ACE  A005               	goto	u751
  3557  000AD0  EF6C  F005         	goto	u750
  3558  000AD4  EF6E  F005         u751:
  3559  000AD8                     	goto	l1503
  3560  000AD8  EF78  F005         u750:
  3561  000ADC                     	line	122
  3562                           	
  3563                           l1501:
  3564  000ADC                     	movf	((c:___lmul@multiplicand)),c,w
  3565  000ADC  5009               	addwf	((c:___lmul@product)),c
  3566  000ADE  260D               	movf	((c:___lmul@multiplicand+1)),c,w
  3567  000AE0  500A               	addwfc	((c:___lmul@product+1)),c
  3568  000AE2  220E               	movf	((c:___lmul@multiplicand+2)),c,w
  3569  000AE4  500B               	addwfc	((c:___lmul@product+2)),c
  3570  000AE6  220F               	movf	((c:___lmul@multiplicand+3)),c,w
  3571  000AE8  500C               	addwfc	((c:___lmul@product+3)),c
  3572  000AEA  2210               	goto	l1503
  3573  000AEC  EF78  F005         	
  3574                           l176:
  3575  000AF0                     	line	123
  3576                           	
  3577                           l1503:
  3578  000AF0                     	bcf	status,0
  3579  000AF0  90D8               	rlcf	((c:___lmul@multiplicand)),c
  3580  000AF2  3609               	rlcf	((c:___lmul@multiplicand+1)),c
  3581  000AF4  360A               	rlcf	((c:___lmul@multiplicand+2)),c
  3582  000AF6  360B               	rlcf	((c:___lmul@multiplicand+3)),c
  3583  000AF8  360C               	line	124
  3584                           	
  3585                           l1505:
  3586  000AFA                     	bcf	status,0
  3587  000AFA  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  3588  000AFC  3208               	rrcf	((c:___lmul@multiplier+2)),c
  3589  000AFE  3207               	rrcf	((c:___lmul@multiplier+1)),c
  3590  000B00  3206               	rrcf	((c:___lmul@multiplier)),c
  3591  000B02  3205               	line	125
  3592                           	movf	((c:___lmul@multiplier)),c,w
  3593  000B04  5005               iorwf	((c:___lmul@multiplier+1)),c,w
  3594  000B06  1006               iorwf	((c:___lmul@multiplier+2)),c,w
  3595  000B08  1007               iorwf	((c:___lmul@multiplier+3)),c,w
  3596  000B0A  1008               	btfss	status,2
  3597  000B0C  A4D8               	goto	u761
  3598  000B0E  EF8B  F005         	goto	u760
  3599  000B12  EF8D  F005         
  3600                           u761:
  3601  000B16                     	goto	l1499
  3602  000B16  EF67  F005         u760:
  3603  000B1A                     	
  3604                           l177:
  3605  000B1A                     	line	128
  3606                           	movff	(c:___lmul@product),(c:?___lmul)
  3607  000B1A  C00D  F005         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  3608  000B1E  C00E  F006         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  3609  000B22  C00F  F007         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  3610  000B26  C010  F008         	line	129
  3611                           	
  3612                           l178:
  3613  000B2A                     	return	;funcret
  3614  000B2A  0012               	opt stack 0
  3615                           GLOBAL	__end_of___lmul
  3616                           	__end_of___lmul:
  3617  000B2C                     	signat	___lmul,8316
  3618                           	global	___lldiv
  3619                           
  3620 ;; *************** function ___lldiv *****************
  3621 ;; Defined at:
  3622 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  dividend        4    4[COMRAM] unsigned long 
  3625 ;;  divisor         4    8[COMRAM] unsigned long 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  quotient        4   12[COMRAM] unsigned long 
  3628 ;;  counter         1   16[COMRAM] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  4    4[COMRAM] unsigned long 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0
  3638 ;;      Params:         8       0
  3639 ;;      Locals:         5       0
  3640 ;;      Temps:          0       0
  3641 ;;      Totals:        13       0
  3642 ;;Total ram usage:       13 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_send_Status
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           psect	text11,class=CODE,space=0,reloc=2,group=1
  3652                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3653                           	line	7
  3654                           global __ptext11
  3655                           __ptext11:
  3656  000878                     psect	text11
  3657                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3658                           	line	7
  3659                           	global	__size_of___lldiv
  3660                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3661  0000                     	
  3662                           ___lldiv:
  3663  000878                     ;incstack = 0
  3664                           	opt	stack 28
  3665                           	line	13
  3666                           	
  3667                           l1507:
  3668  000878                     	movlw	low(0)
  3669  000878  0E00               	movwf	((c:___lldiv@quotient)),c
  3670  00087A  6E0D               	movlw	high(0)
  3671  00087C  0E00               	movwf	((c:___lldiv@quotient+1)),c
  3672  00087E  6E0E               	movlw	low highword(0)
  3673  000880  0E00               	movwf	((c:___lldiv@quotient+2)),c
  3674  000882  6E0F               	movlw	high highword(0)
  3675  000884  0E00               	movwf	((c:___lldiv@quotient+3)),c
  3676  000886  6E10               	line	14
  3677                           	
  3678                           l1509:
  3679  000888                     	movf	((c:___lldiv@divisor)),c,w
  3680  000888  5009               iorwf	((c:___lldiv@divisor+1)),c,w
  3681  00088A  100A               iorwf	((c:___lldiv@divisor+2)),c,w
  3682  00088C  100B               iorwf	((c:___lldiv@divisor+3)),c,w
  3683  00088E  100C               	btfsc	status,2
  3684  000890  B4D8               	goto	u771
  3685  000892  EF4D  F004         	goto	u770
  3686  000896  EF4F  F004         
  3687                           u771:
  3688  00089A                     	goto	l193
  3689  00089A  EF8F  F004         u770:
  3690  00089E                     	line	15
  3691                           	
  3692                           l1511:
  3693  00089E                     	movlw	low(01h)
  3694  00089E  0E01               	movwf	((c:___lldiv@counter)),c
  3695  0008A0  6E11               	line	16
  3696                           	goto	l1515
  3697  0008A2  EF5B  F004         	
  3698                           l195:
  3699  0008A6                     	line	17
  3700                           	
  3701                           l1513:
  3702  0008A6                     	bcf	status,0
  3703  0008A6  90D8               	rlcf	((c:___lldiv@divisor)),c
  3704  0008A8  3609               	rlcf	((c:___lldiv@divisor+1)),c
  3705  0008AA  360A               	rlcf	((c:___lldiv@divisor+2)),c
  3706  0008AC  360B               	rlcf	((c:___lldiv@divisor+3)),c
  3707  0008AE  360C               	line	18
  3708                           	incf	((c:___lldiv@counter)),c
  3709  0008B0  2A11               	goto	l1515
  3710  0008B2  EF5B  F004         	line	19
  3711                           	
  3712                           l194:
  3713  0008B6                     	line	16
  3714                           	
  3715                           l1515:
  3716  0008B6                     	
  3717                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  3718  0008B6  AE0C               	goto	u781
  3719  0008B8  EF60  F004         	goto	u780
  3720  0008BC  EF62  F004         u781:
  3721  0008C0                     	goto	l1513
  3722  0008C0  EF53  F004         u780:
  3723  0008C4                     	goto	l1517
  3724  0008C4  EF66  F004         	
  3725                           l196:
  3726  0008C8                     	goto	l1517
  3727  0008C8  EF66  F004         	line	20
  3728                           	
  3729                           l197:
  3730  0008CC                     	line	21
  3731                           	
  3732                           l1517:
  3733  0008CC                     	bcf	status,0
  3734  0008CC  90D8               	rlcf	((c:___lldiv@quotient)),c
  3735  0008CE  360D               	rlcf	((c:___lldiv@quotient+1)),c
  3736  0008D0  360E               	rlcf	((c:___lldiv@quotient+2)),c
  3737  0008D2  360F               	rlcf	((c:___lldiv@quotient+3)),c
  3738  0008D4  3610               	line	22
  3739                           	
  3740                           l1519:
  3741  0008D6                     		movf	((c:___lldiv@divisor)),c,w
  3742  0008D6  5009               	subwf	((c:___lldiv@dividend)),c,w
  3743  0008D8  5C05               	movf	((c:___lldiv@divisor+1)),c,w
  3744  0008DA  500A               	subwfb	((c:___lldiv@dividend+1)),c,w
  3745  0008DC  5806               	movf	((c:___lldiv@divisor+2)),c,w
  3746  0008DE  500B               	subwfb	((c:___lldiv@dividend+2)),c,w
  3747  0008E0  5807               	movf	((c:___lldiv@divisor+3)),c,w
  3748  0008E2  500C               	subwfb	((c:___lldiv@dividend+3)),c,w
  3749  0008E4  5808               	btfss	status,0
  3750  0008E6  A0D8               	goto	u791
  3751  0008E8  EF78  F004         	goto	u790
  3752  0008EC  EF7A  F004         
  3753                           u791:
  3754  0008F0                     	goto	l1525
  3755  0008F0  EF85  F004         u790:
  3756  0008F4                     	line	23
  3757                           	
  3758                           l1521:
  3759  0008F4                     	movf	((c:___lldiv@divisor)),c,w
  3760  0008F4  5009               	subwf	((c:___lldiv@dividend)),c
  3761  0008F6  5E05               	movf	((c:___lldiv@divisor+1)),c,w
  3762  0008F8  500A               	subwfb	((c:___lldiv@dividend+1)),c
  3763  0008FA  5A06               	movf	((c:___lldiv@divisor+2)),c,w
  3764  0008FC  500B               	subwfb	((c:___lldiv@dividend+2)),c
  3765  0008FE  5A07               	movf	((c:___lldiv@divisor+3)),c,w
  3766  000900  500C               	subwfb	((c:___lldiv@dividend+3)),c
  3767  000902  5A08               	line	24
  3768                           	
  3769                           l1523:
  3770  000904                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  3771  000904  800D               	goto	l1525
  3772  000906  EF85  F004         	line	25
  3773                           	
  3774                           l198:
  3775  00090A                     	line	26
  3776                           	
  3777                           l1525:
  3778  00090A                     	bcf	status,0
  3779  00090A  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  3780  00090C  320C               	rrcf	((c:___lldiv@divisor+2)),c
  3781  00090E  320B               	rrcf	((c:___lldiv@divisor+1)),c
  3782  000910  320A               	rrcf	((c:___lldiv@divisor)),c
  3783  000912  3209               	line	27
  3784                           	
  3785                           l1527:
  3786  000914                     	decfsz	((c:___lldiv@counter)),c
  3787  000914  2E11               	
  3788                           	goto	l1517
  3789  000916  EF66  F004         	goto	l193
  3790  00091A  EF8F  F004         	
  3791                           l199:
  3792  00091E                     	line	28
  3793                           	
  3794                           l193:
  3795  00091E                     	line	29
  3796                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  3797  00091E  C00D  F005         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  3798  000922  C00E  F006         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  3799  000926  C00F  F007         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  3800  00092A  C010  F008         	line	30
  3801                           	
  3802                           l200:
  3803  00092E                     	return	;funcret
  3804  00092E  0012               	opt stack 0
  3805                           GLOBAL	__end_of___lldiv
  3806                           	__end_of___lldiv:
  3807  000930                     	signat	___lldiv,8316
  3808                           	global	_UART_Write_Text
  3809                           
  3810 ;; *************** function _UART_Write_Text *****************
  3811 ;; Defined at:
  3812 ;;		line 38 in file "uart.h"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  text            2    5[COMRAM] PTR unsigned char 
  3815 ;;		 -> STR_13(15), STR_12(14), STR_11(14), STR_10(4), 
  3816 ;;		 -> STR_9(3), STR_8(5), STR_7(4), STR_6(4), 
  3817 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(6), 
  3818 ;;		 -> STR_1(5), send_Status@buffer(10), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  i               2   10[COMRAM] int 
  3821 ;;  toSend          1    9[COMRAM] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0
  3831 ;;      Params:         2       0
  3832 ;;      Locals:         3       0
  3833 ;;      Temps:          2       0
  3834 ;;      Totals:         7       0
  3835 ;;Total ram usage:        7 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    2
  3838 ;; This function calls:
  3839 ;;		_UART_Write_byte
  3840 ;; This function is called by:
  3841 ;;		_send_Status
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3846                           	file	"uart.h"
  3847                           	line	38
  3848                           global __ptext12
  3849                           __ptext12:
  3850  000930                     psect	text12
  3851                           	file	"uart.h"
  3852                           	line	38
  3853                           	global	__size_of_UART_Write_Text
  3854                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  3855  0000                     	
  3856                           _UART_Write_Text:
  3857  000930                     ;incstack = 0
  3858                           	opt	stack 27
  3859                           	line	40
  3860                           	
  3861                           l1453:
  3862  000930                     ;uart.h: 39: unsigned char toSend;;uart.h: 40: for (int i = 0; text[i] != '\0'; i++){
  3863                           	movlw	high(0)
  3864  000930  0E00               	movwf	((c:UART_Write_Text@i+1)),c
  3865  000932  6E0C               	movlw	low(0)
  3866  000934  0E00               	movwf	((c:UART_Write_Text@i)),c
  3867  000936  6E0B               	goto	l1461
  3868  000938  EFBC  F004         	
  3869                           l89:
  3870  00093C                     	line	41
  3871                           	
  3872                           l1455:
  3873  00093C                     ;uart.h: 41: toSend = text[i];
  3874                           	movf	((c:UART_Write_Text@i)),c,w
  3875  00093C  500B               	addwf	((c:UART_Write_Text@text)),c,w
  3876  00093E  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  3877  000940  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  3878  000942  500C               	addwfc	((c:UART_Write_Text@text+1)),c,w
  3879  000944  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  3880  000946  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  3881  000948  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  3882  00094C  C009  FFF7         	clrf	tblptru
  3883  000950  6AF8               	
  3884                           	movlw	high __ramtop-1
  3885  000952  0E00               	cpfsgt	tblptrh
  3886  000954  64F7               	bra	u697
  3887  000956  D003               	tblrd	*
  3888  000958  0008               	
  3889                           	movf	tablat,w
  3890  00095A  50F5               	bra	u690
  3891  00095C  D005               u697:
  3892  00095E                     	movff	tblptrl,fsr2l
  3893  00095E  CFF6 FFD9          	movff	tblptrh,fsr2h
  3894  000962  CFF7 FFDA          	movf	indf2,w
  3895  000966  50DF               u690:
  3896  000968                     	movwf	((c:UART_Write_Text@toSend)),c
  3897  000968  6E0A               	line	42
  3898                           	
  3899                           l1457:
  3900  00096A                     ;uart.h: 42: UART_Write_byte(toSend);
  3901                           	movf	((c:UART_Write_Text@toSend)),c,w
  3902  00096A  500A               	
  3903                           	call	_UART_Write_byte
  3904  00096C  ECD3  F006         	line	40
  3905                           	
  3906                           l1459:
  3907  000970                     	infsnz	((c:UART_Write_Text@i)),c
  3908  000970  4A0B               	incf	((c:UART_Write_Text@i+1)),c
  3909  000972  2A0C               	goto	l1461
  3910  000974  EFBC  F004         	
  3911                           l88:
  3912  000978                     	
  3913                           l1461:
  3914  000978                     	movf	((c:UART_Write_Text@i)),c,w
  3915  000978  500B               	addwf	((c:UART_Write_Text@text)),c,w
  3916  00097A  2406               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
  3917  00097C  6E08               	movf	((c:UART_Write_Text@i+1)),c,w
  3918  00097E  500C               	addwfc	((c:UART_Write_Text@text+1)),c,w
  3919  000980  2007               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
  3920  000982  6E09               	movff	??_UART_Write_Text+0+0,tblptrl
  3921  000984  C008  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  3922  000988  C009  FFF7         	clrf	tblptru
  3923  00098C  6AF8               	
  3924                           	movlw	high __ramtop-1
  3925  00098E  0E00               	cpfsgt	tblptrh
  3926  000990  64F7               	bra	u707
  3927  000992  D003               	tblrd	*
  3928  000994  0008               	
  3929                           	movf	tablat,w
  3930  000996  50F5               	bra	u700
  3931  000998  D005               u707:
  3932  00099A                     	movff	tblptrl,fsr2l
  3933  00099A  CFF6 FFD9          	movff	tblptrh,fsr2h
  3934  00099E  CFF7 FFDA          	movf	indf2,w
  3935  0009A2  50DF               u700:
  3936  0009A4                     	iorlw	0
  3937  0009A4  0900               	btfss	status,2
  3938  0009A6  A4D8               	goto	u711
  3939  0009A8  EFD8  F004         	goto	u710
  3940  0009AC  EFDA  F004         u711:
  3941  0009B0                     	goto	l1455
  3942  0009B0  EF9E  F004         u710:
  3943  0009B4                     	goto	l91
  3944  0009B4  EFDC  F004         	
  3945                           l90:
  3946  0009B8                     	line	44
  3947                           	
  3948                           l91:
  3949  0009B8                     	return	;funcret
  3950  0009B8  0012               	opt stack 0
  3951                           GLOBAL	__end_of_UART_Write_Text
  3952                           	__end_of_UART_Write_Text:
  3953  0009BA                     	signat	_UART_Write_Text,4217
  3954                           	global	_UART_Write_byte
  3955                           
  3956 ;; *************** function _UART_Write_byte *****************
  3957 ;; Defined at:
  3958 ;;		line 33 in file "uart.h"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  data            1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  data            1    4[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0
  3972 ;;      Params:         0       0
  3973 ;;      Locals:         1       0
  3974 ;;      Temps:          0       0
  3975 ;;      Totals:         1       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_UART_Write_Text
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3986                           	line	33
  3987                           global __ptext13
  3988                           __ptext13:
  3989  000DA6                     psect	text13
  3990                           	file	"uart.h"
  3991                           	line	33
  3992                           	global	__size_of_UART_Write_byte
  3993                           	__size_of_UART_Write_byte	equ	__end_of_UART_Write_byte-_UART_Write_byte
  3994  0000                     	
  3995                           _UART_Write_byte:
  3996  000DA6                     ;incstack = 0
  3997                           	opt	stack 27
  3998                           ;UART_Write_byte@data stored from wreg
  3999                           	movwf	((c:UART_Write_byte@data)),c
  4000  000DA6  6E05               	line	34
  4001                           	
  4002                           l1011:
  4003  000DA8                     ;uart.h: 34: while (!TRMT);
  4004                           	goto	l82
  4005  000DA8  EFD6  F006         	
  4006                           l83:
  4007  000DAC                     	
  4008                           l82:
  4009  000DAC                     	btfss	c:(32097/8),(32097)&7	;volatile
  4010  000DAC  A2AC               	goto	u81
  4011  000DAE  EFDB  F006         	goto	u80
  4012  000DB2  EFDD  F006         u81:
  4013  000DB6                     	goto	l82
  4014  000DB6  EFD6  F006         u80:
  4015  000DBA                     	goto	l1013
  4016  000DBA  EFDF  F006         	
  4017                           l84:
  4018  000DBE                     	line	35
  4019                           	
  4020                           l1013:
  4021  000DBE                     ;uart.h: 35: TXREG = data;
  4022                           	movff	(c:UART_Write_byte@data),(c:4013)	;volatile
  4023  000DBE  C005  FFAD         	line	36
  4024                           	
  4025                           l85:
  4026  000DC2                     	return	;funcret
  4027  000DC2  0012               	opt stack 0
  4028                           GLOBAL	__end_of_UART_Write_byte
  4029                           	__end_of_UART_Write_byte:
  4030  000DC4                     	signat	_UART_Write_byte,4217
  4031                           	global	_ADC_Get
  4032                           
  4033 ;; *************** function _ADC_Get *****************
  4034 ;; Defined at:
  4035 ;;		line 37 in file "adc.h"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  advalue         2   11[COMRAM] unsigned int 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    7[COMRAM] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0
  4049 ;;      Params:         2       0
  4050 ;;      Locals:         2       0
  4051 ;;      Temps:          2       0
  4052 ;;      Totals:         6       0
  4053 ;;Total ram usage:        6 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    2
  4056 ;; This function calls:
  4057 ;;		_delay_ms
  4058 ;; This function is called by:
  4059 ;;		_send_Status
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4063                           	file	"adc.h"
  4064                           	line	37
  4065                           global __ptext14
  4066                           __ptext14:
  4067  000C2E                     psect	text14
  4068                           	file	"adc.h"
  4069                           	line	37
  4070                           	global	__size_of_ADC_Get
  4071                           	__size_of_ADC_Get	equ	__end_of_ADC_Get-_ADC_Get
  4072  0000                     	
  4073                           _ADC_Get:
  4074  000C2E                     ;incstack = 0
  4075                           	opt	stack 27
  4076                           	line	38
  4077                           	
  4078                           l1471:
  4079  000C2E                     ;adc.h: 38: ADCON0bits.ADON = 0b1;
  4080                           	bsf	((c:4034)),c,0	;volatile
  4081  000C2E  80C2               	line	39
  4082                           	
  4083                           l1473:
  4084  000C30                     ;adc.h: 39: delay_ms(10);
  4085                           	movlw	high(0Ah)
  4086  000C30  0E00               	movwf	((c:delay_ms@repeat_2+1)),c
  4087  000C32  6E06               	movlw	low(0Ah)
  4088  000C34  0E0A               	movwf	((c:delay_ms@repeat_2)),c
  4089  000C36  6E05               	call	_delay_ms	;wreg free
  4090  000C38  EC5B  F006         	line	40
  4091                           	
  4092                           l1475:
  4093  000C3C                     ;adc.h: 40: ADCON0bits.GO_DONE = 1;
  4094                           	bsf	((c:4034)),c,1	;volatile
  4095  000C3C  82C2               	line	41
  4096                           ;adc.h: 41: while(ADCON0bits.GO_DONE == 1);
  4097                           	goto	l107
  4098  000C3E  EF21  F006         	
  4099                           l108:
  4100  000C42                     	
  4101                           l107:
  4102  000C42                     	btfsc	((c:4034)),c,1	;volatile
  4103  000C42  B2C2               	goto	u731
  4104  000C44  EF26  F006         	goto	u730
  4105  000C48  EF28  F006         u731:
  4106  000C4C                     	goto	l107
  4107  000C4C  EF21  F006         u730:
  4108  000C50                     	goto	l1477
  4109  000C50  EF2A  F006         	
  4110                           l109:
  4111  000C54                     	line	42
  4112                           	
  4113                           l1477:
  4114  000C54                     ;adc.h: 42: unsigned int advalue = (unsigned int)(((unsigned char)ADRESH << 8) + (unsign
                                 ed char)ADRESL);
  4115                           	movf	((c:4036)),c,w	;volatile
  4116  000C54  50C4               	movwf	(??_ADC_Get+0+0+1)&0ffh,c
  4117  000C56  6E0B               	clrf	(??_ADC_Get+0+0)&0ffh,c
  4118  000C58  6A0A               	movf	((c:4035)),c,w	;volatile
  4119  000C5A  50C3               	addwf	(??_ADC_Get+0+0),c,w
  4120  000C5C  240A               	movwf	((c:ADC_Get@advalue)),c
  4121  000C5E  6E0C               	movlw	0
  4122  000C60  0E00               	addwfc	(??_ADC_Get+0+1),c,w
  4123  000C62  200B               	movwf	1+((c:ADC_Get@advalue)),c
  4124  000C64  6E0D               	line	43
  4125                           	
  4126                           l1479:
  4127  000C66                     ;adc.h: 43: ADCON0bits.ADON = 0b0;
  4128                           	bcf	((c:4034)),c,0	;volatile
  4129  000C66  90C2               	line	44
  4130                           	
  4131                           l1481:
  4132  000C68                     ;adc.h: 44: return advalue;
  4133                           	movff	(c:ADC_Get@advalue),(c:?_ADC_Get)
  4134  000C68  C00C  F008         	movff	(c:ADC_Get@advalue+1),(c:?_ADC_Get+1)
  4135  000C6C  C00D  F009         	goto	l110
  4136  000C70  EF3A  F006         	
  4137                           l1483:
  4138  000C74                     	line	45
  4139                           	
  4140                           l110:
  4141  000C74                     	return	;funcret
  4142  000C74  0012               	opt stack 0
  4143                           GLOBAL	__end_of_ADC_Get
  4144                           	__end_of_ADC_Get:
  4145  000C76                     	signat	_ADC_Get,90
  4146                           	global	_delay_s
  4147                           
  4148 ;; *************** function _delay_s *****************
  4149 ;; Defined at:
  4150 ;;		line 22 in file "delay.h"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  repeat_3        2    7[COMRAM] int 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0
  4164 ;;      Params:         2       0
  4165 ;;      Locals:         0       0
  4166 ;;      Temps:          0       0
  4167 ;;      Totals:         2       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    2
  4171 ;; This function calls:
  4172 ;;		_delay_ms
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4178                           	file	"delay.h"
  4179                           	line	22
  4180                           global __ptext15
  4181                           __ptext15:
  4182  000CEE                     psect	text15
  4183                           	file	"delay.h"
  4184                           	line	22
  4185                           	global	__size_of_delay_s
  4186                           	__size_of_delay_s	equ	__end_of_delay_s-_delay_s
  4187  0000                     	
  4188                           _delay_s:
  4189  000CEE                     ;incstack = 0
  4190                           	opt	stack 28
  4191                           	line	23
  4192                           	
  4193                           l1569:
  4194  000CEE                     ;delay.h: 23: while(repeat_3--){
  4195                           	goto	l1573
  4196  000CEE  EF81  F006         	
  4197                           l70:
  4198  000CF2                     	line	24
  4199                           	
  4200                           l1571:
  4201  000CF2                     ;delay.h: 24: delay_ms(1000);
  4202                           	movlw	high(03E8h)
  4203  000CF2  0E03               	movwf	((c:delay_ms@repeat_2+1)),c
  4204  000CF4  6E06               	movlw	low(03E8h)
  4205  000CF6  0EE8               	movwf	((c:delay_ms@repeat_2)),c
  4206  000CF8  6E05               	call	_delay_ms	;wreg free
  4207  000CFA  EC5B  F006         	goto	l1573
  4208  000CFE  EF81  F006         	line	25
  4209                           	
  4210                           l69:
  4211  000D02                     	line	23
  4212                           	
  4213                           l1573:
  4214  000D02                     	decf	((c:delay_s@repeat_3)),c
  4215  000D02  0608               	btfss	status,0
  4216  000D04  A0D8               	decf	((c:delay_s@repeat_3+1)),c
  4217  000D06  0609               		incf	((c:delay_s@repeat_3)),c,w
  4218  000D08  2808               	bnz	u861
  4219  000D0A  E106               	incf	((c:delay_s@repeat_3+1)),c,w
  4220  000D0C  2809               	btfss	status,2
  4221  000D0E  A4D8               	goto	u861
  4222  000D10  EF8C  F006         	goto	u860
  4223  000D14  EF8E  F006         
  4224                           u861:
  4225  000D18                     	goto	l1571
  4226  000D18  EF79  F006         u860:
  4227  000D1C                     	goto	l72
  4228  000D1C  EF90  F006         	
  4229                           l71:
  4230  000D20                     	line	26
  4231                           	
  4232                           l72:
  4233  000D20                     	return	;funcret
  4234  000D20  0012               	opt stack 0
  4235                           GLOBAL	__end_of_delay_s
  4236                           	__end_of_delay_s:
  4237  000D22                     	signat	_delay_s,4217
  4238                           	global	_delay_ms
  4239                           
  4240 ;; *************** function _delay_ms *****************
  4241 ;; Defined at:
  4242 ;;		line 16 in file "delay.h"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  repeat_2        2    4[COMRAM] int 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0
  4256 ;;      Params:         2       0
  4257 ;;      Locals:         0       0
  4258 ;;      Temps:          1       0
  4259 ;;      Totals:         3       0
  4260 ;;Total ram usage:        3 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_delay_s
  4267 ;;		_ADC_Get
  4268 ;;		_main
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4272                           	line	16
  4273                           global __ptext16
  4274                           __ptext16:
  4275  000CB6                     psect	text16
  4276                           	file	"delay.h"
  4277                           	line	16
  4278                           	global	__size_of_delay_ms
  4279                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  4280  0000                     	
  4281                           _delay_ms:
  4282  000CB6                     ;incstack = 0
  4283                           	opt	stack 27
  4284                           	line	17
  4285                           	
  4286                           l1417:
  4287  000CB6                     ;delay.h: 17: while(repeat_2--){
  4288                           	goto	l1421
  4289  000CB6  EF67  F006         	
  4290                           l64:
  4291  000CBA                     	line	18
  4292                           	
  4293                           l1419:
  4294  000CBA                     ;delay.h: 18: _delay((unsigned long)((1)*(32000000/4000.0)));
  4295                           	opt asmopt_push
  4296                           opt asmopt_off
  4297                           movlw	11
  4298  000CBA  0E0B               movwf	(??_delay_ms+0+0)&0ffh,c,f
  4299  000CBC  6E07               	movlw	98
  4300  000CBE  0E62               u1137:
  4301  000CC0                     decfsz	wreg,f
  4302  000CC0  2EE8               	bra	u1137
  4303  000CC2  D7FE               	decfsz	(??_delay_ms+0+0)&0ffh,c,f
  4304  000CC4  2E07               	bra	u1137
  4305  000CC6  D7FC               	nop2
  4306  000CC8  D000               opt asmopt_pop
  4307                           
  4308                           	goto	l1421
  4309  000CCA  EF67  F006         	line	19
  4310                           	
  4311                           l63:
  4312  000CCE                     	line	17
  4313                           	
  4314                           l1421:
  4315  000CCE                     	decf	((c:delay_ms@repeat_2)),c
  4316  000CCE  0605               	btfss	status,0
  4317  000CD0  A0D8               	decf	((c:delay_ms@repeat_2+1)),c
  4318  000CD2  0606               		incf	((c:delay_ms@repeat_2)),c,w
  4319  000CD4  2805               	bnz	u651
  4320  000CD6  E106               	incf	((c:delay_ms@repeat_2+1)),c,w
  4321  000CD8  2806               	btfss	status,2
  4322  000CDA  A4D8               	goto	u651
  4323  000CDC  EF72  F006         	goto	u650
  4324  000CE0  EF74  F006         
  4325                           u651:
  4326  000CE4                     	goto	l1419
  4327  000CE4  EF5D  F006         u650:
  4328  000CE8                     	goto	l66
  4329  000CE8  EF76  F006         	
  4330                           l65:
  4331  000CEC                     	line	20
  4332                           	
  4333                           l66:
  4334  000CEC                     	return	;funcret
  4335  000CEC  0012               	opt stack 0
  4336                           GLOBAL	__end_of_delay_ms
  4337                           	__end_of_delay_ms:
  4338  000CEE                     	signat	_delay_ms,4217
  4339                           	global	_UART_clean_buffer
  4340                           
  4341 ;; *************** function _UART_clean_buffer *****************
  4342 ;; Defined at:
  4343 ;;		line 46 in file "uart.h"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0
  4357 ;;      Params:         0       0
  4358 ;;      Locals:         0       0
  4359 ;;      Temps:          0       0
  4360 ;;      Totals:         0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    2
  4364 ;; This function calls:
  4365 ;;		_memset
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4371                           	file	"uart.h"
  4372                           	line	46
  4373                           global __ptext17
  4374                           __ptext17:
  4375  000D84                     psect	text17
  4376                           	file	"uart.h"
  4377                           	line	46
  4378                           	global	__size_of_UART_clean_buffer
  4379                           	__size_of_UART_clean_buffer	equ	__end_of_UART_clean_buffer-_UART_clean_buffer
  4380  0000                     	
  4381                           _UART_clean_buffer:
  4382  000D84                     ;incstack = 0
  4383                           	opt	stack 28
  4384                           	line	47
  4385                           	
  4386                           l1575:
  4387  000D84                     ;uart.h: 47: memset(UART_buffer, 45, sizeof (UART_buffer));
  4388                           		movlw	low(_UART_buffer)
  4389  000D84  0E32               	movwf	((c:memset@p1)),c
  4390  000D86  6E05               	movlw	high(_UART_buffer)
  4391  000D88  0E00               	movwf	((c:memset@p1+1)),c
  4392  000D8A  6E06               
  4393                           	movlw	high(02Dh)
  4394  000D8C  0E00               	movwf	((c:memset@c+1)),c
  4395  000D8E  6E08               	movlw	low(02Dh)
  4396  000D90  0E2D               	movwf	((c:memset@c)),c
  4397  000D92  6E07               	movlw	high(010h)
  4398  000D94  0E00               	movwf	((c:memset@n+1)),c
  4399  000D96  6E0A               	movlw	low(010h)
  4400  000D98  0E10               	movwf	((c:memset@n)),c
  4401  000D9A  6E09               	call	_memset	;wreg free
  4402  000D9C  EC3B  F006         	line	48
  4403                           	
  4404                           l1577:
  4405  000DA0                     ;uart.h: 48: UART_Buffer_Ptr = 0;
  4406                           	movlw	low(0)
  4407  000DA0  0E00               	movwf	((c:_UART_Buffer_Ptr)),c
  4408  000DA2  6E31               	line	49
  4409                           	
  4410                           l94:
  4411  000DA4                     	return	;funcret
  4412  000DA4  0012               	opt stack 0
  4413                           GLOBAL	__end_of_UART_clean_buffer
  4414                           	__end_of_UART_clean_buffer:
  4415  000DA6                     	signat	_UART_clean_buffer,89
  4416                           	global	_memset
  4417                           
  4418 ;; *************** function _memset *****************
  4419 ;; Defined at:
  4420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  p1              2    4[COMRAM] PTR void 
  4423 ;;		 -> UART_buffer(16), 
  4424 ;;  c               2    6[COMRAM] int 
  4425 ;;  n               2    8[COMRAM] unsigned int 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  p               2   10[COMRAM] PTR unsigned char 
  4428 ;;		 -> UART_buffer(16), 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    4[COMRAM] PTR void 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0
  4438 ;;      Params:         6       0
  4439 ;;      Locals:         2       0
  4440 ;;      Temps:          0       0
  4441 ;;      Totals:         8       0
  4442 ;;Total ram usage:        8 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_UART_clean_buffer
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           psect	text18,class=CODE,space=0,reloc=2,group=2
  4452                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4453                           	line	8
  4454                           global __ptext18
  4455                           __ptext18:
  4456  000C76                     psect	text18
  4457                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4458                           	line	8
  4459                           	global	__size_of_memset
  4460                           	__size_of_memset	equ	__end_of_memset-_memset
  4461  0000                     	
  4462                           _memset:
  4463  000C76                     ;incstack = 0
  4464                           	opt	stack 28
  4465                           	line	18
  4466                           	
  4467                           l1463:
  4468  000C76                     		movff	(c:memset@p1),(c:memset@p)
  4469  000C76  C005  F00B         	movff	(c:memset@p1+1),(c:memset@p+1)
  4470  000C7A  C006  F00C         
  4471                           	line	19
  4472                           	goto	l1469
  4473  000C7E  EF4B  F006         	
  4474                           l843:
  4475  000C82                     	line	20
  4476                           	
  4477                           l1465:
  4478  000C82                     	movff	(c:memset@p),fsr2l
  4479  000C82  C00B  FFD9         	movff	(c:memset@p+1),fsr2h
  4480  000C86  C00C  FFDA         	movff	(c:memset@c),indf2
  4481  000C8A  C007  FFDF         
  4482                           	
  4483                           l1467:
  4484  000C8E                     	infsnz	((c:memset@p)),c
  4485  000C8E  4A0B               	incf	((c:memset@p+1)),c
  4486  000C90  2A0C               	goto	l1469
  4487  000C92  EF4B  F006         	
  4488                           l842:
  4489  000C96                     	line	19
  4490                           	
  4491                           l1469:
  4492  000C96                     	decf	((c:memset@n)),c
  4493  000C96  0609               	btfss	status,0
  4494  000C98  A0D8               	decf	((c:memset@n+1)),c
  4495  000C9A  060A               		incf	((c:memset@n)),c,w
  4496  000C9C  2809               	bnz	u721
  4497  000C9E  E106               	incf	((c:memset@n+1)),c,w
  4498  000CA0  280A               	btfss	status,2
  4499  000CA2  A4D8               	goto	u721
  4500  000CA4  EF56  F006         	goto	u720
  4501  000CA8  EF58  F006         
  4502                           u721:
  4503  000CAC                     	goto	l1465
  4504  000CAC  EF41  F006         u720:
  4505  000CB0                     	goto	l845
  4506  000CB0  EF5A  F006         	
  4507                           l844:
  4508  000CB4                     	line	22
  4509                           ;	Return value of _memset is never used
  4510                           	
  4511                           l845:
  4512  000CB4                     	return	;funcret
  4513  000CB4  0012               	opt stack 0
  4514                           GLOBAL	__end_of_memset
  4515                           	__end_of_memset:
  4516  000CB6                     	signat	_memset,12410
  4517                           	global	_UART_Init
  4518                           
  4519 ;; *************** function _UART_Init *****************
  4520 ;; Defined at:
  4521 ;;		line 12 in file "uart.h"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0
  4535 ;;      Params:         0       0
  4536 ;;      Locals:         0       0
  4537 ;;      Temps:          0       0
  4538 ;;      Totals:         0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           psect	text19,class=CODE,space=0,reloc=2,group=0
  4549                           	file	"uart.h"
  4550                           	line	12
  4551                           global __ptext19
  4552                           __ptext19:
  4553  000DC4                     psect	text19
  4554                           	file	"uart.h"
  4555                           	line	12
  4556                           	global	__size_of_UART_Init
  4557                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  4558  0000                     	
  4559                           _UART_Init:
  4560  000DC4                     ;incstack = 0
  4561                           	opt	stack 29
  4562                           	line	14
  4563                           	
  4564                           l1167:
  4565  000DC4                     ;uart.h: 14: PIE1bits.RCIE = 0b1;
  4566                           	bsf	((c:3997)),c,5	;volatile
  4567  000DC4  8A9D               	line	15
  4568                           ;uart.h: 15: INTCONbits.PEIE = 0b1;
  4569                           	bsf	((c:4082)),c,6	;volatile
  4570  000DC6  8CF2               	line	16
  4571                           ;uart.h: 16: INTCONbits.GIE = 0b1;
  4572                           	bsf	((c:4082)),c,7	;volatile
  4573  000DC8  8EF2               	line	19
  4574                           ;uart.h: 19: RCSTAbits.SPEN = 0b1;
  4575                           	bsf	((c:4011)),c,7	;volatile
  4576  000DCA  8EAB               	line	20
  4577                           ;uart.h: 20: RCSTAbits.RX9 = 0b0;
  4578                           	bcf	((c:4011)),c,6	;volatile
  4579  000DCC  9CAB               	line	21
  4580                           ;uart.h: 21: RCSTAbits.CREN = 0b1;
  4581                           	bsf	((c:4011)),c,4	;volatile
  4582  000DCE  88AB               	line	23
  4583                           ;uart.h: 23: TXSTAbits.TX9 = 0b0;
  4584                           	bcf	((c:4012)),c,6	;volatile
  4585  000DD0  9CAC               	line	24
  4586                           ;uart.h: 24: TXSTAbits.SYNC = 0b0;
  4587                           	bcf	((c:4012)),c,4	;volatile
  4588  000DD2  98AC               	line	25
  4589                           ;uart.h: 25: TXSTAbits.BRGH = 0b0;
  4590                           	bcf	((c:4012)),c,2	;volatile
  4591  000DD4  94AC               	line	26
  4592                           ;uart.h: 26: TXSTAbits.TXEN = 0b1;
  4593                           	bsf	((c:4012)),c,5	;volatile
  4594  000DD6  8AAC               	line	28
  4595                           ;uart.h: 28: BAUDCONbits.BRG16 = 0b0;
  4596                           	bcf	((c:4024)),c,3	;volatile
  4597  000DD8  96B8               	line	29
  4598                           ;uart.h: 29: BAUDCONbits.ABDEN = 0b0;
  4599                           	bcf	((c:4024)),c,0	;volatile
  4600  000DDA  90B8               	line	30
  4601                           	
  4602                           l1169:
  4603  000DDC                     ;uart.h: 30: SPBRG = 51;
  4604                           	movlw	low(033h)
  4605  000DDC  0E33               	movwf	((c:4015)),c	;volatile
  4606  000DDE  6EAF               	line	31
  4607                           	
  4608                           l79:
  4609  000DE0                     	return	;funcret
  4610  000DE0  0012               	opt stack 0
  4611                           GLOBAL	__end_of_UART_Init
  4612                           	__end_of_UART_Init:
  4613  000DE2                     	signat	_UART_Init,89
  4614                           	global	_IC_Init
  4615                           
  4616 ;; *************** function _IC_Init *****************
  4617 ;; Defined at:
  4618 ;;		line 2 in file "ic.h"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		None
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0
  4632 ;;      Params:         0       0
  4633 ;;      Locals:         0       0
  4634 ;;      Temps:          0       0
  4635 ;;      Totals:         0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           psect	text20,class=CODE,space=0,reloc=2,group=0
  4646                           	file	"ic.h"
  4647                           	line	2
  4648                           global __ptext20
  4649                           __ptext20:
  4650  000D22                     psect	text20
  4651                           	file	"ic.h"
  4652                           	line	2
  4653                           	global	__size_of_IC_Init
  4654                           	__size_of_IC_Init	equ	__end_of_IC_Init-_IC_Init
  4655  0000                     	
  4656                           _IC_Init:
  4657  000D22                     ;incstack = 0
  4658                           	opt	stack 29
  4659                           	line	4
  4660                           	
  4661                           l1177:
  4662  000D22                     ;ic.h: 4: TRISAbits.RA0 = 0b0;
  4663                           	bcf	((c:3986)),c,0	;volatile
  4664  000D22  9092               	line	5
  4665                           ;ic.h: 5: TRISAbits.RA1 = 0b1;
  4666                           	bsf	((c:3986)),c,1	;volatile
  4667  000D24  8292               	line	6
  4668                           ;ic.h: 6: TRISAbits.RA2 = 0b1;
  4669                           	bsf	((c:3986)),c,2	;volatile
  4670  000D26  8492               	line	7
  4671                           ;ic.h: 7: TRISAbits.RA3 = 0b1;
  4672                           	bsf	((c:3986)),c,3	;volatile
  4673  000D28  8692               	line	8
  4674                           ;ic.h: 8: TRISAbits.RA4 = 0b1;
  4675                           	bsf	((c:3986)),c,4	;volatile
  4676  000D2A  8892               	line	10
  4677                           ;ic.h: 10: TRISAbits.RA6 = 0b1;
  4678                           	bsf	((c:3986)),c,6	;volatile
  4679  000D2C  8C92               	line	11
  4680                           ;ic.h: 11: TRISAbits.RA7 = 0b1;
  4681                           	bsf	((c:3986)),c,7	;volatile
  4682  000D2E  8E92               	line	13
  4683                           ;ic.h: 13: TRISBbits.RB0 = 0b0;
  4684                           	bcf	((c:3987)),c,0	;volatile
  4685  000D30  9093               	line	14
  4686                           ;ic.h: 14: TRISBbits.RB1 = 0b0;
  4687                           	bcf	((c:3987)),c,1	;volatile
  4688  000D32  9293               	line	15
  4689                           ;ic.h: 15: TRISBbits.RB2 = 0b1;
  4690                           	bsf	((c:3987)),c,2	;volatile
  4691  000D34  8493               	line	16
  4692                           ;ic.h: 16: TRISBbits.RB3 = 0b0;
  4693                           	bcf	((c:3987)),c,3	;volatile
  4694  000D36  9693               	line	17
  4695                           ;ic.h: 17: TRISBbits.RB4 = 0b0;
  4696                           	bcf	((c:3987)),c,4	;volatile
  4697  000D38  9893               	line	18
  4698                           ;ic.h: 18: TRISBbits.RB5 = 0b0;
  4699                           	bcf	((c:3987)),c,5	;volatile
  4700  000D3A  9A93               	line	21
  4701                           ;ic.h: 21: ADCON1bits.PCFG3 = 0b0;
  4702                           	bcf	((c:4033)),c,3	;volatile
  4703  000D3C  96C1               	line	22
  4704                           ;ic.h: 22: ADCON1bits.PCFG2 = 0b1;
  4705                           	bsf	((c:4033)),c,2	;volatile
  4706  000D3E  84C1               	line	23
  4707                           ;ic.h: 23: ADCON1bits.PCFG1 = 0b1;
  4708                           	bsf	((c:4033)),c,1	;volatile
  4709  000D40  82C1               	line	24
  4710                           ;ic.h: 24: ADCON1bits.PCFG0 = 0b1;
  4711                           	bsf	((c:4033)),c,0	;volatile
  4712  000D42  80C1               	line	27
  4713                           ;ic.h: 27: OSCCONbits.IRCF0 = 0b1;
  4714                           	bsf	((c:4051)),c,4	;volatile
  4715  000D44  88D3               	line	28
  4716                           ;ic.h: 28: OSCCONbits.IRCF1 = 0b1;
  4717                           	bsf	((c:4051)),c,5	;volatile
  4718  000D46  8AD3               	line	29
  4719                           ;ic.h: 29: OSCCONbits.IRCF2 = 0b1;
  4720                           	bsf	((c:4051)),c,6	;volatile
  4721  000D48  8CD3               	line	32
  4722                           ;ic.h: 32: OSCTUNEbits.PLLEN = 1;
  4723                           	bsf	((c:3995)),c,6	;volatile
  4724  000D4A  8C9B               	line	35
  4725                           ;ic.h: 35: LATBbits.LATB0 = 0b0;
  4726                           	bcf	((c:3978)),c,0	;volatile
  4727  000D4C  908A               	line	36
  4728                           ;ic.h: 36: LATBbits.LATB1 = 0b0;
  4729                           	bcf	((c:3978)),c,1	;volatile
  4730  000D4E  928A               	line	38
  4731                           ;ic.h: 38: LATBbits.LATB4 = 0b0;
  4732                           	bcf	((c:3978)),c,4	;volatile
  4733  000D50  988A               	line	39
  4734                           ;ic.h: 39: LATBbits.LATB5 = 0b0;
  4735                           	bcf	((c:3978)),c,5	;volatile
  4736  000D52  9A8A               	line	40
  4737                           	
  4738                           l113:
  4739  000D54                     	return	;funcret
  4740  000D54  0012               	opt stack 0
  4741                           GLOBAL	__end_of_IC_Init
  4742                           	__end_of_IC_Init:
  4743  000D56                     	signat	_IC_Init,89
  4744                           	global	_ADC_Init
  4745                           
  4746 ;; *************** function _ADC_Init *****************
  4747 ;; Defined at:
  4748 ;;		line 8 in file "adc.h"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		None
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0
  4762 ;;      Params:         0       0
  4763 ;;      Locals:         0       0
  4764 ;;      Temps:          0       0
  4765 ;;      Totals:         0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           psect	text21,class=CODE,space=0,reloc=2,group=0
  4776                           	file	"adc.h"
  4777                           	line	8
  4778                           global __ptext21
  4779                           __ptext21:
  4780  000DE2                     psect	text21
  4781                           	file	"adc.h"
  4782                           	line	8
  4783                           	global	__size_of_ADC_Init
  4784                           	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  4785  0000                     	
  4786                           _ADC_Init:
  4787  000DE2                     ;incstack = 0
  4788                           	opt	stack 29
  4789                           	line	11
  4790                           	
  4791                           l1175:
  4792  000DE2                     ;adc.h: 11: ADCON0bits.CHS0 = 0b1;
  4793                           	bsf	((c:4034)),c,2	;volatile
  4794  000DE2  84C2               	line	12
  4795                           ;adc.h: 12: ADCON0bits.CHS1 = 0b1;
  4796                           	bsf	((c:4034)),c,3	;volatile
  4797  000DE4  86C2               	line	18
  4798                           ;adc.h: 18: ADCON1bits.VCFG0 = 0b0;
  4799                           	bcf	((c:4033)),c,4	;volatile
  4800  000DE6  98C1               	line	21
  4801                           ;adc.h: 21: ADCON1bits.PCFG3 = 0b0;
  4802                           	bcf	((c:4033)),c,3	;volatile
  4803  000DE8  96C1               	line	24
  4804                           ;adc.h: 24: ADCON2bits.ADFM = 0b1;
  4805                           	bsf	((c:4032)),c,7	;volatile
  4806  000DEA  8EC0               	line	27
  4807                           ;adc.h: 27: ADCON2bits.ACQT2 = 0b1;
  4808                           	bsf	((c:4032)),c,5	;volatile
  4809  000DEC  8AC0               	line	28
  4810                           ;adc.h: 28: ADCON2bits.ACQT1 = 0b0;
  4811                           	bcf	((c:4032)),c,4	;volatile
  4812  000DEE  98C0               	line	29
  4813                           ;adc.h: 29: ADCON2bits.ACQT1 = 0b0;
  4814                           	bcf	((c:4032)),c,4	;volatile
  4815  000DF0  98C0               	line	32
  4816                           ;adc.h: 32: ADCON2bits.ADCS2 = 0b0;
  4817                           	bcf	((c:4032)),c,2	;volatile
  4818  000DF2  94C0               	line	33
  4819                           ;adc.h: 33: ADCON2bits.ADCS1 = 0b0;
  4820                           	bcf	((c:4032)),c,1	;volatile
  4821  000DF4  92C0               	line	34
  4822                           ;adc.h: 34: ADCON2bits.ADCS0 = 0b0;
  4823                           	bcf	((c:4032)),c,0	;volatile
  4824  000DF6  90C0               	line	35
  4825                           	
  4826                           l104:
  4827  000DF8                     	return	;funcret
  4828  000DF8  0012               	opt stack 0
  4829                           GLOBAL	__end_of_ADC_Init
  4830                           	__end_of_ADC_Init:
  4831  000DFA                     	signat	_ADC_Init,89
  4832                           	global	_UART_add_buffer
  4833                           
  4834 ;; *************** function _UART_add_buffer *****************
  4835 ;; Defined at:
  4836 ;;		line 51 in file "uart.h"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0
  4850 ;;      Params:         0       0
  4851 ;;      Locals:         0       0
  4852 ;;      Temps:          4       0
  4853 ;;      Totals:         4       0
  4854 ;;Total ram usage:        4 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		Interrupt level 2
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	intcode,class=CODE,space=0,reloc=2
  4863                           global __pintcode
  4864                           __pintcode:
  4865  000008                     psect	intcode
  4866                           	file	"uart.h"
  4867                           	line	51
  4868                           	global	__size_of_UART_add_buffer
  4869                           	__size_of_UART_add_buffer	equ	__end_of_UART_add_buffer-_UART_add_buffer
  4870  0000                     	
  4871                           _UART_add_buffer:
  4872  000008                     ;incstack = 0
  4873                           	opt	stack 26
  4874                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  4875  000008  8244               	movff	fsr2l+0,??_UART_add_buffer+0
  4876  00000A  CFD9 F001          	movff	fsr2h+0,??_UART_add_buffer+1
  4877  00000E  CFDA F002          	movff	prodl+0,??_UART_add_buffer+2
  4878  000012  CFF3 F003          	movff	prodh+0,??_UART_add_buffer+3
  4879  000016  CFF4 F004          	line	54
  4880                           	
  4881                           i2l1237:
  4882  00001A                     ;uart.h: 54: LATAbits.LATA0 = 1;
  4883                           	bsf	((c:3977)),c,0	;volatile
  4884  00001A  8089               	line	55
  4885                           ;uart.h: 55: if (PIR1bits.RCIF) {
  4886                           	btfss	((c:3998)),c,5	;volatile
  4887  00001C  AA9E               	goto	i2u39_41
  4888  00001E  EF13  F000         	goto	i2u39_40
  4889  000022  EF15  F000         i2u39_41:
  4890  000026                     	goto	i2l1249
  4891  000026  EF31  F000         i2u39_40:
  4892  00002A                     	line	64
  4893                           	
  4894                           i2l1239:
  4895  00002A                     ;uart.h: 64: UART_buffer[UART_Buffer_Ptr] = RCREG;
  4896                           	movf	((c:_UART_Buffer_Ptr)),c,w
  4897  00002A  5031               	mullw	01h
  4898  00002C  0D01               	movlw	low(_UART_buffer)
  4899  00002E  0E32               	addwf	(prodl),c,w
  4900  000030  24F3               	movwf	c:fsr2l
  4901  000032  6ED9               	movlw	high(_UART_buffer)
  4902  000034  0E00               	addwfc	prod+1,w
  4903  000036  20F4               	movwf	1+c:fsr2l
  4904  000038  6EDA               	movff	(c:4014),indf2	;volatile
  4905  00003A  CFAE FFDF          
  4906                           	line	65
  4907                           	
  4908                           i2l1241:
  4909  00003E                     ;uart.h: 65: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr + (unsigne
                                 d char)1);
  4910                           	incf	((c:_UART_Buffer_Ptr)),c,w
  4911  00003E  2831               	movwf	((c:_UART_Buffer_Ptr)),c
  4912  000040  6E31               	line	66
  4913                           	
  4914                           i2l1243:
  4915  000042                     ;uart.h: 66: if (UART_Buffer_Ptr == 16)
  4916                           		movlw	16
  4917  000042  0E10               	xorwf	((c:_UART_Buffer_Ptr)),c,w
  4918  000044  1831               	btfss	status,2
  4919  000046  A4D8               	goto	i2u40_41
  4920  000048  EF28  F000         	goto	i2u40_40
  4921  00004C  EF2A  F000         
  4922                           i2u40_41:
  4923  000050                     	goto	i2l1247
  4924  000050  EF2E  F000         i2u40_40:
  4925  000054                     	line	67
  4926                           	
  4927                           i2l1245:
  4928  000054                     ;uart.h: 67: UART_Buffer_Ptr = (unsigned char)((unsigned char)UART_Buffer_Ptr - (unsigne
                                 d char)1);
  4929                           	decf	((c:_UART_Buffer_Ptr)),c,w
  4930  000054  0431               	movwf	((c:_UART_Buffer_Ptr)),c
  4931  000056  6E31               	goto	i2l1247
  4932  000058  EF2E  F000         	
  4933                           i2l100:
  4934  00005C                     	line	69
  4935                           	
  4936                           i2l1247:
  4937  00005C                     ;uart.h: 69: PIR1bits.RCIF = 0;
  4938                           	bcf	((c:3998)),c,5	;volatile
  4939  00005C  9A9E               	goto	i2l1249
  4940  00005E  EF31  F000         	line	71
  4941                           	
  4942                           i2l99:
  4943  000062                     	line	72
  4944                           	
  4945                           i2l1249:
  4946  000062                     ;uart.h: 71: };uart.h: 72: LATAbits.LATA0 = 0;
  4947                           	bcf	((c:3977)),c,0	;volatile
  4948  000062  9089               	line	73
  4949                           	
  4950                           i2l101:
  4951  000064                     	movff	??_UART_add_buffer+3,prodh+0
  4952  000064  C004  FFF4         	movff	??_UART_add_buffer+2,prodl+0
  4953  000068  C003  FFF3         	movff	??_UART_add_buffer+1,fsr2h+0
  4954  00006C  C002  FFDA         	movff	??_UART_add_buffer+0,fsr2l+0
  4955  000070  C001  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  4956  000074  9244               	retfie f
  4957  000076  0011               	opt stack 0
  4958                           GLOBAL	__end_of_UART_add_buffer
  4959                           	__end_of_UART_add_buffer:
  4960  000078                     	signat	_UART_add_buffer,89
  4961                           psect	smallconst
  4962                           	db 0	; dummy byte at the end
  4963  00016D  00                 	global	__smallconst
  4964                           	global	__mediumconst
  4965                           	GLOBAL	__activetblptr
  4966                           __activetblptr	EQU	2
  4967  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4968                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4969                           	GLOBAL	__Lrparam
  4970                           	FNCONF	rparam,??,?
  4971                           	GLOBAL	___rparam_used
  4972                           	___rparam_used EQU 1
  4973  0000                     	GLOBAL	___param_bank
  4974                           	___param_bank EQU 0
  4975  0000                     GLOBAL	__Lparam, __Hparam
  4976                           GLOBAL	__Lrparam, __Hrparam
  4977                           __Lparam	EQU	__Lrparam
  4978  0000                     __Hparam	EQU	__Hrparam
  4979  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  4980                           	global	btemp
  4981                           btemp:
  4982  000044                     	ds	1
  4983  000044                     	global	int$flags
  4984                           	int$flags	set btemp
  4985  0000                     	global	wtemp8
  4986                           	wtemp8 set btemp+1
  4987  0000                     	global	ttemp5
  4988                           	ttemp5 set btemp+1
  4989  0000                     	global	ttemp6
  4990                           	ttemp6 set btemp+4
  4991  0000                     	global	ttemp7
  4992                           	ttemp7 set btemp+8
  4993  0000                     	end


Data Sizes:
    Strings     108
    Constant    0
    Data        1
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     47      67
    BANK0           128      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[5]), STR_16(CODE[8]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), UART_buffer(COMRAM[16]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> send_Status@buffer(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> UART_buffer(COMRAM[16]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[4]), 
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[6]), 
		 -> STR_1(CODE[5]), send_Status@buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_send_Status
    _strstr->_strncmp
    _strncmp->_strlen
    _send_Status->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_Write_Text->_UART_Write_byte
    _ADC_Get->_delay_ms
    _delay_s->_delay_ms
    _UART_clean_buffer->_memset

Critical Paths under _UART_add_buffer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_add_buffer in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8851
                                             46 COMRAM     1     1      0
                           _ADC_Init
                            _IC_Init
                          _UART_Init
                    _UART_Write_Text
                  _UART_clean_buffer
                           _delay_ms
                            _delay_s
                        _send_Status
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    1857
                                             19 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     362
                                             10 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _send_Status                                         18    18      0    4196
                                             28 COMRAM    18    18      0
                            _ADC_Get
                    _UART_Write_Text
                            ___lldiv
                             ___lmul
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             20 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                             11 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      7     5      2    1192
                                              5 COMRAM     7     5      2
                    _UART_Write_byte
 ---------------------------------------------------------------------------------
 (3) _UART_Write_byte                                      1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get                                              6     4      2     501
                                              7 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     804
                                              7 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             3     1      2     478
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_clean_buffer                                    0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IC_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _UART_add_buffer                                      4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IC_Init
   _UART_Init
   _UART_Write_Text
     _UART_Write_byte
   _UART_clean_buffer
     _memset
   _delay_ms
   _delay_s
     _delay_ms
   _send_Status
     _ADC_Get
       _delay_ms
     _UART_Write_Text
       _UART_Write_byte
     ___lldiv
     ___lmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _UART_add_buffer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     2F      43       1       53.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43       5        0.0%
DATA                 0      0      43       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 11 14:12:18 2018

                        l70 0CF2                          l63 0CCE                          l71 0D20  
                        l64 0CBA                          l72 0D20                          l65 0CEC  
                        l66 0CEC                          l82 0DAC                          l90 09B8  
                        l83 0DAC                          l91 09B8                          l84 0DBE  
                        l69 0D02                          l85 0DC2                          l94 0DA4  
                        l79 0DE0                          l88 0978                          l89 093C  
                        u80 0DBA                          u81 0DB6                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l110 0C74  
                       l104 0DF8                         l200 092E                         l113 0D54  
                       l130 061E                         l122 0566                         l107 0C42  
                       l131 062E                         l123 0576                         l108 0C42  
                       l132 062E                         l124 0594                         l140 0260  
                       l109 0C54                         l125 05A4                         l141 0362  
                       l126 05C2                         l150 03C0                         l142 02A0  
                       l127 05D2                         l151 03D0                         l143 035E  
                       l128 05F0                         l160 04A0                         l152 042C  
                       l144 02EA                         l129 0600                         l161 04B0  
                       l153 0428                         l145 035A                         l137 01FA  
                       l162 04B4                         l154 042E                         l146 031E  
                       l138 022C                         l163 04B4                         l155 0442  
                       l139 0366                         l147 0356                         l156 0444  
                       l148 0352                         l157 0458                         l149 03D4  
                       l158 045E                         l175 0ACE                         l159 04AC  
                       l176 0AF0                         l193 091E                         l177 0B1A  
                       l194 08B6                         l178 0B2A                         l195 08A6  
                       l196 08C8                         l197 08CC                         l198 090A  
                       l199 091E                         l650 0A28                         l651 0A38  
                       l652 0A40                         l660 0AA0                         l645 0A38  
                       l661 0AB0                         l646 09E8                         l662 0AB8  
                       l830 0C0C                         l647 09DC                         l655 0AB0  
                       l831 0C2C                         l648 09FA                         l656 0A68  
                       l649 09FE                         l657 0A5C                         l842 0C96  
                       l658 0A7A                         l834 063C                         l843 0C82  
                       l659 0A7E                         l835 0672                         l844 0CB4  
                       l836 0688                         l860 07B2                         l845 0CB4  
                       l837 06D0                         l838 06FC                         l870 0B90  
                       l854 0780                         l839 0704                         l863 0B2C  
                       l871 0BB8                         l855 070A                         l864 0B56  
                       l872 0BD8                         l880 0876                         l856 0754  
                       l865 0B82                         l881 086A                         l857 07BE  
                       l866 0B76                         l875 084C                         l859 07AE  
                       l876 07C4                         l869 0B98                         l877 0840  
                       l879 0808                __CFG_CPB$OFF 000000                         u600 09F6  
                       u601 09F2                         u610 0A1A                __CFG_CPD$OFF 000000  
                       u611 0A16                         u700 09A4                         u620 0A54  
                       u621 0A50                         u710 09B4                         u630 0A76  
                       u711 09B0                         u631 0A72                         u720 0CB0  
                       u640 0A94                         u800 0BB4                         u721 0CAC  
                       u641 0A90                         u801 0BB0                         u650 0CE8  
                       u730 0C50                         u810 07DC                         u651 0CE4  
                       u731 0C4C                         u707 099A                         u811 07D8  
                       u660 066E                         u740 0BF0                         u900 05E0  
                       u820 0804                         u661 066A                         u741 0BEC  
                       u901 05DC                         u821 0800                         u750 0ADC  
                       u590 09D4                         u670 06CC                         u910 060E  
                       u830 0866                         u751 0AD8                         u591 09D0  
                       u671 06C8                         u911 060A                         u831 0862  
                       u760 0B1A                         u680 06F8                         u840 0B46  
                       u920 0744                         u761 0B16                         u681 06F4  
                       u841 0B42                         u921 0740                         u690 0968  
                       u770 089E                         u850 0B72                         u930 0792  
                       u771 089A                         u851 0B6E                         u931 078E  
                       u860 0D1C                         u780 08C4                         u940 07AA  
                       u861 0D18                         u781 08C0                         u941 07A6  
                       u790 08F4                         u870 0556                         u950 0220  
                       u791 08F0                         u871 0552                         u951 021C  
                       u880 0584                         u960 0252                         u697 095E  
                       u881 0580                         u961 024E                         u890 05B2  
                       u970 0286                         u891 05AE                         u971 0282  
                       u980 02C6                         u981 02C2                         u990 0310  
                       u991 030C             __end_of_ADC_Get 0C76                         prod 000FF3  
                       wreg 000FE8           _UART_clean_buffer 0D84                __CFG_WDT$OFF 000000  
                      l1011 0DA8                        l1013 0DBE                        l1401 0A42  
                      l1411 0A94                        l1403 0A54                        l1421 0CCE  
                      l1501 0ADC                        l1413 0AA0                        l1405 0A5C  
                      l1175 0DE2                        l1167 0DC4                        l1511 089E  
                      l1503 0AF0                        l1415 0AA6                        l1407 0A68  
                      l1431 0672                        l1423 0630                        l1177 0D22  
                      l1169 0DDC                        l1417 0CB6                        l1521 08F4  
                      l1513 08A6                        l1505 0AFA                        l1409 0A7E  
                      l1441 06CC                        l1433 067E                        l1425 063C  
                      l1601 05C2                        l1419 0CBA                        l1523 0904  
                      l1515 08B6                        l1507 0878                        l1451 0704  
                      l1443 06D4                        l1435 0688                        l1427 0658  
                      l1611 060E                        l1603 05D2                        l1531 0B90  
                      l1461 0978                        l1453 0930                        l1525 090A  
                      l1517 08CC                        l1509 0888                        l1381 09C2  
                      l1445 06E0                        l1437 06A0                        l1429 065C  
                      l1613 061E                        l1605 05E0                        l1533 0B98  
                      l1541 07C4                        l1621 0750                        l1701 0290  
                      l1463 0C76                        l1471 0C2E                        l1455 093C  
                      l1527 0914                        l1519 08D6                        l1391 0A04  
                      l1383 09D4                        l1447 06E6                        l1439 06BC  
                      l1607 05F0                        l1535 0BB8                        l1543 07DC  
                      l1551 084C                        l1631 07BE                        l1623 0754  
                      l1615 0706                        l1711 02CC                        l1703 0296  
                      l1465 0C82                        l1481 0C68                        l1473 0C30  
                      l1457 096A                        l1393 0A1A                        l1385 09DC  
                      l1449 06FC                        l1609 0600                        l1561 0B52  
                      l1537 0BD8                        l1529 0B84                        l1553 086A  
                      l1545 0808                        l1617 070A                        l1625 0780  
                      l1721 0314                        l1713 02D8                        l1705 02A0  
                      l1641 017C                        l1633 016E                        l1467 0C8E  
                      l1571 0CF2                        l1483 0C74                        l1475 0C3C  
                      l1459 0970                        l1395 0A22                        l1387 09E8  
                      l1379 09BA                        l1491 0C00                        l1563 0B56  
                      l1555 0876                        l1547 083C                        l1539 07C0  
                      l1627 0792                        l1619 0744                        l1731 0390  
                      l1723 031E                        l1715 02DA                        l1707 02C6  
                      l1651 0190                        l1643 0188                        l1635 0172  
                      l1469 0C96                        l1573 0D02                        l1477 0C54  
                      l1397 0A28                        l1389 09FE                        l1493 0C0C  
                      l1485 0BDA                        l1581 0520                        l1565 0B76  
                      l1557 0B2C                        l1549 0840                        l1629 07B2  
                      l1741 0412                        l1733 03B0                        l1725 0344  
                      l1709 02CA                        l1717 02EA                        l1661 01AE  
                      l1653 019C                        l1645 018A                        l1637 0176  
                      l1575 0D84                        l1479 0C66                        l1399 0A2E  
                      l1495 0C2C                        l1487 0BF0                        l1591 0576  
                      l1583 053C                        l1567 0B82                        l1559 0B46  
                      l1751 048C                        l1743 043C                        l1735 03C0  
                      l1727 0348                        l1719 0310                        l1671 01C2  
                      l1663 01B0                        l1655 019E                        l1647 018C  
                      l1639 017A             __end_of_IC_Init 0D56                        l1577 0DA0  
                      l1569 0CEE                        l1497 0ABA                        l1489 0BFC  
                      l1593 0584                        l1585 0548                        l1753 048E  
                      l1745 0452                        l1737 03D4                        l1729 0366  
                      l1681 01EA                        l1673 01CE                        l1665 01B2  
                      l1657 01A0                        l1649 018E                        l1499 0ACE  
                      l1595 0594                        l1587 0556                        l1579 04B8  
                      l1755 049A                        l1747 045E                        l1739 0402  
                      l1691 0252                        l1683 01FA                        l1675 01D0  
                      l1667 01BE                        l1659 01A2                        l1597 05A4  
                      l1589 0566                        l1757 04A0                        l1749 0470  
                      l1693 0256                        l1685 0220                        l1677 01D2  
                      l1669 01C0                        l1599 05B2                        l1759 04A4  
                      l1695 0260                        l1687 0224                        l1679 01DE  
                      l1697 0286                        l1689 022C                        l1699 028A  
                      STR_1 0160                        STR_2 0155                        STR_3 0161  
                      STR_4 0156                        STR_5 0165                        STR_6 0169  
                      STR_7 0161                        STR_8 0156                        STR_9 014B  
                      u1000 0344                        u1001 0340                        u1010 0378  
                      u1011 0370                        u1100 0452                        u1020 0390  
                      u1101 044E                        u1021 038C                        u1110 0470  
                      u1030 03A0                        u1111 046C                        u1031 039A  
                      u1120 048C                        u1121 0488                        u1050 03B0  
                      u1018 037A                        u1051 03AC                        u1060 03F0  
                      u1061 03E8                        u1045 03A2                        u1070 0402  
                      u1071 03FE                        u1080 0412                        u1137 0CC0  
                      u1081 040E                        u1090 043C                        u1091 0438  
                      u1068 03F2                        i2l99 0062                        _TRMT 007D61  
        ?_UART_clean_buffer 0001               __CFG_BOR$BOHW 000000           __CFG_T1OSCMX$HIGH 000000  
                      _main 016E                        _itoa 0BDA                        fsr2h 000FDA  
                      indf2 000FDF                        fsr2l 000FD9                        btemp 0044  
                      _utoa 0630            __end_of_ADC_Init 0DFA                        prodh 000FF4  
                      prodl 000FF3                        start 0078               __CFG_IESO$OFF 000000  
       ??_UART_clean_buffer 000D                ___param_bank 000000     __end_of_UART_add_buffer 0078  
   __end_of_UART_Write_Text 09BA     __end_of_UART_Write_byte 0DC4                       ?_main 0001  
                     ?_itoa 0015                       STR_10 0143                       STR_11 0110  
                     STR_12 011E                       STR_13 0101                       STR_14 014E  
                     STR_15 0147                       STR_16 013F                       STR_17 015B  
                     STR_18 0136                       STR_19 012C             __end_of___lldiv 0930  
                     ?_utoa 000C             __end_of___lwdiv 0A42                       i2l100 005C  
                     i2l101 0064             __end_of___lwmod 0ABA                       _RCREG 000FAE  
                     _SPBRG 000FAF                       _TXREG 000FAD               __CFG_PWRT$OFF 000000  
           __end_of_delay_s 0D22               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
       ___lmul@multiplicand 0009   __end_of_UART_clean_buffer 0DA6              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000          __size_of_UART_Init 001E  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _state 0030              __pbitbssCOMRAM 0210  
                     tablat 000FF5                       ttemp5 0045                       ttemp6 0048  
                     ttemp7 004C                       utoa@c 0014                       utoa@v 0012  
                     status 000FD8                       wtemp8 0045             __end_of_strncmp 0878  
           delay_s@repeat_3 0008              __CFG_MCLRE$OFF 000000             __initialization 0D56  
            __CFG_HPOL$HIGH 000000                __end_of_main 04B8                __end_of_itoa 0C2E  
              __end_of_utoa 0706                   ??_ADC_Get 000A              __CFG_LPOL$HIGH 000000  
                    ??_main 002F                      ??_itoa 001B                      ??_utoa 0012  
             __activetblptr 000002                   ??_IC_Init 0005                ?_send_Status 0001  
                    _ADRESH 000FC4                      _ADRESL 000FC3                      i2l1241 003E  
                    i2l1243 0042                      i2l1245 0054                      i2l1237 001A  
                    i2l1247 005C                      i2l1239 002A                      i2l1249 0062  
          __end_of_delay_ms 0CEE              __CFG_XINST$OFF 000000           __end_of_UART_Init 0DE2  
                    ___lmul 0ABA            ?_UART_add_buffer 0001              __CFG_STVREN$ON 000000  
          ?_UART_Write_Text 0006                   ??___lldiv 000D                   ??___lwdiv 0009  
                 ??___lwmod 0009            ?_UART_Write_byte 0001                      _memset 0C76  
                    clear_0 0D70           send_Status@buffer 001D                   ??_delay_s 000A  
                    _strchr 0B2C                      _strlen 0B84                      _strstr 0706  
                    itoa@cp 001B                __pdataCOMRAM 0043                   ?_ADC_Init 0001  
              __mediumconst 0000  __size_of_UART_clean_buffer 0022                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ??_strncmp 0011  
                __accesstop 0080     __end_of__initialization 0D76             __CFG_FLTAMX$RA5 000000  
              _AC_POWER_old 0210               ___rparam_used 000001              __pcstackCOMRAM 0001  
           __CFG_OSC$INTIO2 000000                  ??_ADC_Init 0005                     ?___lmul 0005  
                   ?_memset 0005              ___lmul@product 000D                     _ADC_Get 0C2E  
                   ?_strchr 0005                     ?_strlen 0005                     ?_strstr 0014  
          __CFG_BBSIZ$BB256 000000                     _IC_Init 0D22                   ?_delay_ms 0005  
                   i2u40_40 0054                     i2u40_41 0050                     i2u39_40 002A  
                   i2u39_41 0026        __size_of_send_Status 0178             __CFG_PWMPIN$OFF 000000  
          delay_ms@repeat_2 0005                     __Hparam 0000                     __Lparam 0000  
           __size_of___lmul 0072                     ___lldiv 0878       UART_Write_Text@toSend 000A  
                   ___lwdiv 09BA                     ___lwmod 0A42                __psmallconst 0100  
                   __pcinit 0D56             __size_of_memset 0040                     _delay_s 0CEE  
                   __ramtop 0100                     __ptext0 016E                     __ptext1 0706  
                   __ptext2 07C0                     __ptext3 0B84                     __ptext4 0B2C  
                   __ptext5 04B8                     __ptext6 0BDA                     __ptext7 0630  
                   __ptext8 0A42                     __ptext9 09BA             __size_of_strchr 0058  
           __size_of_strlen 0056             __size_of_strstr 00BA                  ??_delay_ms 0007  
                   _strncmp 07C0        end_of_initialization 0D76                     itoa@buf 0015  
                   memset@c 0007                     itoa@val 0017                     memset@n 0009  
                   memset@p 000B               __Lmediumconst 0000             ___lldiv@divisor 0009  
            ADC_Get@advalue 000C             ___lldiv@counter 0011                   _RCSTAbits 000FAB  
                   postinc0 000FEE                     postinc2 000FDE                     utoa@buf 000C  
                   utoa@val 000E                     strlen@s 0005                   _UART_Init 0DC4  
                 _PORTAbits 000F80                   _PORTBbits 000F81                   _TRISAbits 000F92  
                 _TRISBbits 000F93           __size_of_ADC_Init 0018                   _TXSTAbits 000FAC  
            __end_of___lmul 0B2C                 _BAUDCONbits 000FB8                  ?_UART_Init 0001  
             __pidataCOMRAM 0DFA              __end_of_memset 0CB6    __size_of_UART_add_buffer 0070  
  __size_of_UART_Write_Text 008A              __end_of_strchr 0B84              __end_of_strlen 0BDA  
            __end_of_strstr 07C0         start_initialization 0D56    __size_of_UART_Write_byte 001E  
                  ??___lmul 000D                    ??_memset 000B                    ?_ADC_Get 0008  
                  ??_strchr 0009                    ??_strlen 0007                    ??_strstr 0018  
               __pbssCOMRAM 0030                    ?_IC_Init 0001           __size_of_delay_ms 0038  
          ___lwdiv@dividend 0005                   __pintcode 0008                    ?___lldiv 0005  
                  ?___lwdiv 0005                    ?___lwmod 0005                 ??_UART_Init 0005  
                  ?_delay_s 0008                 __smallconst 0100               ??_send_Status 001D  
                  _ADC_Init 0DE2            ___lwdiv@quotient 0009                    ?_strncmp 000B  
         ??_UART_add_buffer 0001           ??_UART_Write_Text 0008           ??_UART_Write_byte 0005  
                 _old_state 0043                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          __size_of_ADC_Get 0048                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
                _ADCON2bits 000FC0            __size_of_IC_Init 0034             _UART_Buffer_Ptr 0031  
         ___lmul@multiplier 0005         __end_of_send_Status 0630                    __Hrparam 0000  
                  __Lrparam 0000             send_Status@temp 0027            __size_of___lldiv 00B8  
          __size_of___lwdiv 0088            __size_of___lwmod 0078            __size_of_delay_s 0034  
                  _delay_ms 0CB6         send_Status@adcValue 002B             ___lwdiv@divisor 0007  
           ___lwdiv@counter 000B                    __ptext10 0ABA                    __ptext11 0878  
                  __ptext20 0D22                    __ptext12 0930                    __ptext21 0DE2  
                  __ptext13 0DA6                    __ptext14 0C2E                    __ptext15 0CEE  
                  __ptext16 0CB6                    __ptext17 0D84                    __ptext18 0C76  
                  __ptext19 0DC4         send_Status@batValue 002D            __size_of_strncmp 00B8  
       UART_Write_Text@text 0006               __size_of_main 034A               __size_of_itoa 0054  
             __size_of_utoa 00D6                  strncmp@len 000F                    int$flags 0044  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2                 _send_Status 04B8  
                  itoa@base 0019                    memset@p1 0005                    intlevel2 0000  
                 strchr@chr 0007            ___lwmod@dividend 0005                   strchr@ptr 0005  
          ___lldiv@dividend 0005                   strncmp@s1 000B                   strncmp@s2 000D  
                _OSCCONbits 000FD3         UART_Write_byte@data 0005                 _UART_buffer 0032  
                  utoa@base 0010             _UART_add_buffer 0008             _UART_Write_Text 0930  
           _UART_Write_byte 0DA6            ___lldiv@quotient 000D             ___lwmod@divisor 0007  
                  strlen@cp 0009             ___lwmod@counter 0009                    strstr@s1 0014  
                  strstr@s2 0016            UART_Write_Text@i 000B  
